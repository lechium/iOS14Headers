//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "AVCaptureVideoDataOutputSampleBufferDelegate-Protocol.h"
#import "MAGFilterSelectionViewControllerDelegate-Protocol.h"
#import "MAGLiveMagnifierViewDelegate-Protocol.h"
#import "MAGLiveViewControlPanelDelegate-Protocol.h"
#import "MAGSnapshotViewDelegate-Protocol.h"

@class AVCaptureDevice, AVCapturePhotoOutput, AVCaptureSession, AVCaptureVideoDataOutput, AVCaptureVideoPreviewLayer, AXDispatchTimer, MAGAutoBrightnessManager, MAGControlPanel, MAGFilterSelectionViewController, MAGFilterSelectionZoomTransitioningDelegate, MAGLiveMagnifierView, MAGSnapshotView, NSLayoutConstraint, NSObject, NSString, UIImage, UITapGestureRecognizer;
@protocol AVCapturePhotoCaptureDelegate, NSObject, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface MAGRootViewController : UIViewController <MAGFilterSelectionViewControllerDelegate, MAGLiveViewControlPanelDelegate, MAGLiveMagnifierViewDelegate, MAGSnapshotViewDelegate, AVCaptureVideoDataOutputSampleBufferDelegate>
{
    _Bool _torchOnWhenSnapshotTaken;	// 8 = 0x8
    _Bool _cameraDeviceHasTorch;	// 9 = 0x9
    _Bool _viewHasAppeared;	// 10 = 0xa
    _Bool _proceedWithControlsHidingForSnapshotView;	// 11 = 0xb
    _Bool _transitioningToSnapshotView;	// 12 = 0xc
    _Bool _adjustingMagnificationFactorViaControlPanel;	// 13 = 0xd
    NSObject<OS_dispatch_queue> *_sessionQueue;	// 16 = 0x10
    AVCaptureDevice *_cameraDevice;	// 24 = 0x18
    AVCaptureSession *_currentSession;	// 32 = 0x20
    AVCapturePhotoOutput *_photoOutput;	// 40 = 0x28
    AVCaptureVideoDataOutput *_videoDataOutput;	// 48 = 0x30
    AVCaptureVideoPreviewLayer *_previewLayer;	// 56 = 0x38
    MAGLiveMagnifierView *_liveMagnifierView;	// 64 = 0x40
    MAGControlPanel *_liveViewControlPanel;	// 72 = 0x48
    double _zoomFactorAtGestureStart;	// 80 = 0x50
    NSLayoutConstraint *_liveViewControlPanelOnscreenYConstraint;	// 88 = 0x58
    NSLayoutConstraint *_liveViewControlPanelOffscreenYConstraint;	// 96 = 0x60
    NSObject<OS_dispatch_queue> *_videoSampleQueue;	// 104 = 0x68
    id <NSObject> _lastVideoSample;	// 112 = 0x70
    NSString *_hqSnapshotFilesystemPath;	// 120 = 0x78
    id <AVCapturePhotoCaptureDelegate> _currentPhotoCaptureDelegate;	// 128 = 0x80
    MAGSnapshotView *_snapshotView;	// 136 = 0x88
    UITapGestureRecognizer *_snapshotViewTapGestureRecognizer;	// 144 = 0x90
    UITapGestureRecognizer *_snapshotViewDoubleTapGestureRecognizer;	// 152 = 0x98
    MAGFilterSelectionZoomTransitioningDelegate *_filterSelectionTransitioningDelegate;	// 160 = 0xa0
    MAGFilterSelectionViewController *_presentedFilterSelectionVC;	// 168 = 0xa8
    CDUnknownBlockType _snapshotReplacementBlockForUnitTesting;	// 176 = 0xb0
    CDUnknownBlockType _finishedRampingVideoZoomCallback;	// 184 = 0xb8
    MAGAutoBrightnessManager *_autoBrightnessManager;	// 192 = 0xc0
    AXDispatchTimer *_activeInactiveTimer;	// 200 = 0xc8
    UIImage *_savedHiResImageForLockScreenActivation;	// 208 = 0xd0
    double _savedMagnificationFactorForLockScreenActivation;	// 216 = 0xd8
}

- (void).cxx_destruct;	// IMP=0x0000000100012f50
@property(nonatomic) double savedMagnificationFactorForLockScreenActivation; // @synthesize savedMagnificationFactorForLockScreenActivation=_savedMagnificationFactorForLockScreenActivation;
@property(retain, nonatomic) UIImage *savedHiResImageForLockScreenActivation; // @synthesize savedHiResImageForLockScreenActivation=_savedHiResImageForLockScreenActivation;
@property(retain, nonatomic) AXDispatchTimer *activeInactiveTimer; // @synthesize activeInactiveTimer=_activeInactiveTimer;
@property(retain, nonatomic) MAGAutoBrightnessManager *autoBrightnessManager; // @synthesize autoBrightnessManager=_autoBrightnessManager;
@property(copy, nonatomic) CDUnknownBlockType finishedRampingVideoZoomCallback; // @synthesize finishedRampingVideoZoomCallback=_finishedRampingVideoZoomCallback;
@property(copy, nonatomic) CDUnknownBlockType snapshotReplacementBlockForUnitTesting; // @synthesize snapshotReplacementBlockForUnitTesting=_snapshotReplacementBlockForUnitTesting;
@property(retain, nonatomic) MAGFilterSelectionViewController *presentedFilterSelectionVC; // @synthesize presentedFilterSelectionVC=_presentedFilterSelectionVC;
@property(retain, nonatomic) MAGFilterSelectionZoomTransitioningDelegate *filterSelectionTransitioningDelegate; // @synthesize filterSelectionTransitioningDelegate=_filterSelectionTransitioningDelegate;
@property(nonatomic) _Bool adjustingMagnificationFactorViaControlPanel; // @synthesize adjustingMagnificationFactorViaControlPanel=_adjustingMagnificationFactorViaControlPanel;
@property(retain, nonatomic) UITapGestureRecognizer *snapshotViewDoubleTapGestureRecognizer; // @synthesize snapshotViewDoubleTapGestureRecognizer=_snapshotViewDoubleTapGestureRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *snapshotViewTapGestureRecognizer; // @synthesize snapshotViewTapGestureRecognizer=_snapshotViewTapGestureRecognizer;
@property(nonatomic) _Bool transitioningToSnapshotView; // @synthesize transitioningToSnapshotView=_transitioningToSnapshotView;
@property(nonatomic) _Bool proceedWithControlsHidingForSnapshotView; // @synthesize proceedWithControlsHidingForSnapshotView=_proceedWithControlsHidingForSnapshotView;
@property(retain, nonatomic) MAGSnapshotView *snapshotView; // @synthesize snapshotView=_snapshotView;
@property(retain, nonatomic) id <AVCapturePhotoCaptureDelegate> currentPhotoCaptureDelegate; // @synthesize currentPhotoCaptureDelegate=_currentPhotoCaptureDelegate;
@property(retain, nonatomic) NSString *hqSnapshotFilesystemPath; // @synthesize hqSnapshotFilesystemPath=_hqSnapshotFilesystemPath;
@property(nonatomic) _Bool viewHasAppeared; // @synthesize viewHasAppeared=_viewHasAppeared;
@property(nonatomic) _Bool cameraDeviceHasTorch; // @synthesize cameraDeviceHasTorch=_cameraDeviceHasTorch;
@property(nonatomic) _Bool torchOnWhenSnapshotTaken; // @synthesize torchOnWhenSnapshotTaken=_torchOnWhenSnapshotTaken;
@property(retain) id <NSObject> lastVideoSample; // @synthesize lastVideoSample=_lastVideoSample;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *videoSampleQueue; // @synthesize videoSampleQueue=_videoSampleQueue;
@property(retain, nonatomic) NSLayoutConstraint *liveViewControlPanelOffscreenYConstraint; // @synthesize liveViewControlPanelOffscreenYConstraint=_liveViewControlPanelOffscreenYConstraint;
@property(retain, nonatomic) NSLayoutConstraint *liveViewControlPanelOnscreenYConstraint; // @synthesize liveViewControlPanelOnscreenYConstraint=_liveViewControlPanelOnscreenYConstraint;
@property(nonatomic) double zoomFactorAtGestureStart; // @synthesize zoomFactorAtGestureStart=_zoomFactorAtGestureStart;
@property(retain, nonatomic) MAGControlPanel *liveViewControlPanel; // @synthesize liveViewControlPanel=_liveViewControlPanel;
@property(retain, nonatomic) MAGLiveMagnifierView *liveMagnifierView; // @synthesize liveMagnifierView=_liveMagnifierView;
@property(retain, nonatomic) AVCaptureVideoPreviewLayer *previewLayer; // @synthesize previewLayer=_previewLayer;
@property(retain, nonatomic) AVCaptureVideoDataOutput *videoDataOutput; // @synthesize videoDataOutput=_videoDataOutput;
@property(retain, nonatomic) AVCapturePhotoOutput *photoOutput; // @synthesize photoOutput=_photoOutput;
@property(retain, nonatomic) AVCaptureSession *currentSession; // @synthesize currentSession=_currentSession;
@property(retain, nonatomic) AVCaptureDevice *cameraDevice; // @synthesize cameraDevice=_cameraDevice;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *sessionQueue; // @synthesize sessionQueue=_sessionQueue;
- (void)resetForUnitTesting;	// IMP=0x0000000100012a58
- (void)waitForCameraOperationsToFinishWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000010001299c
- (id)snapshotViewForUnitTesting;	// IMP=0x0000000100012990
- (id)cameraDeviceForUnitTesting;	// IMP=0x0000000100012984
- (id)controlPanelForUnitTesting;	// IMP=0x0000000100012978
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;	// IMP=0x000000010001275c
- (_Bool)prefersStatusBarHidden;	// IMP=0x0000000100012754
- (void)filterSelectionMadeInViewController:(id)arg1;	// IMP=0x00000001000126e4
- (void)updateFiltersForCurrentAmbientBrightness;	// IMP=0x0000000100011fec
- (void)resumeFromTransitionWithFilterSelectionVCAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100011f78
- (void)prepForTransitionWithFilterSelectionVCAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100011f04
- (void)unblackoutCurrentImageForReducedMotionFilterSelectionTransitionAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100011eec
- (void)blackoutCurrentImageForReducedMotionFilterSelectionTransitionAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100011ed4
- (void)performActivationTransitions;	// IMP=0x0000000100011a00
- (void)performDeactivationTransitions;	// IMP=0x00000001000117c8
- (void)changeBlackoutStatusTo:(_Bool)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010001161c
- (void)reconnectPreviewLayerFromFilterSelectionTransitionIfNecessary;	// IMP=0x00000001000114c8
- (void)disconnectPreviewLayerForFilterSelectionTransitionIfNecessary;	// IMP=0x0000000100011460
- (void)filtersButtonLongPressedForControlPanel:(id)arg1;	// IMP=0x0000000100011454
- (void)filtersButtonPressedForControlPanel:(id)arg1;	// IMP=0x000000010001117c
- (_Bool)showingSnapshot;	// IMP=0x0000000100011140
- (void)snapshotViewPanned:(id)arg1;	// IMP=0x00000001000110f0
- (void)snapshotViewZoomed:(id)arg1;	// IMP=0x000000010001102c
- (void)snapshotViewDoubleTapped:(id)arg1;	// IMP=0x0000000100011018
- (void)snapshotViewTapped:(id)arg1;	// IMP=0x0000000100010fb8
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0000000100010f90
- (void)saveSnapshotToCameraRoll:(id)arg1;	// IMP=0x0000000100010b44
- (void)shareSnapshot:(id)arg1;	// IMP=0x0000000100010868
- (void)setSnapshotMagnificationFactor:(double)arg1 animated:(_Bool)arg2;	// IMP=0x0000000100010810
- (void)setupSnapshotViewwithLowResolutionStartImage:(id)arg1 highResolutionFinalImage:(id)arg2 startingZoomFactor:(double)arg3 startBlackedOut:(_Bool)arg4;	// IMP=0x00000001000100c8
- (void)transitionToSnapshotFromLiveView;	// IMP=0x000000010000ef2c
- (id)imageFromLastVideoSample;	// IMP=0x000000010000eda4
- (void)finishedRampingVideoZoom;	// IMP=0x000000010000ed28
- (void)transitionToLiveViewFromSnapshotView;	// IMP=0x000000010000e874
- (void)updateZoomViewsAXHidden;	// IMP=0x000000010000e774
- (void)removeHQSnapshotFile;	// IMP=0x000000010000e658
- (void)transitionLiveMagnifierViewBackToNormal;	// IMP=0x000000010000e4a0
- (void)restartSessionFromSnapshot:(CDUnknownBlockType)arg1;	// IMP=0x000000010000e2a8
- (void)pauseSessionForSnapshot;	// IMP=0x000000010000e1e8
- (void)restartSessionAndTransitionLiveMagnifierBackToNormal;	// IMP=0x000000010000e124
- (void)volumeButtonPressed;	// IMP=0x000000010000e074
- (void)snapshotButtonPressedForControlPanel:(id)arg1;	// IMP=0x000000010000e01c
- (void)zoomSliderValueChanged:(double)arg1 forControlPanel:(id)arg2;	// IMP=0x000000010000df74
- (void)torchModeChangedTo:(_Bool)arg1 forControlPanel:(id)arg2;	// IMP=0x000000010000df68
- (void)manualFocusChangedTo:(_Bool)arg1 forControlPanel:(id)arg2;	// IMP=0x000000010000dec8
- (void)liveMagnifierViewAccessibilityIncremented:(id)arg1;	// IMP=0x000000010000de58
- (void)liveMagnifierViewAccessibilityDecremented:(id)arg1;	// IMP=0x000000010000dde8
- (void)setTorchOn:(_Bool)arg1;	// IMP=0x000000010000dbc8
- (void)viewDidDisappear:(_Bool)arg1;	// IMP=0x000000010000db20
- (void)viewDidAppear:(_Bool)arg1;	// IMP=0x000000010000d9cc
- (void)fingerDidPan:(id)arg1;	// IMP=0x000000010000d820
- (void)fingersDidPinch:(id)arg1;	// IMP=0x000000010000d6c0
- (void)fingerDidTap:(id)arg1;	// IMP=0x000000010000d628
- (void)fingerDidDoubleTap:(id)arg1;	// IMP=0x000000010000d61c
- (void)animateControlPanelOut:(CDUnknownBlockType)arg1;	// IMP=0x000000010000d3fc
- (void)animateControlPanelIn:(CDUnknownBlockType)arg1;	// IMP=0x000000010000d188
- (_Bool)controlPanelActive;	// IMP=0x000000010000d13c
- (void)disconnectPreviewLayerFromSession;	// IMP=0x000000010000d0f8
- (void)loadView;	// IMP=0x000000010000c7c8
- (_Bool)_canShowWhileLocked;	// IMP=0x000000010000c7c0
- (void)manualFocusOnViewPoint:(struct CGPoint)arg1;	// IMP=0x000000010000c6b0
- (void)switchToAutofocusMode;	// IMP=0x000000010000c55c
- (void)lockFocus;	// IMP=0x000000010000c54c
- (void)setFocusPointFromViewPoint:(struct CGPoint)arg1;	// IMP=0x000000010000c3c8
- (void)switchToFocusMode:(long long)arg1;	// IMP=0x000000010000c15c
- (void)createSessionIfNeededConnectingPreviewLayer:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010000bea8
- (void)_startSessionConnectingPreviewLayer:(id)arg1;	// IMP=0x000000010000b654
- (void)endSession;	// IMP=0x000000010000b2bc
- (void)currentMagnificationFactor:(CDUnknownBlockType)arg1;	// IMP=0x000000010000b194
- (double)_currentMagnificationFactor;	// IMP=0x000000010000b0cc
- (void)setLiveMagnificationFactor:(double)arg1;	// IMP=0x000000010000ad90
- (void)executeBlockSynchronouslyWithLockedCameraDevice:(CDUnknownBlockType)arg1;	// IMP=0x000000010000ad1c
- (void)executeBlockAsynchronouslyWithLockedCameraDevice:(CDUnknownBlockType)arg1;	// IMP=0x000000010000abf8
- (void)_executeBlockWithLockedCameraDevice:(CDUnknownBlockType)arg1;	// IMP=0x000000010000aad4
- (id)_bestCaptureFormatForDevice:(id)arg1;	// IMP=0x000000010000a964
- (id)_bestCaptureDevice;	// IMP=0x000000010000a1d0
- (long long)bestStabilizationModeForDevice:(id)arg1;	// IMP=0x000000010000a11c
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;	// IMP=0x000000010000a0b4
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000100009eac
- (void)dealloc;	// IMP=0x0000000100009e34
- (id)init;	// IMP=0x0000000100009b54

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import "SRCompactUserUtteranceViewDelegate-Protocol.h"
#import "SRSiriStackableContent-Protocol.h"
#import "SiriUIExpandablePlatterPanGestureRecognizerDelegate-Protocol.h"

@class NSArray, NSString, PLPlatterView, SRCompactServerUtteranceView, SRCompactUserUtteranceView, SRSiriViewStackConstraints, SRSpeechRecognitionHypothesis, SiriUIAdaptiveGrabberView, SiriUIExpandablePlatterPanGestureRecognizer, UIScrollView;
@protocol SRCompactConversationViewDelegate, SRSiriStackableContentDelegate;

@interface SRCompactConversationView : UIView <SRCompactUserUtteranceViewDelegate, SiriUIExpandablePlatterPanGestureRecognizerDelegate, SRSiriStackableContent>
{
    SRCompactUserUtteranceView *_userUtteranceView;	// 8 = 0x8
    PLPlatterView *_platterView;	// 16 = 0x10
    UIView *_containerView;	// 24 = 0x18
    SiriUIAdaptiveGrabberView *_grabberView;	// 32 = 0x20
    _Bool _automaticallyCollapseWhenResultIsScrolled;	// 40 = 0x28
    double _currentExpandedGestureHeight;	// 48 = 0x30
    _Bool useLowerPriorityHeightConstraint;	// 56 = 0x38
    _Bool _currentlyTrackingGesture;	// 57 = 0x39
    _Bool _showingCollapsedUI;	// 58 = 0x3a
    long long attachmentType;	// 64 = 0x40
    double attachmentYOffset;	// 72 = 0x48
    id <SRSiriStackableContentDelegate> stackContainerDelegate;	// 80 = 0x50
    SRSiriViewStackConstraints *stackConstraints;	// 88 = 0x58
    id <SRCompactConversationViewDelegate> _delegate;	// 96 = 0x60
    SRSpeechRecognitionHypothesis *_speechRecognitionHypothesis;	// 104 = 0x68
    NSArray *_serverUtterances;	// 112 = 0x70
    NSArray *_conversationSnippetViews;	// 120 = 0x78
    UIScrollView *_scrollView;	// 128 = 0x80
    long long _currentExpandablePlatterStyle;	// 136 = 0x88
    SiriUIExpandablePlatterPanGestureRecognizer *_expandablePlatterGesture;	// 144 = 0x90
    UIView *_conversationSnippetContainerView;	// 152 = 0x98
    SRCompactServerUtteranceView *_serverUtteranceView;	// 160 = 0xa0
}

- (void).cxx_destruct;	// IMP=0x000000010007a038
@property(retain, nonatomic, getter=_serverUtteranceView, setter=_setServerUtteranceView:) SRCompactServerUtteranceView *serverUtteranceView; // @synthesize serverUtteranceView=_serverUtteranceView;
@property(retain, nonatomic) UIView *conversationSnippetContainerView; // @synthesize conversationSnippetContainerView=_conversationSnippetContainerView;
@property(retain, nonatomic) SiriUIExpandablePlatterPanGestureRecognizer *expandablePlatterGesture; // @synthesize expandablePlatterGesture=_expandablePlatterGesture;
@property(nonatomic) long long currentExpandablePlatterStyle; // @synthesize currentExpandablePlatterStyle=_currentExpandablePlatterStyle;
@property(nonatomic) _Bool showingCollapsedUI; // @synthesize showingCollapsedUI=_showingCollapsedUI;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(readonly, nonatomic, getter=isCurrentlyTrackingGesture) _Bool currentlyTrackingGesture; // @synthesize currentlyTrackingGesture=_currentlyTrackingGesture;
@property(copy, nonatomic) NSArray *conversationSnippetViews; // @synthesize conversationSnippetViews=_conversationSnippetViews;
@property(copy, nonatomic) NSArray *serverUtterances; // @synthesize serverUtterances=_serverUtterances;
@property(copy, nonatomic) SRSpeechRecognitionHypothesis *speechRecognitionHypothesis; // @synthesize speechRecognitionHypothesis=_speechRecognitionHypothesis;
@property(nonatomic) __weak id <SRCompactConversationViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool useLowerPriorityHeightConstraint; // @synthesize useLowerPriorityHeightConstraint;
@property(retain, nonatomic) SRSiriViewStackConstraints *stackConstraints; // @synthesize stackConstraints;
@property(nonatomic) __weak id <SRSiriStackableContentDelegate> stackContainerDelegate; // @synthesize stackContainerDelegate;
@property(nonatomic) double attachmentYOffset; // @synthesize attachmentYOffset;
@property(nonatomic) long long attachmentType; // @synthesize attachmentType;
- (struct CGSize)_sizeThatFits:(struct CGSize)arg1 forSnippet:(id)arg2;	// IMP=0x0000000100079d94
- (struct CGSize)_sizeThatFitsAllSnippets:(struct CGSize)arg1;	// IMP=0x0000000100079c14
- (void)expandablePlatterGestureDidEndWithRecognizer:(id)arg1;	// IMP=0x0000000100079bf8
- (void)expandablePlatterGestureDidBeginWithRecognizer:(id)arg1;	// IMP=0x0000000100079b70
- (void)_updateExpandedHeight;	// IMP=0x0000000100079ae8
- (void)expandablePlatterGesture:(id)arg1 trackingGestureDidUpdateHeight:(double)arg2;	// IMP=0x00000001000799ec
- (void)expandablePlatterGesture:(id)arg1 didCompleteTransitionToStyle:(long long)arg2 phaseHeight:(double)arg3;	// IMP=0x0000000100079948
- (void)userUtteranceViewTapped:(id)arg1;	// IMP=0x0000000100079900
- (void)transitionToExpandablePlatterStyle:(long long)arg1;	// IMP=0x00000001000797e0
- (void)setShowCollapsedUI:(_Bool)arg1;	// IMP=0x0000000100079654
- (void)updateContentSizeWithAnimation:(_Bool)arg1;	// IMP=0x00000001000795a8
- (void)relayout;	// IMP=0x0000000100079598
- (struct CGSize)intrinsicContentSize;	// IMP=0x0000000100079520
- (struct CGSize)_fittingSize;	// IMP=0x0000000100079494
- (void)snippetContentDidUpdate;	// IMP=0x0000000100079484
@property(readonly, nonatomic, getter=willAutomaticallyCollapseWhenResultIsScrolled) _Bool automaticallyCollapseWhenResultIsScrolled;
- (_Bool)contentSupportsCollapsingForHeight:(double)arg1;	// IMP=0x0000000100079404
- (void)_resetExpansionStateForNewContent;	// IMP=0x0000000100078d4c
@property(readonly, nonatomic) struct CGSize portraitContentSize;
- (void)_updateExpandableDrawerUI;	// IMP=0x0000000100078c38
- (void)layoutSubviews;	// IMP=0x00000001000786a8
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;	// IMP=0x00000001000785bc
- (void)_setupSubviews;	// IMP=0x00000001000780f0
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000100078098

// Remaining properties
@property(retain, nonatomic) NSArray *customAttachmentConstraints;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


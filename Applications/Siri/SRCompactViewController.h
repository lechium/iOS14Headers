//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "SRBlurFromRootNavigationTransitionControllerDelegate-Protocol.h"
#import "SRCompactEditableUtterancePresenterDelegate-Protocol.h"
#import "SRCompactViewDelegate-Protocol.h"
#import "SRCompactViewModelChangeObserving-Protocol.h"
#import "SiriUIPanDismissalGestureRecognizerDelegate-Protocol.h"
#import "SiriUISnippetViewControllerDelegate-Protocol.h"
#import "SiriUISnippetViewControllerDelegatePrivate-Protocol.h"
#import "UINavigationControllerDelegate-Protocol.h"

@class NSArray, NSString, SRCompactEditableUtterancePresenter, SRCompactResultViewController, SRCompactView, SRSiriViewStackContainerController, SRSpeechRecognitionHypothesis, SiriUIBackgroundBlurViewController, SiriUINavigationController, SiriUIPanDismissalGestureRecognizer;
@protocol SRCompactViewControllerDelegate;

@interface SRCompactViewController : UIViewController <SiriUISnippetViewControllerDelegate, SiriUISnippetViewControllerDelegatePrivate, SRCompactViewDelegate, SRBlurFromRootNavigationTransitionControllerDelegate, SRCompactEditableUtterancePresenterDelegate, SiriUIPanDismissalGestureRecognizerDelegate, UINavigationControllerDelegate, SRCompactViewModelChangeObserving>
{
    double _presentationTime;	// 8 = 0x8
    id <SRCompactViewControllerDelegate> _delegate;	// 16 = 0x10
    NSArray *_activeTranscriptItems;	// 24 = 0x18
    NSArray *_activeConversationTranscriptItems;	// 32 = 0x20
    NSArray *_serverUtterances;	// 40 = 0x28
    SRSpeechRecognitionHypothesis *_speechRecognitionHypothesis;	// 48 = 0x30
    SiriUINavigationController *_navigationController;	// 56 = 0x38
    SRCompactResultViewController *_resultViewController;	// 64 = 0x40
    SRSiriViewStackContainerController *_viewStackContainerController;	// 72 = 0x48
    UIViewController *_queuedNavigationContentViewController;	// 80 = 0x50
    SiriUIPanDismissalGestureRecognizer *_dismissalPanGestureRecognizer;	// 88 = 0x58
    SRCompactView *_compactView;	// 96 = 0x60
    SRCompactEditableUtterancePresenter *_editableUtterancePresenter;	// 104 = 0x68
    SiriUIBackgroundBlurViewController *_backgroundBlurViewController;	// 112 = 0x70
}

- (void).cxx_destruct;	// IMP=0x00000001000356ac
@property(retain, nonatomic) SiriUIBackgroundBlurViewController *backgroundBlurViewController; // @synthesize backgroundBlurViewController=_backgroundBlurViewController;
@property(retain, nonatomic, getter=_editableUtterancePresenter) SRCompactEditableUtterancePresenter *editableUtterancePresenter; // @synthesize editableUtterancePresenter=_editableUtterancePresenter;
@property(retain, nonatomic, getter=_compactView) SRCompactView *compactView; // @synthesize compactView=_compactView;
@property(retain, nonatomic, getter=_dismissalPanGestureRecognizer, setter=_setDismissalPanGestureRecognizer:) SiriUIPanDismissalGestureRecognizer *dismissalPanGestureRecognizer; // @synthesize dismissalPanGestureRecognizer=_dismissalPanGestureRecognizer;
@property(retain, nonatomic, getter=_queuedNavigationContentViewController, setter=_setQueuedNavigationContentViewController:) UIViewController *queuedNavigationContentViewController; // @synthesize queuedNavigationContentViewController=_queuedNavigationContentViewController;
@property(readonly, nonatomic, getter=_viewStackContainerController) SRSiriViewStackContainerController *viewStackContainerController; // @synthesize viewStackContainerController=_viewStackContainerController;
@property(readonly, nonatomic, getter=_resultViewController) SRCompactResultViewController *resultViewController; // @synthesize resultViewController=_resultViewController;
@property(readonly, nonatomic, getter=_navigationController) SiriUINavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(copy, nonatomic, getter=_speechRecognitionHypothesis, setter=_setSpeechRecognitionHypothesis:) SRSpeechRecognitionHypothesis *speechRecognitionHypothesis; // @synthesize speechRecognitionHypothesis=_speechRecognitionHypothesis;
@property(copy, nonatomic, getter=_serverUtterances, setter=_setServerUtterances:) NSArray *serverUtterances; // @synthesize serverUtterances=_serverUtterances;
@property(copy, nonatomic, getter=_activeConversationTranscriptItems, setter=_setActiveConversationTranscriptItems:) NSArray *activeConversationTranscriptItems; // @synthesize activeConversationTranscriptItems=_activeConversationTranscriptItems;
@property(copy, nonatomic, getter=_activeTranscriptItems, setter=_setActiveTranscriptItems:) NSArray *activeTranscriptItems; // @synthesize activeTranscriptItems=_activeTranscriptItems;
@property(nonatomic) __weak id <SRCompactViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)contentDiffersBetweenItems:(id)arg1 andItems:(id)arg2;	// IMP=0x00000001000351a4
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;	// IMP=0x000000010003502c
- (_Bool)_usesDefaultNavigationBar;	// IMP=0x0000000100035014
- (_Bool)_navigationBarHasContentAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000100034ee8
- (_Bool)_alwaysObscureBackgroundContentWhenActive;	// IMP=0x0000000100034e94
- (void)editableUtterancePresenter:(id)arg1 openURL:(id)arg2;	// IMP=0x0000000100034e20
- (void)editableUtterancePresenter:(id)arg1 didFinishEditingWithText:(id)arg2 selectionResults:(id)arg3 shouldStartNewRequest:(_Bool)arg4;	// IMP=0x0000000100034c24
- (void)didResignFirstResponderFromUtterancePresenter:(id)arg1;	// IMP=0x0000000100034bdc
- (void)willBeginEditingFromUtterancePresenter:(id)arg1;	// IMP=0x0000000100034b94
- (void)editableUtterancePresenter:(id)arg1 requestsKeyboardWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100034b24
- (void)blurFromRootNavigationTransitionController:(id)arg1 requestHostBlurVisible:(_Bool)arg2 requestPresentationBlurVisible:(_Bool)arg3;	// IMP=0x00000001000349c4
- (void)blurFromRootNavigationTransitionController:(id)arg1 requestBackgroundBlurViewVisible:(_Bool)arg2;	// IMP=0x0000000100034978
- (void)tapToEditRequestedFromView:(id)arg1;	// IMP=0x00000001000348c0
- (_Bool)_canShowWhileLocked;	// IMP=0x00000001000348bc
- (void)siriViewControllerWillBeginEditing:(id)arg1;	// IMP=0x00000001000348b8
- (void)siriViewControllerRequestTearDownEditingViewController:(id)arg1;	// IMP=0x00000001000348b4
- (void)siriViewControllerDidEndEditing:(id)arg1;	// IMP=0x00000001000348b0
- (void)siriViewController:(id)arg1 startCorrectedSpeechRequestWithText:(id)arg2 correctionIdentifier:(id)arg3 userSelectionResults:(id)arg4;	// IMP=0x00000001000348ac
- (void)siriSnippetViewController:(id)arg1 willPresentViewController:(id)arg2;	// IMP=0x000000010003483c
- (void)siriSnippetViewController:(id)arg1 willDismissViewController:(id)arg2;	// IMP=0x00000001000347cc
- (void)siriSnippetViewController:(id)arg1 didRequestKeyboardWithVisibility:(_Bool)arg2;	// IMP=0x00000001000347c8
- (void)siriSnippetViewController:(id)arg1 didPresentViewController:(id)arg2;	// IMP=0x00000001000347c4
- (void)siriSnippetViewController:(id)arg1 didDismissViewController:(id)arg2;	// IMP=0x00000001000347c0
- (void)removeSiriViewController:(id)arg1;	// IMP=0x00000001000347bc
- (id)localeForSiriViewController:(id)arg1;	// IMP=0x0000000100034760
- (_Bool)siriViewControllerShouldPreventUserInteraction:(id)arg1;	// IMP=0x000000010003470c
- (void)siriViewController:(id)arg1 speakText:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010003467c
- (void)cancelSpeakingForSiriViewController:(id)arg1;	// IMP=0x0000000100034634
- (void)userTouchedSnippet;	// IMP=0x00000001000345f4
- (void)siriSnippetViewControllerWillBecomeFirstResponder:(id)arg1;	// IMP=0x00000001000345f0
- (void)siriSnippetViewControllerViewDidLoad:(id)arg1;	// IMP=0x0000000100034564
- (_Bool)siriSnippetViewControllerIsVisible:(id)arg1;	// IMP=0x000000010003455c
- (void)siriSnippetViewController:(id)arg1 shouldPresentPicker:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100034558
- (void)siriSnippetViewController:(id)arg1 setStatusBarHidden:(_Bool)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000100034554
- (void)siriSnippetViewController:(id)arg1 setStatusBarHidden:(_Bool)arg2 animated:(_Bool)arg3;	// IMP=0x0000000100034550
- (void)siriSnippetViewController:(id)arg1 setStatusViewHidden:(_Bool)arg2;	// IMP=0x00000001000344f8
- (void)siriSnippetViewController:(id)arg1 requestPasscodeUnlockWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000344f4
- (void)siriSnippetViewController:(id)arg1 pushSirilandSnippets:(id)arg2;	// IMP=0x0000000100034070
- (void)siriSnippetViewController:(id)arg1 didShowGuideStartDate:(id)arg2 endDate:(id)arg3;	// IMP=0x000000010003406c
- (double)statusBarHeightForSiriViewController:(id)arg1;	// IMP=0x0000000100034064
- (struct CGSize)siriViewControllerVisibleContentArea:(id)arg1;	// IMP=0x0000000100034054
- (void)siriViewControllerHeightDidChange:(id)arg1 pinTopOfSnippet:(_Bool)arg2;	// IMP=0x000000010003403c
- (void)siriViewControllerHeightDidChange:(id)arg1;	// IMP=0x0000000100033ea0
- (double)siriViewControllerExpectedWidth:(id)arg1;	// IMP=0x0000000100033e88
- (id)siriViewControllerEffectiveBundleForCoreLocation:(id)arg1;	// IMP=0x0000000100033e80
- (struct UIEdgeInsets)siriViewControllerBackgroundInsets:(id)arg1;	// IMP=0x0000000100033e6c
- (void)siriViewController:(id)arg1 setDomainObject:(id)arg2 forIdentifier:(id)arg3;	// IMP=0x0000000100033e68
- (void)siriViewController:(id)arg1 setContentOffset:(double)arg2;	// IMP=0x0000000100033e64
- (id)siriViewController:(id)arg1 listItemToPickInAutodisambiguationForListItems:(id)arg2;	// IMP=0x0000000100033de0
- (id)siriViewController:(id)arg1 filteredDisambiguationListItems:(id)arg2;	// IMP=0x0000000100033d5c
- (id)siriViewController:(id)arg1 domainObjectForIdentifier:(id)arg2;	// IMP=0x0000000100033d54
- (id)siriViewController:(id)arg1 disambiguationItemForListItem:(id)arg2 disambiguationKey:(id)arg3;	// IMP=0x0000000100033cb4
- (void)siriViewController:(id)arg1 didHideVibrantView:(id)arg2;	// IMP=0x0000000100033cb0
- (void)siriViewController:(id)arg1 addSelectionResponse:(id)arg2;	// IMP=0x0000000100033cac
- (double)boundingWidthForSnippetViewController:(id)arg1;	// IMP=0x0000000100033c58
- (id)persistentDataStoreForSiriViewController:(id)arg1;	// IMP=0x0000000100033c50
- (void)cancelRequestForSiriSnippetViewController:(id)arg1;	// IMP=0x0000000100033c4c
- (id)additionalSpeechInterpretationsForSiriViewController:(id)arg1;	// IMP=0x0000000100033c44
- (void)siriViewController:(id)arg1 performAceCommands:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100033bb8
- (void)siriViewController:(id)arg1 performAceCommands:(id)arg2;	// IMP=0x0000000100033b44
- (void)siriViewController:(id)arg1 openURL:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100033ab8
- (void)dismissalGestureRecognizerDidFinish:(id)arg1 shouldDismiss:(_Bool)arg2;	// IMP=0x0000000100033a64
- (void)_pushQueuedNavigationContentViewController;	// IMP=0x00000001000339d4
- (void)_logDrillInForSnippetViewController:(id)arg1 snippet:(id)arg2;	// IMP=0x0000000100033934
- (id)_instrumentationManager;	// IMP=0x0000000100033920
- (double)lastPresentationTime;	// IMP=0x0000000100033910
- (void)setBottomContentInset:(double)arg1;	// IMP=0x00000001000338f8
- (_Bool)hasContentAtPoint:(struct CGPoint)arg1;	// IMP=0x00000001000335ec
- (_Bool)_updateActiveTranscriptItems:(id)arg1;	// IMP=0x0000000100032e40
- (void)compactViewModelDidChange:(id)arg1 withDiff:(unsigned long long)arg2;	// IMP=0x0000000100032ac4
- (void)viewDidLayoutSubviews;	// IMP=0x0000000100032968
- (void)viewWillLayoutSubviews;	// IMP=0x00000001000327e8
- (void)viewDidDisappear:(_Bool)arg1;	// IMP=0x00000001000327b4
- (void)viewWillDisappear:(_Bool)arg1;	// IMP=0x0000000100032720
- (void)viewDidAppear:(_Bool)arg1;	// IMP=0x0000000100032620
- (void)viewDidLoad;	// IMP=0x00000001000321cc
- (void)loadView;	// IMP=0x0000000100032064
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;	// IMP=0x0000000100031e90

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


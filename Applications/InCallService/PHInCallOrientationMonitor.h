//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "BKSAccelerometerDelegate-Protocol.h"

@class BKSAccelerometer, NSString;

@interface PHInCallOrientationMonitor : NSObject <BKSAccelerometerDelegate>
{
    _Bool _isOrientationLocked;	// 8 = 0x8
    long long _currentOrientation;	// 16 = 0x10
    BKSAccelerometer *_accelerometer;	// 24 = 0x18
    long long _lastValidOrientation;	// 32 = 0x20
    long long _lockedOrientation;	// 40 = 0x28
}

+ (id)sharedInstance;	// IMP=0x00000001000e7814
- (void).cxx_destruct;	// IMP=0x00000001000e87fc
@property(nonatomic) _Bool isOrientationLocked; // @synthesize isOrientationLocked=_isOrientationLocked;
@property(nonatomic) long long lockedOrientation; // @synthesize lockedOrientation=_lockedOrientation;
@property(nonatomic) long long lastValidOrientation; // @synthesize lastValidOrientation=_lastValidOrientation;
@property(readonly, retain, nonatomic) BKSAccelerometer *accelerometer; // @synthesize accelerometer=_accelerometer;
- (long long)springBoardLockedInterfaceOrientation;	// IMP=0x00000001000e84cc
- (_Bool)isSpringBoardInterfaceOrientationLocked;	// IMP=0x00000001000e8448
@property(readonly, nonatomic) long long activeInterfaceOrientation;
- (long long)deviceOrientation;	// IMP=0x00000001000e81e4
@property(nonatomic) long long currentOrientation; // @synthesize currentOrientation=_currentOrientation;
- (void)accelerometer:(id)arg1 didChangeDeviceOrientation:(long long)arg2;	// IMP=0x00000001000e7e6c
- (void)accelerometer:(id)arg1 didAccelerateWithTimeStamp:(double)arg2 x:(float)arg3 y:(float)arg4 z:(float)arg5 eventType:(int)arg6;	// IMP=0x00000001000e7e68
- (void)setOrientationEventsEnabled:(_Bool)arg1;	// IMP=0x00000001000e7d78
- (void)_updateCachedOrientationValues;	// IMP=0x00000001000e7d08
- (void)dealloc;	// IMP=0x00000001000e7c80
- (id)init;	// IMP=0x00000001000e7880

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


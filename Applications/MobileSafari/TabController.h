//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "TabBarDelegate-Protocol.h"
#import "TabDocumentDragDropDataSource-Protocol.h"
#import "TabOverviewDelegate-Protocol.h"
#import "TabSnapshotCacheDelegate-Protocol.h"
#import "TiltedTabViewDelegate-Protocol.h"
#import "WBSTabOrderProvider-Protocol.h"

@class Application, BrowserController, CloudTabStore, NSArray, NSMapTable, NSMutableArray, NSSet, NSString, NSTimer, NSUUID, TabBar, TabDocument, TabOverview, TabSnapshotCache, TiltedTabView, UIBarButtonItem, UIView, WBSTabOrderManager, _SFBrowserSavedState;
@protocol TabCollectionView, TabThumbnailCollectionView, WBSOrderedTab;

@interface TabController : NSObject <TabBarDelegate, TabOverviewDelegate, TabSnapshotCacheDelegate, TiltedTabViewDelegate, TabDocumentDragDropDataSource, WBSTabOrderProvider>
{
    BrowserController *_browserController;	// 8 = 0x8
    NSMutableArray *_normalTabDocuments;	// 16 = 0x10
    NSMutableArray *_privateTabDocuments;	// 24 = 0x18
    NSTimer *_saveStateTimer;	// 32 = 0x20
    NSTimer *_stateValidateTimer;	// 40 = 0x28
    TabDocument *_tabDocumentBeingHiddenFromTabView;	// 48 = 0x30
    UIBarButtonItem *_tiltedTabViewAddTabButton;	// 56 = 0x38
    UIBarButtonItem *_tiltedTabViewPrivateBrowsingButton;	// 64 = 0x40
    NSTimer *_updateContinuityTimer;	// 72 = 0x48
    _Bool _tabBarItemsFixed;	// 80 = 0x50
    _Bool _tabViewItemsFixed;	// 81 = 0x51
    TabSnapshotCache *_snapshotCache;	// 88 = 0x58
    _Bool _flushPendingSnapshots;	// 96 = 0x60
    CDUnknownBlockType _flushPendingSnapshotsCompletion;	// 104 = 0x68
    _Bool _didRestoreCloudTabsForEducationDevice;	// 112 = 0x70
    _Bool _didReceiveFirstCloudTabDeviceUpdateNotification;	// 113 = 0x71
    TabDocument *_tabDocumentBeingDragged;	// 120 = 0x78
    NSArray *_tabDocumentsToKeepVisible;	// 128 = 0x80
    NSMapTable *_uuidToTabDocumentMap;	// 136 = 0x88
    NSUUID *_blankDocumentGroupIdentifier;	// 144 = 0x90
    NSUUID *_privateBlankDocumentGroupIdentifier;	// 152 = 0x98
    _Bool _switchingActiveDocument;	// 160 = 0xa0
    _Bool _isClosingDocuments;	// 161 = 0xa1
    NSString *_lastSearchTerm;	// 168 = 0xa8
    NSArray *_searchTermWords;	// 176 = 0xb0
    unsigned long long _veryRecentlyClosedTabCount;	// 184 = 0xb8
    unsigned long long _tabsClosedWhileTabViewPresentedCount;	// 192 = 0xc0
    NSTimer *_veryRecentlyClosedTabCountInvalidationTimer;	// 200 = 0xc8
    _Bool _snapshotsAreEnabled;	// 208 = 0xd0
    _Bool _tabsAreOnLease;	// 209 = 0xd1
    _Bool _shouldTogglePrivateBrowsingOnSplit;	// 210 = 0xd2
    _Bool _shouldDeferSnapshotRequest;	// 211 = 0xd3
    TabDocument *_privateActiveTabDocument;	// 216 = 0xd8
    TabDocument *_normalActiveTabDocument;	// 224 = 0xe0
    _SFBrowserSavedState *_savedState;	// 232 = 0xe8
    long long _privateBrowsingMode;	// 240 = 0xf0
    WBSTabOrderManager *_tabOrderManager;	// 248 = 0xf8
    TabBar *_tabBar;	// 256 = 0x100
    TiltedTabView *_tiltedTabView;	// 264 = 0x108
    TabOverview *_tabOverview;	// 272 = 0x110
    long long _tabThumbnailCollectionViewStyle;	// 280 = 0x118
    long long _tabDisplayMode;	// 288 = 0x120
}

+ (id)_tabDocumentsHiddenFromTabViews;	// IMP=0x00000001000e2600
- (void).cxx_destruct;	// IMP=0x00000001000e7580
@property(nonatomic) _Bool shouldDeferSnapshotRequest; // @synthesize shouldDeferSnapshotRequest=_shouldDeferSnapshotRequest;
@property(nonatomic) _Bool shouldTogglePrivateBrowsingOnSplit; // @synthesize shouldTogglePrivateBrowsingOnSplit=_shouldTogglePrivateBrowsingOnSplit;
@property(nonatomic) _Bool tabsAreOnLease; // @synthesize tabsAreOnLease=_tabsAreOnLease;
@property(nonatomic) long long tabDisplayMode; // @synthesize tabDisplayMode=_tabDisplayMode;
@property(nonatomic) _Bool snapshotsAreEnabled; // @synthesize snapshotsAreEnabled=_snapshotsAreEnabled;
@property(nonatomic) long long tabThumbnailCollectionViewStyle; // @synthesize tabThumbnailCollectionViewStyle=_tabThumbnailCollectionViewStyle;
@property(readonly, retain, nonatomic) TabOverview *tabOverview; // @synthesize tabOverview=_tabOverview;
@property(readonly, retain, nonatomic) TiltedTabView *tiltedTabView; // @synthesize tiltedTabView=_tiltedTabView;
@property(nonatomic) __weak TabBar *tabBar; // @synthesize tabBar=_tabBar;
@property(readonly, nonatomic) WBSTabOrderManager *tabOrderManager; // @synthesize tabOrderManager=_tabOrderManager;
@property(nonatomic) long long privateBrowsingMode; // @synthesize privateBrowsingMode=_privateBrowsingMode;
@property(retain, nonatomic) _SFBrowserSavedState *savedState; // @synthesize savedState=_savedState;
@property(retain, nonatomic) TabDocument *normalActiveTabDocument; // @synthesize normalActiveTabDocument=_normalActiveTabDocument;
@property(retain, nonatomic) TabDocument *privateActiveTabDocument; // @synthesize privateActiveTabDocument=_privateActiveTabDocument;
@property(readonly, copy, nonatomic) NSArray *privateTabDocuments; // @synthesize privateTabDocuments=_privateTabDocuments;
@property(readonly, copy, nonatomic) NSArray *tabDocuments; // @synthesize tabDocuments=_normalTabDocuments;
- (unsigned long long)indexForTab:(id)arg1;	// IMP=0x00000001000e739c
@property(readonly, nonatomic) unsigned long long numberOfTabs;
@property(readonly, nonatomic) id <WBSOrderedTab> selectedTabForTabOrderProvider;
- (id)originatingTabForTab:(id)arg1;	// IMP=0x00000001000e7258
- (id)tabAtIndex:(unsigned long long)arg1;	// IMP=0x00000001000e71fc
@property(readonly, nonatomic) unsigned long long indexOfSelectedTab;
- (void)didTransitionTabView;	// IMP=0x00000001000e7194
- (void)willTransitionTabView;	// IMP=0x00000001000e7054
@property(readonly, nonatomic) NSArray *tabDocumentsMatchingSearchTerm;
- (void)_updateUserActivityTimerFired;	// IMP=0x00000001000e6ee0
- (void)saveTabDocumentUserActivitySoon:(id)arg1;	// IMP=0x00000001000e6e3c
- (void)_cancelPendingUpdateUserActivityTimer;	// IMP=0x00000001000e6df8
- (unsigned long long)_snapshotCacheCapacityWithSnapshotsEnabled:(_Bool)arg1;	// IMP=0x00000001000e6c74
- (unsigned long long)_snapshotCacheCapacity;	// IMP=0x00000001000e6c64
- (unsigned long long)capacityForTabSnapshotCache:(id)arg1;	// IMP=0x00000001000e6c58
- (_Bool)tabSnapshotCacheShouldDeferNextSnapshotRequest:(id)arg1;	// IMP=0x00000001000e6c50
- (_Bool)tabSnapshotCache:(id)arg1 shouldRequestSavedSnapshotWithIdentifier:(id)arg2;	// IMP=0x00000001000e6a08
- (void)tabSnapshotCacheDidFinishUpdating:(id)arg1;	// IMP=0x00000001000e69ac
- (void)_updateTabSnapshotsWithIdentifier:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000e6734
- (void)_updateTabSnapshotsAnimated:(_Bool)arg1;	// IMP=0x00000001000e6720
- (void)tabSnapshotCache:(id)arg1 didEvictSnapshotWithIdentifier:(id)arg2;	// IMP=0x00000001000e670c
- (void)tabSnapshotCache:(id)arg1 didCacheSnapshotWithIdentifier:(id)arg2;	// IMP=0x00000001000e6674
- (void)tabSnapshotCache:(id)arg1 requestSnapshotWithIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000e6584
- (void)requestSnapshotForTabDocument:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000e62bc
- (id)_cachedContentImageForTabDocument:(id)arg1 allowScaledImage:(_Bool)arg2;	// IMP=0x00000001000e60a8
- (id)cachedContentImageForTabDocument:(id)arg1;	// IMP=0x00000001000e6098
- (void)flushPendingSnapshotsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001000e5ecc
- (void)_updateSnapshotCacheStateWithCapacity:(unsigned long long)arg1;	// IMP=0x00000001000e5e18
- (void)_updateSnapshotCacheState;	// IMP=0x00000001000e5de0
- (void)invalidateSnapshotForTabDocument:(id)arg1;	// IMP=0x00000001000e5c34
- (void)_updateSnapshotIdentifiers;	// IMP=0x00000001000e56ac
- (void)_updateTabOverviewItems;	// IMP=0x00000001000e52c4
@property(readonly, nonatomic) _Bool usesTabOverview;
- (void)_updateAddTabMenuProvider;	// IMP=0x00000001000e5138
- (void)_setUpTabOverview;	// IMP=0x00000001000e4efc
- (_Bool)_tabItem:(id)arg1 matchesSearchText:(id)arg2;	// IMP=0x00000001000e47b8
- (void)tabOverviewDidChangeAllowsInteractivePresentation:(id)arg1;	// IMP=0x00000001000e4784
- (void)_prepareToMoveTabDocumentToWindow:(id)arg1 createPlaceholderImage:(_Bool)arg2;	// IMP=0x00000001000e4508
- (void)_addNewActiveTabOverviewTab;	// IMP=0x00000001000e4414
- (id)itemsToKeepVisibleForTabOverview:(id)arg1;	// IMP=0x00000001000e43ec
- (id)currentItemForTabOverview:(id)arg1;	// IMP=0x00000001000e4398
- (void)tabOverviewDidCancelDismissal:(id)arg1;	// IMP=0x00000001000e4350
- (void)tiltedTabViewDidEndSearching:(id)arg1;	// IMP=0x00000001000e4264
- (void)tiltedTabViewWillBeginSearching:(id)arg1;	// IMP=0x00000001000e4178
- (void)_addNewActiveTiltedTabViewTab;	// IMP=0x00000001000e4160
- (struct CGSize)suggestedSnapshotSizeForTiltedTabView:(id)arg1;	// IMP=0x00000001000e40c8
- (void)tiltedTabView:(id)arg1 animateTopBackdropView:(id)arg2 hidden:(_Bool)arg3;	// IMP=0x00000001000e406c
- (id)expectedSuperviewForTiltedTabView:(id)arg1;	// IMP=0x00000001000e3ffc
- (id)itemsToKeepVisibleForTiltedTabView:(id)arg1;	// IMP=0x00000001000e3fd4
- (id)currentItemForTiltedTabView:(id)arg1;	// IMP=0x00000001000e3f80
- (void)_updateCloudTabStorePeriodicUpdates;	// IMP=0x00000001000e3f2c
- (_Bool)tabCollectionView:(id)arg1 cloudTab:(id)arg2 matchesSearchText:(id)arg3;	// IMP=0x00000001000e3ed0
- (_Bool)tabCollectionView:(id)arg1 item:(id)arg2 matchesSearchText:(id)arg3;	// IMP=0x00000001000e3e10
- (void)tabCollectionView:(id)arg1 closeCloudTab:(id)arg2 onDevice:(id)arg3;	// IMP=0x00000001000e3d78
- (void)tabCollectionView:(id)arg1 relinquishBorrowedContentView:(id)arg2 forItem:(id)arg3;	// IMP=0x00000001000e3ccc
- (id)tabCollectionView:(id)arg1 borrowContentViewForItem:(id)arg2 withTopBackdropView:(id *)arg3 ofHeight:(double)arg4;	// IMP=0x00000001000e3bec
- (struct UIEdgeInsets)effectiveSafeAreaInsetsForTabCollectionView:(id)arg1;	// IMP=0x00000001000e3b3c
- (double)tabCollectionView:(id)arg1 headerHeightForItem:(id)arg2;	// IMP=0x00000001000e3a70
- (void)tabCollectionViewDidUpdateItemVisibilityOrder:(id)arg1;	// IMP=0x00000001000e3a64
- (id)tabCollectionView:(id)arg1 snapshotForItem:(id)arg2;	// IMP=0x00000001000e3a00
- (_Bool)tabCollectionView:(id)arg1 validSnapshotExistsForItem:(id)arg2;	// IMP=0x00000001000e39a4
- (void)tabCollectionViewEndIgnoringUserInteraction:(id)arg1 reason:(id)arg2;	// IMP=0x00000001000e3954
- (void)tabCollectionViewBeginIgnoringUserInteraction:(id)arg1 reason:(id)arg2;	// IMP=0x00000001000e3904
- (void)tabCollectionViewDidDismiss:(id)arg1;	// IMP=0x00000001000e3844
- (void)tabCollectionViewWillDismiss:(id)arg1;	// IMP=0x00000001000e37d8
- (void)tabCollectionViewDidPresent:(id)arg1;	// IMP=0x00000001000e37d4
- (_Bool)_shouldSnapshotActiveTab;	// IMP=0x00000001000e3784
- (void)tabCollectionViewWillPresent:(id)arg1;	// IMP=0x00000001000e3638
- (void)tabCollectionView:(id)arg1 item:(id)arg2 didProduceNavigationIntent:(id)arg3;	// IMP=0x00000001000e3560
- (void)tabCollectionView:(id)arg1 didMoveItem:(id)arg2 overItem:(id)arg3;	// IMP=0x00000001000e3410
- (void)tabCollectionView:(id)arg1 closeItem:(id)arg2;	// IMP=0x00000001000e322c
- (_Bool)tabCollectionView:(id)arg1 canCloseItem:(id)arg2;	// IMP=0x00000001000e3018
- (void)tabCollectionView:(id)arg1 didSelectItem:(id)arg2;	// IMP=0x00000001000e2de4
@property(readonly, nonatomic) UIView<TabThumbnailCollectionView> *tabThumbnailCollectionView;
- (void)_clearHiddenTabDocumentForTabViewDismissal;	// IMP=0x00000001000e2b18
- (void)_dismissTabView;	// IMP=0x00000001000e2ad4
- (void)didEndTrackingSession:(id)arg1;	// IMP=0x00000001000e2a84
- (void)didBeginTrackingSession:(id)arg1;	// IMP=0x00000001000e2a34
- (void)tabDocumentDidUpdateUUID:(id)arg1 previousUUID:(id)arg2;	// IMP=0x00000001000e2998
- (void)willLoseOwnershipOfTabDocument:(id)arg1;	// IMP=0x00000001000e2948
- (void)didGainOwnershipOfTabDocument:(id)arg1;	// IMP=0x00000001000e28d8
- (id)tabDocumentWithUUID:(id)arg1;	// IMP=0x00000001000e28c8
- (void)_setTabDocuments:(id)arg1 hidden:(_Bool)arg2;	// IMP=0x00000001000e269c
- (void)unhideTabDocuments:(id)arg1;	// IMP=0x00000001000e268c
- (void)hideTabDocuments:(id)arg1;	// IMP=0x00000001000e267c
- (id)replacePlaceholderTabDocument:(id)arg1 withTabDocuments:(id)arg2 transitionToDragStateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000001000e1dd4
@property(readonly, nonatomic) UIView<TabCollectionView> *tabCollectionView;
- (id)restoreRecentlyClosedTabDocumentWithTabStateData:(id)arg1;	// IMP=0x00000001000e1cd0
- (void)updateTiltedTabViewToolbarItems:(_Bool)arg1;	// IMP=0x00000001000e1c84
- (_Bool)_privateBrowsingButtonSelected;	// IMP=0x00000001000e1c74
- (void)_updateTiltedTabViewPrivateBrowsingButtonVisibility;	// IMP=0x00000001000e1b00
@property(readonly, nonatomic) NSArray *tiltedTabViewToolbarItems;
- (id)_makeOpenNewTabInteraction;	// IMP=0x00000001000e158c
- (void)_updateTabViewCloudTabs;	// IMP=0x00000001000e14b4
- (void)updateEducationTabsLastSyncDate;	// IMP=0x00000001000e13c0
- (void)_restoreEducationTabsIfNecessaryAnimated:(_Bool)arg1;	// IMP=0x00000001000e1170
- (void)restoreEducationDeviceTabs;	// IMP=0x00000001000e1160
- (void)_cloudTabsDidUpdate:(id)arg1;	// IMP=0x00000001000e1010
- (void)_updateTiltedTabViewItemsWithTransition:(long long)arg1;	// IMP=0x00000001000e0d80
- (void)_updateTiltedTabViewItemsAnimated:(_Bool)arg1;	// IMP=0x00000001000e0d74
- (void)_updateTiltedTabViewItems;	// IMP=0x00000001000e0d64
- (void)_setUpTiltedTabView;	// IMP=0x00000001000e0cd4
@property(readonly, nonatomic) _Bool usesTiltedTabView;
- (void)updateTabViewsAnimatingTabBar:(_Bool)arg1;	// IMP=0x00000001000e0c00
- (void)_updateExplanationViewVisibilityAnimated:(_Bool)arg1;	// IMP=0x00000001000e0b9c
- (_Bool)_shouldShowExplanationView;	// IMP=0x00000001000e0afc
- (void)_suppressSingleEmptyTabIfAppropriate;	// IMP=0x00000001000e0998
- (void)_openBlankTabDocumentInTabBarWithOptions:(long long)arg1;	// IMP=0x00000001000e08b8
- (void)updateTabBarAnimated:(_Bool)arg1;	// IMP=0x00000001000e08a8
- (void)_updateTabBarAnimated:(_Bool)arg1 keepingDocumentVisible:(id)arg2;	// IMP=0x00000001000e05b8
- (void)insertTabDocumentFromTabStateData:(id)arg1;	// IMP=0x00000001000e03ec
- (void)_adoptTabsFromTabController:(id)arg1 forPrivateBrowsing:(_Bool)arg2;	// IMP=0x00000001000e01bc
- (void)adoptTabsFromTabController:(id)arg1;	// IMP=0x00000001000e00ac
- (_Bool)_tabsAreAllEmpty:(id)arg1;	// IMP=0x00000001000e0040
- (id)_newPlaceholderTabDocumentForURL:(id)arg1 privateBrowsing:(_Bool)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x00000001000dfee0
- (id)insertPlaceholderTabDocumentAfterDocument:(id)arg1;	// IMP=0x00000001000dfe4c
- (void)tabBar:(id)arg1 toggleMediaStateMutedForItem:(id)arg2;	// IMP=0x00000001000dfddc
- (_Bool)tabBar:(id)arg1 canMoveItem:(id)arg2;	// IMP=0x00000001000dfdd4
- (void)_setTabBarItemsFixed:(_Bool)arg1;	// IMP=0x00000001000dfdcc
- (void)_tabView:(id)arg1 handleNavigationIntent:(id)arg2 usingTabDocument:(id)arg3;	// IMP=0x00000001000df99c
- (void)_performWithFixedTabViewItems:(CDUnknownBlockType)arg1;	// IMP=0x00000001000df964
@property(readonly, nonatomic) Application *_application;
- (void)_updateAddTabButtonEnabled;	// IMP=0x00000001000df8d8
- (void)setPrivateBrowsingMode:(long long)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000df644
@property(nonatomic, getter=isPrivateBrowsingEnabled) _Bool privateBrowsingEnabled;
@property(readonly, nonatomic, getter=isControlledByAutomation) _Bool controlledByAutomation;
- (_Bool)_canCloseLastTab;	// IMP=0x00000001000df56c
- (void)clearBrowserController;	// IMP=0x00000001000df3dc
- (void)dealloc;	// IMP=0x00000001000df330
- (_Bool)needsCloudTabPeriodicUpdates;	// IMP=0x00000001000df2e0
@property(readonly, nonatomic) CloudTabStore *cloudTabStore;
- (void)_didReceiveMemoryWarning:(id)arg1;	// IMP=0x00000001000df224
- (id)initWithBrowserController:(id)arg1;	// IMP=0x00000001000deee8
- (void)openInitialBlankTabDocumentAndMakeActive:(_Bool)arg1;	// IMP=0x00000001000dec3c
- (void)openInitialBlankTabDocumentIfNeeded;	// IMP=0x0000000100005ee4
- (void)replaceTabDocument:(id)arg1 withTabDocument:(id)arg2;	// IMP=0x00000001000dea68
- (id)_tabDocumentForURL:(id)arg1 withUUID:(id)arg2;	// IMP=0x00000001000de8fc
- (void)sortTabsWithMode:(long long)arg1;	// IMP=0x00000001000de630
@property(readonly, nonatomic) TabDocument *tabDocumentForSpotlightSearch;
- (id)tabDocumentForURL:(id)arg1;	// IMP=0x00000001000de124
- (void)moveTabDocument:(id)arg1 overTabDocument:(id)arg2;	// IMP=0x00000001000ddff4
- (void)closeTabDocuments:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000ddfdc
- (void)closeTabDocuments:(id)arg1;	// IMP=0x00000001000ddfcc
- (void)closeAllOpenTabsAnimated:(_Bool)arg1 temporarily:(_Bool)arg2;	// IMP=0x00000001000ddf40
- (void)closeAllOpenTabsAnimated:(_Bool)arg1;	// IMP=0x00000001000ddf30
- (void)closeOtherTabs;	// IMP=0x00000001000ddd70
- (void)closeTab;	// IMP=0x00000001000ddd20
- (void)_closeTabDocuments:(id)arg1 animated:(_Bool)arg2 temporarily:(_Bool)arg3 allowAddingToRecentlyClosedTabs:(_Bool)arg4 keepWebViewAlive:(_Bool)arg5;	// IMP=0x00000001000dcf7c
- (void)_closeTabDocument:(id)arg1 animated:(_Bool)arg2 temporarily:(_Bool)arg3 allowAddingToRecentlyClosedTabs:(_Bool)arg4 keepWebViewAlive:(_Bool)arg5;	// IMP=0x00000001000dce8c
- (void)_detachTabDocuments:(id)arg1 nextActiveDocument:(id)arg2;	// IMP=0x00000001000dcb20
- (void)_closeTabDocument:(id)arg1 animated:(_Bool)arg2 allowAddingToRecentlyClosedTabs:(_Bool)arg3;	// IMP=0x00000001000dcb08
- (void)_closeTabDocument:(id)arg1 animated:(_Bool)arg2 temporarily:(_Bool)arg3;	// IMP=0x00000001000dcaf4
- (void)detachTabDocument:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000dca04
- (void)closeTabDocumentWithURL:(id)arg1 UUID:(id)arg2;	// IMP=0x00000001000dc980
- (void)closeTabDocument:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000dc970
- (_Bool)_shouldFocusPreviousDocumentWhenClosingDocument:(id)arg1;	// IMP=0x00000001000dc960
- (void)openNewTabWithOptions:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000dc60c
- (void)_newTabFromTabViewButton;	// IMP=0x00000001000dc594
- (id)_openBlankTabDocument;	// IMP=0x00000001000dc554
- (id)insertInitialBlankTabDocumentWithPrivateBrowsingIfNeeded:(_Bool)arg1;	// IMP=0x00000001000dc440
- (id)blankTabDocumentToReuseAllowingReorder:(_Bool)arg1;	// IMP=0x00000001000dc2f0
- (id)blankTabDocumentToReuse;	// IMP=0x00000001000dc2e0
- (void)insertNewBlankTabDocumentAnimated:(_Bool)arg1;	// IMP=0x00000001000dc294
- (id)_insertNewBlankTabDocumentWithOptions:(long long)arg1 inBackground:(_Bool)arg2 animated:(_Bool)arg3;	// IMP=0x00000001000dbf74
- (id)_insertNewBlankTabDocumentWithPrivateBrowsing:(_Bool)arg1 inBackground:(_Bool)arg2 animated:(_Bool)arg3;	// IMP=0x00000001000dbf5c
- (void)insertNewTabDocumentWithDefaultOrdering:(id)arg1 inBackground:(_Bool)arg2 animated:(_Bool)arg3;	// IMP=0x00000001000dbf44
- (void)insertNewTabDocument:(id)arg1 forcingOrderAfterTabDocument:(id)arg2 inBackground:(_Bool)arg3 animated:(_Bool)arg4;	// IMP=0x00000001000dbe94
- (_Bool)_usesPrivateBrowsingForNewTabOptions:(long long)arg1;	// IMP=0x00000001000dbe64
- (unsigned long long)_indexForInsertionBeforeTabDocument:(id)arg1 withPrivateBrowsingEnabled:(_Bool)arg2;	// IMP=0x00000001000dbdd0
- (unsigned long long)_indexForInsertionAfterTabDocument:(id)arg1 withPrivateBrowsingEnabled:(_Bool)arg2;	// IMP=0x00000001000dbd28
- (void)insertTabDocuments:(id)arg1 beforeTabDocument:(id)arg2 inBackground:(_Bool)arg3 animated:(_Bool)arg4;	// IMP=0x00000001000dbb30
- (void)insertTabDocument:(id)arg1 afterTabDocument:(id)arg2 inBackground:(_Bool)arg3 animated:(_Bool)arg4;	// IMP=0x00000001000dba78
- (void)_insertTabDocument:(id)arg1 atIndex:(unsigned long long)arg2 inBackground:(_Bool)arg3 animated:(_Bool)arg4 updateUI:(_Bool)arg5;	// IMP=0x00000001000db6e0
- (void)_adoptTabDocument:(id)arg1 atIndex:(unsigned long long)arg2 forPrivateBrowsing:(_Bool)arg3;	// IMP=0x00000001000db5fc
- (_Bool)_makeRoomForNewTabDocument:(id)arg1;	// IMP=0x00000001000db4d4
- (id)_oldestInactiveTabDocumentForPrivateBrowsing:(_Bool)arg1;	// IMP=0x00000001000db320
- (_Bool)canAddNewTabForPrivateBrowsing:(_Bool)arg1;	// IMP=0x00000001000db2cc
@property(readonly, nonatomic) _Bool canAddNewTabForCurrentBrowsingMode;
- (void)_switchActiveTabDocumentFromTabDocument:(id)arg1 toTabDocument:(id)arg2;	// IMP=0x00000001000dafa8
- (void)setActiveTabDocument:(id)arg1 animated:(_Bool)arg2 deferActivation:(_Bool)arg3;	// IMP=0x00000001000dad98
- (void)setActiveTabDocument:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000dad88
@property(retain, nonatomic) TabDocument *activeTabDocument;
@property(readonly, nonatomic) _Bool canCloseOtherTabs;
@property(readonly, nonatomic) _Bool canCloseTab;
@property(nonatomic) _Bool tabViewDefersActivation;
@property(readonly, nonatomic) TabDocument *tabDocumentBeingActivated;
@property(readonly, nonatomic) _Bool hasTabsThatShouldBeObscuredForDigitalHealth;
- (void)deactivateAllUsageTrackingInformationIfNecessary;	// IMP=0x00000001000da7ac
- (void)updateUsageTrackingInformationIfNecessary;	// IMP=0x00000001000da650
- (void)_setActiveTabDocument:(id)arg1;	// IMP=0x00000001000da5d4
- (id)_activeTabDocumentForPrivateBrowsing:(_Bool)arg1;	// IMP=0x00000001000da5bc
- (void)_logActivationForTab:(id)arg1;	// IMP=0x00000001000da500
- (void)logTabActivationInterval:(double)arg1 forActivationType:(long long)arg2;	// IMP=0x00000001000da298
- (void)updateHibernatedTabDocumentsSavingState;	// IMP=0x00000001000da204
- (void)updateTabCount;	// IMP=0x00000001000da1bc
@property(readonly, copy, nonatomic) NSSet *allSnapshotIdentifiers;
@property(readonly, copy, nonatomic) NSArray *allTabDocuments;
- (id)_otherTabDocuments;	// IMP=0x00000001000d9fa4
@property(readonly, copy, nonatomic) NSArray *currentTabDocuments;
@property(readonly, nonatomic) unsigned long long numberOfCurrentNonHiddenTabs;
- (id)_tabDocumentsForPrivateBrowsing:(_Bool)arg1;	// IMP=0x00000001000d9ea8
- (id)_currentTabs;	// IMP=0x00000001000d9e9c
- (void)_createVeryRecentlyClosedTabCountInvalidationTimer;	// IMP=0x00000001000d9e2c
- (void)_cancelVeryRecentlyClosedTabCountInvalidationTimer;	// IMP=0x00000001000d9de4
- (void)closeTabsAutomaticallyIfNecessary;	// IMP=0x00000001000d9aac
- (void)_restorePersistentDocumentState:(id)arg1 into:(id)arg2 withCurrentActiveDocument:(id)arg3 activeDocumentIsValid:(_Bool)arg4 restoredActiveDocumentIndex:(unsigned long long)arg5;	// IMP=0x00000001000efd58
- (_Bool)_shouldRestoreBlankTab;	// IMP=0x00000001000efd20
- (void)_removeCurrentBackForwardItemFromTabDocument:(id)arg1;	// IMP=0x00000001000efb4c
- (_Bool)readState;	// IMP=0x00000001000ef5a4
- (void)saveStateInBackground:(_Bool)arg1;	// IMP=0x0000000100004f8c
- (id)_persistentStateDictionaryForTabs:(id)arg1;	// IMP=0x00000001000ef594
- (id)_tabStatesForTabs:(id)arg1 quickUpdate:(_Bool)arg2;	// IMP=0x00000001000ef324
- (void)saveAllTabsStateWithQuickUpdate:(_Bool)arg1;	// IMP=0x00000001000ef234
- (void)saveBrowserWindowStateOnly;	// IMP=0x00000001000ef170
- (unsigned long long)_indexOfActiveTab:(id)arg1 tabDocuments:(id)arg2;	// IMP=0x00000001000eefc0
- (void)_prepareBrowserWindowDataIncludingTabState:(_Bool)arg1 forQuickUpdate:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000eeca4
- (void)_persistAllTabStates:(id)arg1 needsValidate:(_Bool)arg2;	// IMP=0x00000001000ee970
- (void)updateTabStatesAndValidate:(_Bool)arg1 shouldDeleteEmptyWindow:(_Bool)arg2;	// IMP=0x00000001000ee480
- (void)saveStateInBackground:(_Bool)arg1 needsValidate:(_Bool)arg2;	// IMP=0x00000001000ee3f8
- (void)removeSavedStateForTabDocument:(id)arg1;	// IMP=0x00000001000ee364
- (void)saveStateForTabDocument:(id)arg1 needsValidate:(_Bool)arg2;	// IMP=0x00000001000ee2b0
- (void)_updateSavedStateValidity:(_Bool)arg1;	// IMP=0x00000001000ee190
- (void)_validateSavedState:(id)arg1;	// IMP=0x00000001000ee0e8
- (void)_clearStateValidateTimer;	// IMP=0x00000001000ee098
- (void)_saveStateFromTimer:(id)arg1;	// IMP=0x00000001000ee088
- (void)_setSaveStateTimer:(id)arg1;	// IMP=0x00000001000ee01c
- (void)setStateNeedsSaved;	// IMP=0x00000001000edf90

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


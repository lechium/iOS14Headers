//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "MBEngine.h"

#import "MBFileHandleFactory-Protocol.h"
#import "MBFileScannerDelegate-Protocol.h"

@class MBAnalyticsEvent, MBBackupHelper, MBBackupOperationJournal, MBDrive, MBDriveScript, MBDriveSettingsContext, MBFileScanner, MBManifestDB, MBProgress, MBStatus, NSMutableDictionary, NSMutableSet, NSSet, NSString;

@interface MBDriveBackupEngine : MBEngine <MBFileScannerDelegate, MBFileHandleFactory>
{
    MBProgress *_progress;	// 56 = 0x38
    MBDriveScript *_driveScript;	// 64 = 0x40
    MBDrive *_drive;	// 72 = 0x48
    MBBackupHelper *_backupHelper;	// 80 = 0x50
    NSString *_uuid;	// 88 = 0x58
    MBStatus *_status;	// 96 = 0x60
    MBManifestDB *_backupManifestDB;	// 104 = 0x68
    MBManifestDB *_snapshotManifestDB;	// 112 = 0x70
    NSMutableSet *_domainsToScan;	// 120 = 0x78
    long long _maximumModificationTime;	// 128 = 0x80
    MBBackupOperationJournal *_operationJournal;	// 136 = 0x88
    NSMutableSet *_modifiedDomains;	// 144 = 0x90
    NSMutableDictionary *_uploadOperationsByPath;	// 152 = 0x98
    unsigned long long _retryCount;	// 160 = 0xa0
    _Bool _fullBackup;	// 168 = 0xa8
    _Atomic _Bool _canceled;	// 169 = 0xa9
    _Bool _movedOldBackup;	// 170 = 0xaa
    int _engineType;	// 172 = 0xac
    double _startTime;	// 176 = 0xb0
    unsigned long long _batchSize;	// 184 = 0xb8
    unsigned long long _concurrentUploadBatchCount;	// 192 = 0xc0
    unsigned long long _uploadSize;	// 200 = 0xc8
    unsigned long long _uploadFileCount;	// 208 = 0xd0
    NSString *_password;	// 216 = 0xd8
    NSString *_movedBackupName;	// 224 = 0xe0
    NSSet *_prefixDirectories;	// 232 = 0xe8
    MBFileScanner *_scanner;	// 240 = 0xf0
    MBAnalyticsEvent *_analyticsEvent;	// 248 = 0xf8
}

+ (id)backupEngineWithSettingsContext:(id)arg1 debugContext:(id)arg2;	// IMP=0x000000010001faf8
- (void).cxx_destruct;	// IMP=0x0000000100034138
@property(retain, nonatomic) MBAnalyticsEvent *analyticsEvent; // @synthesize analyticsEvent=_analyticsEvent;
@property(retain) MBFileScanner *scanner; // @synthesize scanner=_scanner;
@property(retain, nonatomic) NSSet *prefixDirectories; // @synthesize prefixDirectories=_prefixDirectories;
@property(retain, nonatomic) NSString *movedBackupName; // @synthesize movedBackupName=_movedBackupName;
@property(nonatomic) _Bool movedOldBackup; // @synthesize movedOldBackup=_movedOldBackup;
@property(retain, nonatomic) NSString *password; // @synthesize password=_password;
@property(nonatomic) unsigned long long uploadFileCount; // @synthesize uploadFileCount=_uploadFileCount;
@property(nonatomic) unsigned long long uploadSize; // @synthesize uploadSize=_uploadSize;
@property(readonly, nonatomic) MBManifestDB *snapshotManifestDB; // @synthesize snapshotManifestDB=_snapshotManifestDB;
@property(readonly, nonatomic) MBManifestDB *backupManifestDB; // @synthesize backupManifestDB=_backupManifestDB;
@property(nonatomic) unsigned long long concurrentUploadBatchCount; // @synthesize concurrentUploadBatchCount=_concurrentUploadBatchCount;
@property(nonatomic) unsigned long long batchSize; // @synthesize batchSize=_batchSize;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(nonatomic) int engineType; // @synthesize engineType=_engineType;
@property(readonly, nonatomic) long long maximumModificationTime; // @synthesize maximumModificationTime=_maximumModificationTime;
@property(readonly, nonatomic) unsigned long long retryCount; // @synthesize retryCount=_retryCount;
@property(readonly, nonatomic) MBProgress *progress; // @synthesize progress=_progress;
- (void)accumulateMetric:(id)arg1 value:(unsigned long long)arg2;	// IMP=0x0000000100033ef8
- (void)setMetric:(id)arg1 value:(unsigned long long)arg2;	// IMP=0x0000000100033e84
- (_Bool)cancel;	// IMP=0x0000000100033e00
- (id)_addBackupPathsNotInManifestDB:(id)arg1 operationType:(int)arg2;	// IMP=0x0000000100033828
- (_Bool)_isModifiedWithFileDescriptor:(int)arg1 reason:(id *)arg2;	// IMP=0x0000000100033714
- (_Bool)isModifiedWithStat:(struct stat *)arg1 reason:(id *)arg2;	// IMP=0x00000001000336b0
- (_Bool)_uploadStatusToDriveWithSnapshotState:(int)arg1 error:(id *)arg2;	// IMP=0x0000000100033390
- (id)fileHandleWithPath:(id)arg1 flags:(int)arg2 mode:(unsigned short)arg3 error:(id *)arg4;	// IMP=0x0000000100032a38
- (id)_fileHandleWithPath:(id)arg1 flags:(int)arg2 mode:(unsigned short)arg3 error:(id *)arg4;	// IMP=0x000000010003292c
- (id)_deviceSnapshotManifestDatabasePath;	// IMP=0x00000001000328d0
- (id)_deviceSnapshotPropertiesPath;	// IMP=0x0000000100032874
- (id)_deviceSnapshotDir;	// IMP=0x0000000100032784
- (id)properties;	// IMP=0x000000010003276c
- (int)engineMode;	// IMP=0x0000000100032764
- (id)_retry;	// IMP=0x0000000100031ae8
@property(readonly, nonatomic, getter=isFinalRetry) _Bool finalRetry;
- (_Bool)_shouldRetry;	// IMP=0x0000000100031a84
- (id)_verifyBackupReloadingManifest:(_Bool)arg1;	// IMP=0x0000000100031180
- (id)_removeOldBackup;	// IMP=0x0000000100030fdc
- (id)_removeDeviceSnapshot;	// IMP=0x0000000100030e24
- (id)_removeBatchWithPaths:(id)arg1;	// IMP=0x0000000100030a68
- (id)_removeInBatchesWithOperationType:(int)arg1;	// IMP=0x0000000100030664
- (id)_removeWithOperationType:(int)arg1;	// IMP=0x0000000100030020
- (id)_moveBatchWithPaths:(id)arg1;	// IMP=0x000000010002fc88
- (id)_moveInBatchesWithOperationType:(int)arg1;	// IMP=0x000000010002f7b0
- (id)_moveWithOperationType:(int)arg1;	// IMP=0x000000010002f098
- (void)_uploadBatch:(id)arg1 options:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010002e6cc
- (id)_uploadInBatches;	// IMP=0x000000010002d15c
- (id)_upload;	// IMP=0x000000010002c644
- (id)_prepareSnapshot;	// IMP=0x000000010002bdb4
- (id)_prepareMoveBackup;	// IMP=0x000000010002ba70
- (id)_prepareResume;	// IMP=0x000000010002b9a8
- (id)_prepareFreeSpace;	// IMP=0x000000010002b5e8
- (id)_prepareProgress;	// IMP=0x000000010002ab84
- (id)_prepareForUpload;	// IMP=0x000000010002a924
- (id)_prepareForPreflight;	// IMP=0x000000010002a71c
- (id)_scanFinished;	// IMP=0x000000010002a204
- (id)_backUpiCloudDrive;	// IMP=0x0000000100029c9c
- (id)_findPathsRemovedFromBackup;	// IMP=0x0000000100029794
- (id)_addMetadataToFile:(id)arg1;	// IMP=0x0000000100028f7c
- (void)_addFileToLeaveAlone:(id)arg1 flags:(unsigned long long)arg2;	// IMP=0x0000000100028f50
- (void)_addFileToMove:(id)arg1;	// IMP=0x0000000100028e1c
- (void)_addFileToUploadAndMove:(id)arg1 flags:(unsigned long long)arg2;	// IMP=0x0000000100028be0
- (_Bool)fileScanner:(id)arg1 shouldExcludeFile:(id)arg2;	// IMP=0x00000001000289e0
- (id)fileScanner:(id)arg1 didFindFile:(id)arg2;	// IMP=0x0000000100027c98
- (_Bool)fileScanner:(id)arg1 isFileAddedOrModified:(id)arg2;	// IMP=0x0000000100027b68
- (id)_scanAllDomains;	// IMP=0x0000000100027914
- (id)_setupEncryption;	// IMP=0x0000000100026d4c
- (id)_setupManifestDB;	// IMP=0x0000000100026864
- (id)_setupSnapshotDirectory;	// IMP=0x0000000100026700
- (id)_setupOperationJournal;	// IMP=0x0000000100026444
- (void)_removeFilesystemSnapshot;	// IMP=0x0000000100026170
- (id)_snapshotFilesystem;	// IMP=0x0000000100025bdc
- (void)_recordCurrentTime;	// IMP=0x00000001000258ec
- (id)_scan;	// IMP=0x000000010002548c
- (id)_resumeAfterSuccess;	// IMP=0x0000000100025434
- (id)_resumeAfterFailureRemoving;	// IMP=0x0000000100025368
- (id)_resumeAfterFailureMoving;	// IMP=0x0000000100024de4
- (id)_resumeAfterFailureUploading;	// IMP=0x000000010002386c
- (id)_openBackupManifestForResume;	// IMP=0x0000000100023564
- (id)_resume;	// IMP=0x0000000100022868
- (id)_postconditions;	// IMP=0x000000010002283c
- (id)_preconditions;	// IMP=0x0000000100022400
- (void)fileModifiedWhileUploadingFile:(id)arg1 reason:(id)arg2;	// IMP=0x0000000100022168
- (id)_cleanupDeviceSnapshotDir;	// IMP=0x0000000100021f40
- (id)_cleanup;	// IMP=0x0000000100021ea4
- (id)endWithError:(id)arg1;	// IMP=0x0000000100021bd0
- (id)_setup;	// IMP=0x0000000100020f00
- (id)_backupAfterPreflight;	// IMP=0x0000000100020c18
- (id)_preflight;	// IMP=0x000000010002098c
- (id)backup;	// IMP=0x00000001000208f4
- (id)cleanup;	// IMP=0x00000001000207e4
- (id)backupAfterPreflight;	// IMP=0x0000000100020598
- (id)preflight;	// IMP=0x0000000100020180
- (_Bool)shouldCommitIfPossible;	// IMP=0x000000010002005c
@property(readonly, nonatomic) MBDriveSettingsContext *settingsContext;
- (void)dealloc;	// IMP=0x000000010001ffe8
- (id)initWithSettingsContext:(id)arg1 debugContext:(id)arg2;	// IMP=0x000000010001fb70

@end


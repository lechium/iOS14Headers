//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "MBSCacheLikeObject-Protocol.h"

@class MBDomainManager, MBServiceConfiguration, NSMutableDictionary, NSMutableSet, NSString;

@interface MBServiceCache : NSObject <MBSCacheLikeObject>
{
    NSString *_path;	// 8 = 0x8
    struct sqlite3 *_db;	// 16 = 0x10
    long long _openCount;	// 24 = 0x18
    _Bool _corrupt;	// 32 = 0x20
    MBServiceConfiguration *_configuration;	// 40 = 0x28
    _Bool _configurationUpToDate;	// 48 = 0x30
    MBDomainManager *_domainManager;	// 56 = 0x38
    NSMutableSet *_disabledDomainNames;	// 64 = 0x40
    NSMutableDictionary *_stmtsBySQL;	// 72 = 0x48
    NSMutableDictionary *_countAndTimeBySQL;	// 80 = 0x50
    NSMutableSet *_upToDateBackupUDIDs;	// 88 = 0x58
}

+ (id)cacheWithPath:(id)arg1;	// IMP=0x000000010000f9d0
+ (id)systemPath;	// IMP=0x000000010000f9ac
@property(retain, nonatomic) MBDomainManager *domainManager; // @synthesize domainManager=_domainManager;
- (id)keyBagInfoForBackupUDID:(id)arg1;	// IMP=0x000000010001b434
- (void)addKeyBagInfo:(id)arg1 forBackupUDID:(id)arg2;	// IMP=0x000000010001b350
- (void)setKeyBagInfo:(id)arg1 forBackupUDID:(id)arg2;	// IMP=0x000000010001b124
- (void)setPlaceholderResourceRelativePaths:(id)arg1 lastModfied:(long long)arg2 forBundleID:(id)arg3;	// IMP=0x000000010001af28
- (id)relativePathsOfPlaceholderResourcesWithBundleID:(id)arg1 lastModified:(long long)arg2;	// IMP=0x000000010001ae08
- (id)restoreFailuresForDataClass:(id)arg1 assetType:(id)arg2 range:(struct _NSRange)arg3;	// IMP=0x000000010001ab0c
- (unsigned long long)countOfRestoreFailuresForDataclass:(id)arg1 assetType:(id)arg2;	// IMP=0x000000010001a9f0
- (void)addRestoreFailure:(id)arg1;	// IMP=0x000000010001a870
- (void)removeAllProtectionClassesToRetore;	// IMP=0x000000010001a828
- (void)setProtectionClass:(int)arg1 toRestoreForDomainName:(id)arg2 relativePath:(id)arg3;	// IMP=0x000000010001a738
- (id)protectionClassesToRestoreByPathWithOffset:(unsigned long long)arg1 limit:(unsigned long long)arg2;	// IMP=0x000000010001a42c
- (_Bool)restoreFilesExistForDomainName:(id)arg1 backupUDID:(id)arg2 size:(unsigned long long *)arg3;	// IMP=0x000000010001a2b0
- (_Bool)restoreFileExistsWithDomainName:(id)arg1 relativePath:(id)arg2 backupUDID:(id)arg3;	// IMP=0x000000010001a100
- (id)pathsToRestoreForDomain:(id)arg1 absolutePath:(id)arg2 pendingOnly:(_Bool)arg3 backupUDID:(id)arg4 range:(struct _NSRange)arg5;	// IMP=0x0000000100019ecc
- (id)filesToRestoreForDomainName:(id)arg1 relativePath:(id)arg2 pendingOnly:(_Bool)arg3 backupUDID:(id)arg4 range:(struct _NSRange)arg5;	// IMP=0x0000000100019c04
- (void)prioritizeRestoreFileWithFileID:(id)arg1;	// IMP=0x0000000100019b8c
- (void)setState:(int)arg1 forRestoreID:(unsigned long long)arg2;	// IMP=0x0000000100019b04
- (void)setState:(int)arg1 forFileID:(id)arg2 restoreID:(unsigned long long)arg3;	// IMP=0x0000000100019a50
- (void)setRestoreID:(unsigned long long)arg1 forDomainName:(id)arg2 relativePath:(id)arg3 backupUDID:(id)arg4;	// IMP=0x000000010001998c
- (void)setRestoreID:(unsigned long long)arg1 forRestoreFile:(id)arg2;	// IMP=0x00000001000198c0
- (void)addRestoreFile:(id)arg1;	// IMP=0x0000000100019684
- (id)restoreFileForItemID:(unsigned long long)arg1;	// IMP=0x00000001000195e8
- (id)restoreFileForFileID:(id)arg1;	// IMP=0x0000000100019538
- (id)restoreFilesForSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2 restoreID:(unsigned long long)arg3 pendingOnly:(_Bool)arg4 offset:(unsigned long long)arg5 limit:(unsigned long long)arg6;	// IMP=0x00000001000193f0
- (id)restoreFilesForBackupUDID:(id)arg1 offset:(unsigned long long)arg2 limit:(unsigned long long)arg3;	// IMP=0x0000000100019330
- (void)restoreFilesCount:(unsigned long long *)arg1 size:(unsigned long long *)arg2 forRestoreID:(unsigned long long)arg3 backupUDID:(id)arg4;	// IMP=0x0000000100019258
- (id)_restoreFilesWithStmt:(id)arg1;	// IMP=0x00000001000191b4
- (id)_restoreFileWithStmt:(id)arg1;	// IMP=0x0000000100019074
- (_Bool)containsFailedRestoreFilesForRestoreID:(unsigned long long)arg1;	// IMP=0x0000000100018fe0
- (_Bool)containsRestoreFilesWithState:(int)arg1 forRestoreID:(unsigned long long)arg2;	// IMP=0x0000000100018f28
- (_Bool)containsRestoreFilesForRestoreID:(unsigned long long)arg1;	// IMP=0x0000000100018e94
- (void)setRestoreBackupLastModified:(long long)arg1;	// IMP=0x0000000100018e38
- (long long)restoreBackupLastModified;	// IMP=0x0000000100018e0c
- (void)setRestoreSnapshotID:(long long)arg1;	// IMP=0x0000000100018db0
- (long long)restoreSnapshotID;	// IMP=0x0000000100018d84
- (void)setRestoreBackupUDID:(id)arg1;	// IMP=0x0000000100018d70
- (id)restoreBackupUDID;	// IMP=0x0000000100018d5c
- (void)removeAllRestores;	// IMP=0x0000000100018d14
- (void)setRestoreID:(unsigned long long)arg1 forType:(int)arg2 value:(id)arg3;	// IMP=0x0000000100018b78
- (id)restoreModeForBackgroundAppWithRestoreID:(unsigned long long)arg1;	// IMP=0x0000000100018aac
- (unsigned long long)restoreIDForMode:(id)arg1;	// IMP=0x0000000100018864
- (void)removeAllFileEncryptionKeys;	// IMP=0x000000010001881c
- (void)removeFileEncryptionKeyForInodeNumber:(unsigned long long)arg1;	// IMP=0x00000001000187b8
- (void)setFileEncryptionKey:(id)arg1 forInodeNumber:(unsigned long long)arg2;	// IMP=0x0000000100018730
- (id)encryptionKeyForFileWithInodeNumber:(unsigned long long)arg1;	// IMP=0x00000001000186a0
- (void)removeAllFilesMissingEncryptionKey;	// IMP=0x0000000100018658
- (void)removeFileMissingEncryptionKeyWithPath:(id)arg1;	// IMP=0x00000001000185f4
- (void)addFileMissingEncryptionKeyWithPath:(id)arg1;	// IMP=0x0000000100018590
- (id)pathsForFilesMissingEncryptionKeyWithOffset:(unsigned long long)arg1 limit:(unsigned long long)arg2;	// IMP=0x0000000100018490
- (_Bool)areFilesMissingEncryptionKey;	// IMP=0x0000000100018418
- (void)removeAllFileChanges;	// IMP=0x00000001000183d0
- (void)updateFileChangesAfterRemovingDomainName:(id)arg1;	// IMP=0x0000000100018300
- (void)updateFileChangesAfterCommittingSnapshot;	// IMP=0x0000000100018240
- (void)fileChangeCount:(unsigned long long *)arg1 size:(unsigned long long *)arg2;	// IMP=0x00000001000181a8
- (void)setResult:(int)arg1 forFileChangeID:(id)arg2;	// IMP=0x00000001000180c0
- (void)addFileChange:(id)arg1;	// IMP=0x0000000100017db4
- (id)fileChangeIDsWithResult:(int)arg1 offset:(unsigned long long)arg2 limit:(unsigned long long)arg3;	// IMP=0x0000000100017c70
- (id)fileChangeEnumerator;	// IMP=0x0000000100017c58
- (id)_fileChangeFromStmt:(id)arg1;	// IMP=0x0000000100017a28
- (void)verifyBackupUDID:(id)arg1 service:(id)arg2;	// IMP=0x00000001000175b4
- (void)repair;	// IMP=0x00000001000173f4
- (_Bool)refreshForBackupUDID:(id)arg1 service:(id)arg2 deleted:(_Bool *)arg3 error:(id *)arg4;	// IMP=0x0000000100015df8
- (_Bool)_rebuildSnapshot:(id)arg1 backupUDID:(id)arg2 service:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000158a0
- (void)forceRefreshForBackupUDID:(id)arg1;	// IMP=0x000000010001583c
- (_Bool)isRefreshNeededForBackupUDID:(id)arg1;	// IMP=0x00000001000157cc
- (id)dateOfLastRefreshForBackupUDID:(id)arg1;	// IMP=0x0000000100015760
- (id)_lastRefreshPropertyKeyForBackupUDID:(id)arg1;	// IMP=0x0000000100015710
- (void)removeAllDisabledDomains;	// IMP=0x00000001000156b4
- (void)removeDisabledDomainNames:(id)arg1;	// IMP=0x0000000100015544
- (void)addDisabledDomainNames:(id)arg1 restricted:(_Bool)arg2;	// IMP=0x00000001000153a0
- (void)setDisabledDomainNames:(id)arg1 restrictedDomainNames:(id)arg2;	// IMP=0x00000001000152d0
- (_Bool)isDomainNameEnabled:(id)arg1;	// IMP=0x0000000100015294
- (id)_disabledDomainNames;	// IMP=0x00000001000151cc
- (id)domainInfoForName:(id)arg1 backupUDID:(id)arg2;	// IMP=0x0000000100014ffc
- (id)activeDomainNamesForBackupUDID:(id)arg1;	// IMP=0x0000000100014ed0
- (id)domainNamesForBackupUDID:(id)arg1;	// IMP=0x0000000100014da4
- (unsigned long long)nextBackupSizeWithUDID:(id)arg1;	// IMP=0x0000000100014ca0
- (id)encryptionKeyForFileWithID:(id)arg1 backupUDID:(id)arg2;	// IMP=0x0000000100014bdc
- (id)deletedFileIDEnumeratorForBackupUDID:(id)arg1;	// IMP=0x0000000100014b2c
- (id)encryptedFileIDEnumeratorForBackupUDID:(id)arg1;	// IMP=0x0000000100014a7c
- (id)fileIDEnumeratorForSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2;	// IMP=0x00000001000149b0
- (id)_fileIDEnumeratorWithStmt:(id)arg1;	// IMP=0x000000010001489c
- (void)setCommitted:(_Bool)arg1 forFileID:(id)arg2 snapshotID:(unsigned long long)arg3 backupUDID:(id)arg4;	// IMP=0x00000001000147c4
- (void)removeFileID:(id)arg1 forSnapshotID:(unsigned long long)arg2 backupUDID:(id)arg3;	// IMP=0x0000000100014708
- (void)addFile:(id)arg1 snapshotID:(unsigned long long)arg2 backupUDID:(id)arg3 committed:(_Bool)arg4;	// IMP=0x0000000100013f08
- (_Bool)encryptedFilesExistForBackupUDID:(id)arg1 keybagID:(long long)arg2;	// IMP=0x0000000100013e00
- (_Bool)encryptedFilesExistForBackupUDID:(id)arg1;	// IMP=0x0000000100013d14
- (id)fileForID:(id)arg1 snapshotID:(unsigned long long)arg2 backupUDID:(id)arg3;	// IMP=0x0000000100013b98
- (id)fileForID:(id)arg1 backupUDID:(id)arg2;	// IMP=0x000000010001395c
- (id)_fileWithStmt:(id)arg1;	// IMP=0x00000001000134ac
- (void)setLocalCommitted:(long long)arg1 snapshotID:(unsigned long long)arg2 backupUDID:(id)arg3;	// IMP=0x0000000100013408
- (long long)localCommittedForSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2;	// IMP=0x0000000100013320
- (void)setStale:(_Bool)arg1 forSnapshotID:(unsigned long long)arg2 backupUDID:(id)arg3;	// IMP=0x000000010001327c
- (_Bool)isStaleSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2;	// IMP=0x0000000100013190
- (void)setCommitted:(long long)arg1 forSnapshotID:(unsigned long long)arg2 backupUDID:(id)arg3;	// IMP=0x0000000100013038
- (void)setLastModified:(long long)arg1 forSnapshotID:(unsigned long long)arg2 backupUDID:(id)arg3;	// IMP=0x0000000100012f3c
- (_Bool)areAllFilesCommittedForSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2;	// IMP=0x0000000100012e50
- (void)mergeSnapshotForID:(unsigned long long)arg1 backupUDID:(id)arg2 lastModified:(long long)arg3;	// IMP=0x0000000100012920
- (void)removeSnapshotForID:(unsigned long long)arg1 backupUDID:(id)arg2 lastModified:(long long)arg3;	// IMP=0x0000000100012430
- (void)_removeSnapshotForID:(unsigned long long)arg1 backupUDID:(id)arg2;	// IMP=0x00000001000123a8
- (void)addSnapshot:(id)arg1 backupUDID:(id)arg2;	// IMP=0x00000001000121bc
- (id)snapshotsForBackupUDID:(id)arg1;	// IMP=0x0000000100011ff8
- (id)snapshotForSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2;	// IMP=0x0000000100011f40
- (id)_snapshotWithStmt:(id)arg1;	// IMP=0x0000000100011e38
- (void)removeAllBackups;	// IMP=0x0000000100011df0
- (void)removeBackupforUDID:(id)arg1;	// IMP=0x0000000100011d34
- (void)setLastModified:(long long)arg1 forBackupUDID:(id)arg2;	// IMP=0x0000000100011c5c
- (void)removeDomainName:(id)arg1 backupUDID:(id)arg2 lastModified:(long long)arg3;	// IMP=0x0000000100011a94
- (void)addBackup:(id)arg1 lastModified:(long long)arg2;	// IMP=0x00000001000118d0
- (void)keybagUUID:(id *)arg1 keybagID:(unsigned int *)arg2 forBackupUDID:(id)arg3;	// IMP=0x0000000100011834
- (id)backupForUDID:(id)arg1 lastModified:(long long *)arg2;	// IMP=0x000000010001161c
- (void)removeAccount;	// IMP=0x00000001000115c8
- (void)setConfiguration:(id)arg1;	// IMP=0x000000010001144c
- (id)configuration;	// IMP=0x00000001000112d4
- (id)creationDate;	// IMP=0x0000000100011284
- (void)removePropertyForKey:(id)arg1;	// IMP=0x00000001000111c8
- (void)setProperty:(id)arg1 forKey:(id)arg2;	// IMP=0x00000001000110cc
- (id)propertyForKey:(id)arg1;	// IMP=0x0000000100010fe4
- (void)vacuum;	// IMP=0x0000000100010fd0
- (void)analyze;	// IMP=0x0000000100010fbc
- (void)rollback;	// IMP=0x0000000100010fa8
- (void)end;	// IMP=0x0000000100010f94
- (void)begin;	// IMP=0x0000000100010f80
- (void)close;	// IMP=0x0000000100010e48
- (void)open;	// IMP=0x0000000100010930
- (long long)_lastInsertRowID;	// IMP=0x00000001000108f0
- (void)_finalizeAll;	// IMP=0x00000001000108e0
- (id)_prepare:(id)arg1;	// IMP=0x0000000100010780
- (void)_exec:(id)arg1;	// IMP=0x000000010001069c
- (void)_logProfile;	// IMP=0x0000000100010214
- (void)_profile:(id)arg1 time:(double)arg2;	// IMP=0x0000000100010084
- (void)_raise:(id)arg1;	// IMP=0x000000010000fe14
- (void)_remove;	// IMP=0x000000010000fc40
- (void)dealloc;	// IMP=0x000000010000fbbc
- (id)initWithPath:(id)arg1;	// IMP=0x000000010000fa08

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


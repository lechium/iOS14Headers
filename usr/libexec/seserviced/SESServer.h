//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSXPCListener.h>

#import "NSXPCListenerDelegate-Protocol.h"
#import "SEEndPointXPCInterface-Protocol.h"

@class NSObject, NSString, SESDatabase;
@protocol OS_dispatch_queue;

@interface SESServer : NSXPCListener <SEEndPointXPCInterface, NSXPCListenerDelegate>
{
    NSObject<OS_dispatch_queue> *_messageQueue;	// 8 = 0x8
    SESDatabase *_database;	// 16 = 0x10
}

- (void).cxx_destruct;	// IMP=0x000000010002383c
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x0000000100023348
- (oneway void)createCertificateForKeyData:(id)arg1 withKeyData:(id)arg2 subjectIdentifier:(id)arg3 authorityIdentifier:(id)arg4 laExternalizedContext:(id)arg5 nonce:(id)arg6 OIDs:(id)arg7 reply:(CDUnknownBlockType)arg8;	// IMP=0x0000000100009754
- (oneway void)createSEABAASCertificate:(id)arg1 subjectIdentifier:(id)arg2 nonce:(id)arg3 OIDs:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x0000000100009114
- (oneway void)createPTAttestation:(id)arg1 subjectIdentifier:(id)arg2 nonce:(id)arg3 OIDs:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x0000000100008b20
- (oneway void)rewrapWithSEKey:(id)arg1 cipherText:(id)arg2 publicKey:(id)arg3 decryptAlgorithm:(id)arg4 decryptSharedInfo:(id)arg5 encryptAlgorithm:(id)arg6 encryptSharedInfo:(id)arg7 certificate:(id)arg8 laExternalizedContext:(id)arg9 decryptAuthenticationData:(id)arg10 decryptAuthenticationTag:(id)arg11 encryptAuthenticationData:(id)arg12 reply:(CDUnknownBlockType)arg13;	// IMP=0x00000001000084ac
- (oneway void)decryptWithSEKey:(id)arg1 cipherText:(id)arg2 publicKey:(id)arg3 algorithm:(id)arg4 laExternalizedContext:(id)arg5 sharedInfo:(id)arg6 authenticationData:(id)arg7 authenticationTag:(id)arg8 reply:(CDUnknownBlockType)arg9;	// IMP=0x0000000100007fdc
- (oneway void)encryptWithSEKey:(id)arg1 plainText:(id)arg2 publicKey:(id)arg3 algorithm:(id)arg4 laExternalizedContext:(id)arg5 sharedInfo:(id)arg6 authenticationData:(id)arg7 reply:(CDUnknownBlockType)arg8;	// IMP=0x0000000100007af4
- (oneway void)sharedSecretWithSEKey:(id)arg1 publicKey:(id)arg2 algorithm:(id)arg3 laExternalizedContext:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x00000001000077a4
- (oneway void)signPrecomputedDigest:(id)arg1 digest:(id)arg2 algorithm:(id)arg3 laExternalizedContext:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x0000000100007470
- (oneway void)signWithSEKey:(id)arg1 data:(id)arg2 algorithm:(id)arg3 laExternalizedContext:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x00000001000070fc
- (oneway void)deleteSEKey:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100006ea0
- (oneway void)createSEKey:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100006a3c
- (id)getKeyHandle:(id)arg1 key:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000065d4
- (id)getUsableKeySlot:(id)arg1;	// IMP=0x00000001000062e4
- (void)keyOperation:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010000606c
- (void)keyServiceAvailable:(CDUnknownBlockType)arg1;	// IMP=0x0000000100005c2c
- (void)handleMFDNotification:(id)arg1;	// IMP=0x0000000100005bbc
- (id)initializeRAMRepresentation:(id)arg1;	// IMP=0x0000000100005598
- (oneway void)getEndPointBindingAttestationRequestItems:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010001c3c8
- (oneway void)deleteEndpointIdWithUuid:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010001c154
- (oneway void)addEndpointId:(id)arg1 withUuid:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010001beac
- (oneway void)getEndpointIdWithUuid:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010001bbc4
- (oneway void)deleteInvitationWithId:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010001b950
- (oneway void)addInvitationWithId:(id)arg1 data:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010001b6a8
- (oneway void)getInvitationWithId:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010001b3b8
- (oneway void)getInvitations:(CDUnknownBlockType)arg1;	// IMP=0x000000010001b108
- (oneway void)getVehicleOEMRootPKCertificate:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010001ae40
- (void)remoteTerminationRequestSync:(id)arg1 remoteTerminationRequest:(id)arg2 sesDatabase:(id)arg3 endPointEntity:(id)arg4 endPoint:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x000000010001a8b0
- (oneway void)remoteTerminationRequestWithProxy:(id)arg1 remoteTerminationRequest:(id)arg2 identifier:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010001a570
- (oneway void)deleteTerminatedEndPointWithProxy:(id)arg1 identifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100019f60
- (oneway void)deleteEndPointWithPublicKeyIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100019ed4
- (oneway void)deleteEndPointWithPublicKey:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100019e48
- (oneway void)privacyEncryptDataWithEndPoint:(id)arg1 data:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100019ac0
- (oneway void)privacyDecryptDataWithEndPoint:(id)arg1 data:(id)arg2 ephemeralPublicKey:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010001984c
- (oneway void)authorizeEndPointWithIdentifier:(id)arg1 externalCA:(id)arg2 instanceCA:(id)arg3 endpointCertificate:(id)arg4 encryptionKeyAttestation:(id)arg5 bindingAttestation:(id)arg6 confidentialDataOffset:(unsigned short)arg7 confidentialDataLength:(unsigned short)arg8 metaData:(id)arg9 authorizationID:(id)arg10 reply:(CDUnknownBlockType)arg11;	// IMP=0x00000001000192a0
- (oneway void)deleteEndPointAuthorizationID:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000190ec
- (oneway void)listEndPointAuthorizations:(CDUnknownBlockType)arg1;	// IMP=0x0000000100018f40
- (oneway void)createEndPointAuthorizationID:(id)arg1 userAuth:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00000001000189a0
- (oneway void)setConfidentialDataEndPointWithIdentifier:(id)arg1 senderEphemeralPublicKey:(id)arg2 encryptedData:(id)arg3 offset:(unsigned short)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x0000000100018638
- (oneway void)createEncryptionKeyEndPointWithIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100018370
- (oneway void)getPrivateDataEndPointWithIdentifier:(id)arg1 privateDataOffset:(unsigned short)arg2 privateDataLength:(unsigned short)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0000000100017fc0
- (oneway void)updateEndpoint:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100017d70
- (oneway void)setSharingRecordsEndPointWithIdentifier:(id)arg1 sharingRecords:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100017b24
- (oneway void)setPrivateDataEndPointWithIdentifier:(id)arg1 privateData:(id)arg2 privateDataOffset:(unsigned short)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00000001000176fc
- (oneway void)deleteEndPointWithIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100017284
- (oneway void)signatureWithEndPointIdentifier:(id)arg1 metaDataHash:(id)arg2 authorization:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0000000100016ec8
- (oneway void)revokeEndPointWithIdentifier:(id)arg1 nonce:(id)arg2 metaData:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00000001000169bc
- (id)getEncryptedCarOEMProprietaryData:(id)arg1 withEndpointEntity:(id)arg2 withSecureElement:(id)arg3;	// IMP=0x0000000100016534
- (oneway void)configureEndPointWithIdentifier:(id)arg1 privateData:(id)arg2 confidentialData:(id)arg3 contaclessVolatileVisibility:(id)arg4 contaclessPersistentVisibility:(id)arg5 wiredVolatileVisibility:(id)arg6 wiredPersistentVisibility:(id)arg7 reply:(CDUnknownBlockType)arg8;	// IMP=0x00000001000160a8
- (id)_ensureCAExistsAndValid:(id)arg1 clientName:(id)arg2 secureElement:(id)arg3 database:(id)arg4 error:(id *)arg5;	// IMP=0x0000000100015e64
- (oneway void)createEndPointWithIdentifier:(id)arg1 authorityIdentifier:(id)arg2 subjectIdentifer:(id)arg3 configuration:(id)arg4 readerIdentifier:(id)arg5 readerPublicKey:(id)arg6 readerInformation:(id)arg7 environment:(id)arg8 startDate:(id)arg9 endDate:(id)arg10 keyIdentifier:(id)arg11 authorizedKeys:(id)arg12 confidentialMailBoxSize:(id)arg13 privateMailBoxSize:(id)arg14 counter:(id)arg15 reply:(CDUnknownBlockType)arg16;	// IMP=0x000000010001431c
- (id)_renewEndPointCAIfExpired:(id)arg1 secureElement:(id)arg2;	// IMP=0x0000000100013f2c
- (void)listEndPointsSync:(id)arg1 clientInfo:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100013ccc
- (oneway void)listEndPointsWithProxy:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100013ae4
- (oneway void)listEndPoints:(CDUnknownBlockType)arg1;	// IMP=0x0000000100013904
- (oneway void)deleteEndPointCA:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100013268
- (oneway void)createEndPointCA:(id)arg1 subjectIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100012e74
- (id)_createEndPointCA:(id)arg1 database:(id)arg2 clientName:(id)arg3 identifier:(id)arg4 subjectIdentifier:(id)arg5 error:(id *)arg6;	// IMP=0x0000000100012528
- (oneway void)listEndPointCAs:(CDUnknownBlockType)arg1;	// IMP=0x0000000100012178
- (oneway void)preWarmWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0000000100012164
- (oneway void)preWarm:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100011c44
- (id)_getEndPointAndValidateAccess:(id)arg1 identifier:(id)arg2 clientInfo:(id)arg3 outEndPointEntity:(id *)arg4 outEndPoint:(id *)arg5;	// IMP=0x0000000100011810
- (void)endPointDBAction:(id)arg1 clientInfo:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00000001000115b8
- (void)endPointAction:(id)arg1 proxy:(id)arg2 clientInfo:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0000000100011310
- (void)endPointAction:(id)arg1 clientInfo:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010001108c
- (void)secureElementService:(CDUnknownBlockType)arg1;	// IMP=0x0000000100010e64
- (void)databaseServiceWithProxy:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100010bd0
- (void)databaseService:(CDUnknownBlockType)arg1;	// IMP=0x00000001000109b0
- (void)endPointServiceAvailable:(CDUnknownBlockType)arg1;	// IMP=0x000000010001070c
- (void)endPointServiceAvailableWithProxy:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100010438

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


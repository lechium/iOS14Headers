//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class FindBaseServiceProvider, NSDate, NSDictionary, NSError, NSMutableDictionary, NSRecursiveLock, NSString, NSURL, PCPersistentTimer;
@protocol FMFURLSessionTask, FMRequestDelegate;

@interface FMRequest : NSObject
{
    _Bool _inProgress;	// 8 = 0x8
    _Bool _cancelled;	// 9 = 0x9
    _Bool _isComplete;	// 10 = 0xa
    _Bool _willRetry;	// 11 = 0xb
    FindBaseServiceProvider *_provider;	// 16 = 0x10
    long long _httpResponseStatus;	// 24 = 0x18
    NSDictionary *_httpResponseHeaders;	// 32 = 0x20
    NSDictionary *_httpResponseBody;	// 40 = 0x28
    NSError *_httpResponseError;	// 48 = 0x30
    id <FMRequestDelegate> _delegate;	// 56 = 0x38
    CDUnknownBlockType _willSendHandler;	// 64 = 0x40
    CDUnknownBlockType _completionHandler;	// 72 = 0x48
    NSDictionary *_alertFromServerResponse;	// 80 = 0x50
    NSObject<FMFURLSessionTask> *_currentDataTask;	// 88 = 0x58
    NSRecursiveLock *_requestModifierLock;	// 96 = 0x60
    long long _totalRetryCount;	// 104 = 0x68
    NSMutableDictionary *_totalRetriesByType;	// 112 = 0x70
    NSMutableDictionary *_consecutiveRetriesByType;	// 120 = 0x78
    NSString *_lastRetryType;	// 128 = 0x80
    NSDate *_lastRetryTime;	// 136 = 0x88
    NSString *_nextRetryType;	// 144 = 0x90
    NSDate *_nextRetryTime;	// 152 = 0x98
    PCPersistentTimer *_retryTimer;	// 160 = 0xa0
}

+ (void)initialize;	// IMP=0x0000000100026ed4
- (void).cxx_destruct;	// IMP=0x000000010002b524
@property(retain, nonatomic) PCPersistentTimer *retryTimer; // @synthesize retryTimer=_retryTimer;
@property(retain, nonatomic) NSDate *nextRetryTime; // @synthesize nextRetryTime=_nextRetryTime;
@property(retain, nonatomic) NSString *nextRetryType; // @synthesize nextRetryType=_nextRetryType;
@property(retain, nonatomic) NSDate *lastRetryTime; // @synthesize lastRetryTime=_lastRetryTime;
@property(retain, nonatomic) NSString *lastRetryType; // @synthesize lastRetryType=_lastRetryType;
@property(retain, nonatomic) NSMutableDictionary *consecutiveRetriesByType; // @synthesize consecutiveRetriesByType=_consecutiveRetriesByType;
@property(retain, nonatomic) NSMutableDictionary *totalRetriesByType; // @synthesize totalRetriesByType=_totalRetriesByType;
@property(nonatomic) long long totalRetryCount; // @synthesize totalRetryCount=_totalRetryCount;
@property(retain, nonatomic) NSRecursiveLock *requestModifierLock; // @synthesize requestModifierLock=_requestModifierLock;
@property(retain, nonatomic) NSObject<FMFURLSessionTask> *currentDataTask; // @synthesize currentDataTask=_currentDataTask;
@property(retain, nonatomic) NSDictionary *alertFromServerResponse; // @synthesize alertFromServerResponse=_alertFromServerResponse;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(copy, nonatomic) CDUnknownBlockType willSendHandler; // @synthesize willSendHandler=_willSendHandler;
@property(nonatomic) __weak id <FMRequestDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSError *httpResponseError; // @synthesize httpResponseError=_httpResponseError;
@property(retain, nonatomic) NSDictionary *httpResponseBody; // @synthesize httpResponseBody=_httpResponseBody;
@property(retain, nonatomic) NSDictionary *httpResponseHeaders; // @synthesize httpResponseHeaders=_httpResponseHeaders;
@property(nonatomic) long long httpResponseStatus; // @synthesize httpResponseStatus=_httpResponseStatus;
@property(nonatomic) _Bool willRetry; // @synthesize willRetry=_willRetry;
@property(nonatomic) _Bool isComplete; // @synthesize isComplete=_isComplete;
@property(nonatomic) _Bool cancelled; // @synthesize cancelled=_cancelled;
@property(nonatomic) _Bool inProgress; // @synthesize inProgress=_inProgress;
@property(retain, nonatomic) FindBaseServiceProvider *provider; // @synthesize provider=_provider;
- (void)_networkStateChanged:(id)arg1;	// IMP=0x000000010002b2c8
- (void)_incrementRetryCountForType:(id)arg1;	// IMP=0x000000010002b00c
- (int)_consecutiveRetryCountForType:(id)arg1;	// IMP=0x000000010002af64
- (int)_retryCountForType:(id)arg1;	// IMP=0x000000010002aebc
- (void)_scheduleRetryAfterTimeInterval:(double)arg1;	// IMP=0x000000010002aa50
- (void)_networkCameUp;	// IMP=0x000000010002a644
- (void)_retryNow;	// IMP=0x000000010002a510
- (void)_retryTimerFired;	// IMP=0x000000010002a3a8
- (double)_decayedWaitIntervalForRetryCount:(long long)arg1;	// IMP=0x000000010002a304
- (void)checkAndScheduleRetries;	// IMP=0x0000000100029808
- (void)_disablePowerAssertion;	// IMP=0x0000000100029754
- (void)_enablePowerAssertion;	// IMP=0x00000001000296a0
- (void)_endXPCTransaction;	// IMP=0x00000001000295ec
- (void)_beginXPCTransaction;	// IMP=0x0000000100029538
- (id)_basicAuthValue;	// IMP=0x00000001000290ec
- (void)cancel;	// IMP=0x0000000100028ee8
- (void)send;	// IMP=0x00000001000279d0
@property(readonly, nonatomic) long long responseErrorType;
- (_Bool)canReplace:(id)arg1;	// IMP=0x00000001000277ac
- (id)authTokenType;	// IMP=0x0000000100027730
@property(readonly, nonatomic) NSString *authToken;
@property(readonly, nonatomic) _Bool canRequestBeRetriedNow;
@property(readonly, nonatomic) long long maxConsecutiveNetworkNotificationRetries;
@property(readonly, nonatomic) long long maxNonNetworkRelatedRetries;
@property(readonly, nonatomic) long long maxTimerBasedNetworkRetries;
@property(readonly, nonatomic) double maxRetryInterval;
@property(readonly, nonatomic) double retryIntervalDecayFactor;
@property(readonly, nonatomic) double firstRetryInterval;
@property(readonly, nonatomic) NSMutableDictionary *requestHeaders;
@property(readonly, nonatomic) _Bool showAuthFailedMessage;
@property(readonly, nonatomic) NSMutableDictionary *requestBody;
@property(readonly, nonatomic) NSURL *requestUrl;
- (id)urlSession;	// IMP=0x0000000100026f3c
- (void)deinitializeRequest;	// IMP=0x0000000100026d8c
- (void)dealloc;	// IMP=0x0000000100026cf4
- (id)initWithProvider:(id)arg1;	// IMP=0x0000000100026be4
- (id)init;	// IMP=0x0000000100026bd4

@end


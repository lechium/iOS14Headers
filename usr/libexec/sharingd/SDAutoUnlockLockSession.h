//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SDAutoUnlockAuthSession.h"

@class NSArray, NSData, NSDate, NSObject, NSString, NSUUID, SDAutoUnlockIconTransferStore, SDUnlockSessionAuthToken, SFAutoUnlockDevice;
@protocol OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface SDAutoUnlockLockSession : SDAutoUnlockAuthSession
{
    _Bool _useProxy;	// 8 = 0x8
    _Bool _wifiState;	// 9 = 0x9
    _Bool _otherSessionCancel;	// 10 = 0xa
    _Bool _otherProviderCancel;	// 11 = 0xb
    _Bool _attemptTimedOut;	// 12 = 0xc
    _Bool _chosenDevice;	// 13 = 0xd
    _Bool _canceled;	// 14 = 0xe
    _Bool _oldWatch;	// 15 = 0xf
    _Bool _onlyRanging;	// 16 = 0x10
    _Bool _foundPeer;	// 17 = 0x11
    _Bool _connected;	// 18 = 0x12
    _Bool _lockedKeyBag;	// 19 = 0x13
    _Bool _unlockSucceeded;	// 20 = 0x14
    _Bool _deviceWasLocked;	// 21 = 0x15
    _Bool _receivedAWDLInfo;	// 22 = 0x16
    _Bool _receivedAuthPromptResponse;	// 23 = 0x17
    _Bool _sendingConfirmation;	// 24 = 0x18
    _Bool _sentExchangeResponse;	// 25 = 0x19
    _Bool _receivedExchangeRequest;	// 26 = 0x1a
    _Bool _supportsConfirmationACK;	// 27 = 0x1b
    _Bool _waitingForDisplayOrClamshell;	// 28 = 0x1c
    _Bool _sentImageData;	// 29 = 0x1d
    _Bool _imageDataAlreadyCached;	// 30 = 0x1e
    _Bool _needsNewImage;	// 31 = 0x1f
    _Bool _awdlUp;	// 32 = 0x20
    int _proxyRSSI;	// 36 = 0x24
    int _watchRSSI;	// 40 = 0x28
    NSUUID *_bluetoothID;	// 48 = 0x30
    NSDate *_startDate;	// 56 = 0x38
    double _discoveryTime;	// 64 = 0x40
    double _proxyDiscoveryTime;	// 72 = 0x48
    NSString *_proxyDeviceModel;	// 80 = 0x50
    double _proxyConnectionTime;	// 88 = 0x58
    unsigned long long _connectedBluetoothDevices;	// 96 = 0x60
    long long _timeSinceLastMachineWake;	// 104 = 0x68
    long long _lastSleepType;	// 112 = 0x70
    SFAutoUnlockDevice *_autoUnlockDevice;	// 120 = 0x78
    NSData *_externalACMContext;	// 128 = 0x80
    NSData *_imageData;	// 136 = 0x88
    NSData *_imageHash;	// 144 = 0x90
    SDAutoUnlockIconTransferStore *_iconTransferStore;	// 152 = 0x98
    NSArray *_peerList;	// 160 = 0xa0
    NSData *_peerMacAddress;	// 168 = 0xa8
    SDUnlockSessionAuthToken *_sessionAuthToken;	// 176 = 0xb0
    long long _displayCount;	// 184 = 0xb8
    long long _configChangeType;	// 192 = 0xc0
    NSObject<OS_dispatch_source> *_displayTimer;	// 200 = 0xc8
    NSObject<OS_dispatch_source> *_confirmationTimer;	// 208 = 0xd0
    NSString *_watchModelID;	// 216 = 0xd8
    NSString *_watchBuildVersion;	// 224 = 0xe0
    NSString *_watchOSVersion;	// 232 = 0xe8
    NSDate *_discoveryDate;	// 240 = 0xf0
    NSDate *_connectionDate;	// 248 = 0xf8
    NSDate *_firstSend;	// 256 = 0x100
    NSDate *_exchageResponseDate;	// 264 = 0x108
    NSDate *_displayOrClamshellWaitingDate;	// 272 = 0x110
    NSDate *_confirmationSendDate;	// 280 = 0x118
    double _btOverall;	// 288 = 0x120
    double _btBootstrap;	// 296 = 0x128
    double _awdlInfoExchange;	// 304 = 0x130
    double _keyRequestExchange;	// 312 = 0x138
    double _tokenExchange;	// 320 = 0x140
    double _confirmation;	// 328 = 0x148
    double _peerFoundInterval;	// 336 = 0x150
    double _awdlTotal;	// 344 = 0x158
    double _completeExchange;	// 352 = 0x160
    double _connectionTime;	// 360 = 0x168
    double _connectionWaitTime;	// 368 = 0x170
    double _displayClamshellWaitTime;	// 376 = 0x178
}

- (void).cxx_destruct;	// IMP=0x0000000100260ed4
@property(nonatomic) double displayClamshellWaitTime; // @synthesize displayClamshellWaitTime=_displayClamshellWaitTime;
@property(nonatomic) double connectionWaitTime; // @synthesize connectionWaitTime=_connectionWaitTime;
@property(nonatomic) double connectionTime; // @synthesize connectionTime=_connectionTime;
@property(nonatomic) double completeExchange; // @synthesize completeExchange=_completeExchange;
@property(nonatomic) double awdlTotal; // @synthesize awdlTotal=_awdlTotal;
@property(nonatomic) double peerFoundInterval; // @synthesize peerFoundInterval=_peerFoundInterval;
@property(nonatomic) double confirmation; // @synthesize confirmation=_confirmation;
@property(nonatomic) double tokenExchange; // @synthesize tokenExchange=_tokenExchange;
@property(nonatomic) double keyRequestExchange; // @synthesize keyRequestExchange=_keyRequestExchange;
@property(nonatomic) double awdlInfoExchange; // @synthesize awdlInfoExchange=_awdlInfoExchange;
@property(nonatomic) double btBootstrap; // @synthesize btBootstrap=_btBootstrap;
@property(nonatomic) double btOverall; // @synthesize btOverall=_btOverall;
@property(retain, nonatomic) NSDate *confirmationSendDate; // @synthesize confirmationSendDate=_confirmationSendDate;
@property(retain, nonatomic) NSDate *displayOrClamshellWaitingDate; // @synthesize displayOrClamshellWaitingDate=_displayOrClamshellWaitingDate;
@property(retain, nonatomic) NSDate *exchageResponseDate; // @synthesize exchageResponseDate=_exchageResponseDate;
@property(retain, nonatomic) NSDate *firstSend; // @synthesize firstSend=_firstSend;
@property(retain, nonatomic) NSDate *connectionDate; // @synthesize connectionDate=_connectionDate;
@property(retain, nonatomic) NSDate *discoveryDate; // @synthesize discoveryDate=_discoveryDate;
@property(retain, nonatomic) NSString *watchOSVersion; // @synthesize watchOSVersion=_watchOSVersion;
@property(retain, nonatomic) NSString *watchBuildVersion; // @synthesize watchBuildVersion=_watchBuildVersion;
@property(retain, nonatomic) NSString *watchModelID; // @synthesize watchModelID=_watchModelID;
@property(nonatomic) _Bool awdlUp; // @synthesize awdlUp=_awdlUp;
@property(retain) NSObject<OS_dispatch_source> *confirmationTimer; // @synthesize confirmationTimer=_confirmationTimer;
@property(retain) NSObject<OS_dispatch_source> *displayTimer; // @synthesize displayTimer=_displayTimer;
@property(nonatomic) long long configChangeType; // @synthesize configChangeType=_configChangeType;
@property(nonatomic) long long displayCount; // @synthesize displayCount=_displayCount;
@property(nonatomic) int watchRSSI; // @synthesize watchRSSI=_watchRSSI;
@property(retain, nonatomic) SDUnlockSessionAuthToken *sessionAuthToken; // @synthesize sessionAuthToken=_sessionAuthToken;
@property(copy, nonatomic) NSData *peerMacAddress; // @synthesize peerMacAddress=_peerMacAddress;
@property(copy, nonatomic) NSArray *peerList; // @synthesize peerList=_peerList;
@property(nonatomic) _Bool needsNewImage; // @synthesize needsNewImage=_needsNewImage;
@property(nonatomic) _Bool imageDataAlreadyCached; // @synthesize imageDataAlreadyCached=_imageDataAlreadyCached;
@property(nonatomic) _Bool sentImageData; // @synthesize sentImageData=_sentImageData;
@property(nonatomic) _Bool waitingForDisplayOrClamshell; // @synthesize waitingForDisplayOrClamshell=_waitingForDisplayOrClamshell;
@property(nonatomic) _Bool supportsConfirmationACK; // @synthesize supportsConfirmationACK=_supportsConfirmationACK;
@property(nonatomic) _Bool receivedExchangeRequest; // @synthesize receivedExchangeRequest=_receivedExchangeRequest;
@property(nonatomic) _Bool sentExchangeResponse; // @synthesize sentExchangeResponse=_sentExchangeResponse;
@property(nonatomic) _Bool sendingConfirmation; // @synthesize sendingConfirmation=_sendingConfirmation;
@property(nonatomic) _Bool receivedAuthPromptResponse; // @synthesize receivedAuthPromptResponse=_receivedAuthPromptResponse;
@property(nonatomic) _Bool receivedAWDLInfo; // @synthesize receivedAWDLInfo=_receivedAWDLInfo;
@property(nonatomic) _Bool deviceWasLocked; // @synthesize deviceWasLocked=_deviceWasLocked;
@property(nonatomic) _Bool unlockSucceeded; // @synthesize unlockSucceeded=_unlockSucceeded;
@property(nonatomic) _Bool lockedKeyBag; // @synthesize lockedKeyBag=_lockedKeyBag;
@property(nonatomic) _Bool connected; // @synthesize connected=_connected;
@property(nonatomic) _Bool foundPeer; // @synthesize foundPeer=_foundPeer;
@property(nonatomic) _Bool onlyRanging; // @synthesize onlyRanging=_onlyRanging;
@property(nonatomic) _Bool oldWatch; // @synthesize oldWatch=_oldWatch;
@property(nonatomic) _Bool canceled; // @synthesize canceled=_canceled;
@property(retain, nonatomic) SDAutoUnlockIconTransferStore *iconTransferStore; // @synthesize iconTransferStore=_iconTransferStore;
@property(retain, nonatomic) NSData *imageHash; // @synthesize imageHash=_imageHash;
@property(retain, nonatomic) NSData *imageData; // @synthesize imageData=_imageData;
@property(retain, nonatomic) NSData *externalACMContext; // @synthesize externalACMContext=_externalACMContext;
@property(retain, nonatomic) SFAutoUnlockDevice *autoUnlockDevice; // @synthesize autoUnlockDevice=_autoUnlockDevice;
@property(nonatomic) long long lastSleepType; // @synthesize lastSleepType=_lastSleepType;
@property(nonatomic) long long timeSinceLastMachineWake; // @synthesize timeSinceLastMachineWake=_timeSinceLastMachineWake;
@property(nonatomic) unsigned long long connectedBluetoothDevices; // @synthesize connectedBluetoothDevices=_connectedBluetoothDevices;
@property(nonatomic) double proxyConnectionTime; // @synthesize proxyConnectionTime=_proxyConnectionTime;
@property(nonatomic) int proxyRSSI; // @synthesize proxyRSSI=_proxyRSSI;
@property(retain, nonatomic) NSString *proxyDeviceModel; // @synthesize proxyDeviceModel=_proxyDeviceModel;
@property(nonatomic) double proxyDiscoveryTime; // @synthesize proxyDiscoveryTime=_proxyDiscoveryTime;
@property(nonatomic) double discoveryTime; // @synthesize discoveryTime=_discoveryTime;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(nonatomic) _Bool chosenDevice; // @synthesize chosenDevice=_chosenDevice;
@property(nonatomic) _Bool attemptTimedOut; // @synthesize attemptTimedOut=_attemptTimedOut;
@property(nonatomic) _Bool otherProviderCancel; // @synthesize otherProviderCancel=_otherProviderCancel;
@property(nonatomic) _Bool otherSessionCancel; // @synthesize otherSessionCancel=_otherSessionCancel;
@property(nonatomic) _Bool wifiState; // @synthesize wifiState=_wifiState;
@property(nonatomic) _Bool useProxy; // @synthesize useProxy=_useProxy;
@property(retain, nonatomic) NSUUID *bluetoothID; // @synthesize bluetoothID=_bluetoothID;
- (void)sendUnlockConfirmation:(_Bool)arg1 withError:(id)arg2;	// IMP=0x000000010025ffc4
- (void)sendKeyExchangeResponseWithData:(id)arg1;	// IMP=0x000000010025fcc4
- (void)sendAuthPromptImageDataIfReady:(id)arg1;	// IMP=0x000000010025f52c
- (void)sendAuthPromptRequestWithImageHash:(id)arg1 appName:(id)arg2;	// IMP=0x000000010025f10c
- (void)sendAWDLInfoData:(id)arg1 type:(unsigned short)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000010025ee04
- (void)consumeAuthTokenIfReady;	// IMP=0x000000010025e888
- (void)startAWDL;	// IMP=0x000000010025dcf4
- (void)handleConfirmationACK;	// IMP=0x000000010025da94
- (void)handleSessionAuthToken:(id)arg1;	// IMP=0x000000010025d660
- (void)handleSessionKeyExchangeRequest:(id)arg1;	// IMP=0x000000010025ce8c
- (void)handleAuthPromptResponse:(id)arg1;	// IMP=0x000000010025cb20
- (void)handleAWDLInfo:(id)arg1;	// IMP=0x000000010025c498
- (void)handleMessageWithWrapper:(id)arg1;	// IMP=0x000000010025bff4
- (void)notifyDelegateWithError:(id)arg1;	// IMP=0x000000010025bda4
- (void)handleWiFiRequestInvalidated;	// IMP=0x000000010025bd38
- (void)handleRangingStarted;	// IMP=0x000000010025bc98
- (void)handlePeerFound:(_Bool)arg1;	// IMP=0x000000010025bbd0
- (void)handleAWDLUp;	// IMP=0x000000010025b9fc
- (void)handlePeerOutOfRange;	// IMP=0x000000010025b724
- (void)handlePeerInRange;	// IMP=0x000000010025b5cc
- (_Bool)peerInRange:(id)arg1;	// IMP=0x000000010025b318
- (void)handleRangingResults:(id)arg1 errorCode:(long long)arg2;	// IMP=0x000000010025aeb8
- (void)invalidateConfirmationTimer;	// IMP=0x000000010025ade0
- (void)restartConfirmationTimer:(unsigned long long)arg1 error:(id)arg2;	// IMP=0x000000010025ab5c
- (void)handleTimerFired;	// IMP=0x000000010025a5f4
- (void)invalidateTimerIfReady;	// IMP=0x000000010025a59c
- (id)aksPeerAvailable;	// IMP=0x000000010025a394
- (void)deviceConnected:(id)arg1;	// IMP=0x0000000100259fac
- (_Bool)handleFoundBLEDevice:(id)arg1 available:(_Bool)arg2 lockedOnWrist:(_Bool)arg3;	// IMP=0x0000000100259cb4
- (_Bool)handleFoundBLEDevice:(id)arg1;	// IMP=0x0000000100259c48
- (void)connectionActivated;	// IMP=0x000000010025992c
- (void)updateImageData:(id)arg1 imageHash:(id)arg2;	// IMP=0x0000000100259310
- (id)getAppName;	// IMP=0x0000000100259308
@property(readonly, nonatomic) _Bool usingProxy;
- (id)hintToken;	// IMP=0x00000001002591d4
- (_Bool)isAcceptor;	// IMP=0x00000001002591cc
- (id)attemptResults;	// IMP=0x0000000100258604
- (void)logResults;	// IMP=0x00000001002577ec
- (void)displayConfigChanged:(id)arg1;	// IMP=0x0000000100257748
- (void)clamshellStateChanged:(id)arg1;	// IMP=0x00000001002576a4
- (void)removeObservers;	// IMP=0x0000000100257654
- (void)addObservers;	// IMP=0x000000010025754c
- (void)handleDecryptionFailure:(long long)arg1;	// IMP=0x00000001002573e4
- (void)_handleCanceledAfterSuccess;	// IMP=0x00000001002572dc
- (void)handleCanceledAfterSuccess;	// IMP=0x0000000100257250
- (void)lockKeyBagIfNeeded;	// IMP=0x000000010025716c
- (void)_cancel;	// IMP=0x0000000100256df8
- (void)cancel;	// IMP=0x0000000100256d6c
- (void)invalidateNoDisconnect;	// IMP=0x0000000100256d38
- (void)invalidate;	// IMP=0x0000000100256b34
- (id)initWithAutoUnlockDevice:(id)arg1 sessionID:(id)arg2 bleDevice:(id)arg3;	// IMP=0x0000000100256740

@end


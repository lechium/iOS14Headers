//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "CKKSCKRecordHolder.h"

@class CKKSTLKShare, NSData, NSString;

__attribute__((visibility("hidden")))
@interface CKKSTLKShareRecord : CKKSCKRecordHolder
{
    CKKSTLKShare *_share;	// 8 = 0x8
}

+ (id)fromDatabaseRow:(id)arg1;	// IMP=0x0000000100164dac
+ (id)sqlColumns;	// IMP=0x0000000100164da0
+ (id)sqlTable;	// IMP=0x0000000100164d94
+ (id)ckrecordPrefix;	// IMP=0x0000000100164d88
+ (id)tryFromDatabaseFromCKRecordID:(id)arg1 error:(id *)arg2;	// IMP=0x000000010016482c
+ (id)allInZone:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100164708
+ (id)allForUUID:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100164558
+ (id)allFor:(id)arg1 keyUUID:(id)arg2 zoneID:(id)arg3 error:(id *)arg4;	// IMP=0x000000010016437c
+ (id)tryFromDatabase:(id)arg1 receiverPeerID:(id)arg2 senderPeerID:(id)arg3 zoneID:(id)arg4 error:(id *)arg5;	// IMP=0x00000001001640d0
+ (id)fromDatabase:(id)arg1 receiverPeerID:(id)arg2 senderPeerID:(id)arg3 zoneID:(id)arg4 error:(id *)arg5;	// IMP=0x0000000100163e24
+ (id)share:(id)arg1 as:(id)arg2 to:(id)arg3 epoch:(long long)arg4 poisoned:(long long)arg5 error:(id *)arg6;	// IMP=0x0000000100163abc
- (void).cxx_destruct;	// IMP=0x0000000100163aa8
@property(retain) CKKSTLKShare *share; // @synthesize share=_share;
- (id)sqlValues;	// IMP=0x0000000100163428
- (id)whereClauseToFindSelf;	// IMP=0x0000000100163240
- (void)setFromCKRecord:(id)arg1;	// IMP=0x0000000100162d1c
- (_Bool)matchesCKRecord:(id)arg1;	// IMP=0x0000000100162bd0
- (id)updateCKRecord:(id)arg1 zoneID:(id)arg2;	// IMP=0x0000000100162460
- (id)CKRecordName;	// IMP=0x0000000100162328
- (id)recoverTLK:(id)arg1 trustedPeers:(id)arg2 error:(id *)arg3;	// IMP=0x000000010016221c
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000100162140
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000010016209c
- (_Bool)signatureVerifiesWithPeerSet:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100161ff0
- (_Bool)verifySignature:(id)arg1 verifyingPeer:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100161f20
- (id)signRecord:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100161e6c
- (id)dataForSigning;	// IMP=0x0000000100161de0
- (id)unwrapUsing:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100161d24
@property(readonly) NSData *signature;
@property(readonly) NSData *wrappedTLK;
@property(readonly) long long poisoned;
@property(readonly) long long epoch;
@property(readonly) NSString *senderPeerID;
@property(readonly) NSString *tlkUUID;
- (id)description;	// IMP=0x0000000100161a04
- (id)initForKey:(id)arg1 senderPeerID:(id)arg2 recieverPeerID:(id)arg3 receiverEncPublicKeySPKI:(id)arg4 curve:(long long)arg5 version:(unsigned long long)arg6 epoch:(long long)arg7 poisoned:(long long)arg8 wrappedKey:(id)arg9 signature:(id)arg10 zoneID:(id)arg11 encodedCKRecord:(id)arg12;	// IMP=0x0000000100161888
- (id)init:(id)arg1 sender:(id)arg2 receiver:(id)arg3 curve:(long long)arg4 version:(unsigned long long)arg5 epoch:(long long)arg6 poisoned:(long long)arg7 zoneID:(id)arg8 encodedCKRecord:(id)arg9;	// IMP=0x0000000100161728
- (id)init:(id)arg1 zoneID:(id)arg2 encodedCKRecord:(id)arg3;	// IMP=0x0000000100161674

@end


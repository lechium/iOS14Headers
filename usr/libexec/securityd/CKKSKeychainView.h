//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "CKKSZone.h"

#import "CKKSChangeFetcherClient-Protocol.h"
#import "CKKSDatabaseProviderProtocol-Protocol.h"
#import "CKKSPeerUpdateListener-Protocol.h"
#import "CKKSZoneUpdateReceiver-Protocol.h"
#import "OctagonStateMachineEngine-Protocol.h"

@class CKKSCondition, CKKSIncomingQueueOperation, CKKSLaunchSequence, CKKSLockStateTracker, CKKSNearFutureScheduler, CKKSNewTLKOperation, CKKSOperationDependencies, CKKSOutgoingQueueOperation, CKKSProcessReceivedKeysOperation, CKKSReencryptOutgoingItemsOperation, CKKSResultOperation, CKKSScanLocalItemsOperation, CKKSSynchronizeOperation, CKKSZoneChangeFetcher, NSArray, NSDictionary, NSHashTable, NSMutableSet, NSOperation, NSOperationQueue, NSString, OctagonStateMachine;

__attribute__((visibility("hidden")))
@interface CKKSKeychainView : CKKSZone <CKKSZoneUpdateReceiver, CKKSChangeFetcherClient, CKKSPeerUpdateListener, CKKSDatabaseProviderProtocol, OctagonStateMachineEngine>
{
    _Bool _keyStateMachineRefetched;	// 32 = 0x20
    _Bool _keyStateFullRefetchRequested;	// 33 = 0x21
    CKKSCondition *_loggedIn;	// 40 = 0x28
    CKKSCondition *_loggedOut;	// 48 = 0x30
    CKKSCondition *_accountStateKnown;	// 56 = 0x38
    long long _trustStatus;	// 64 = 0x40
    CKKSLaunchSequence *_launch;	// 72 = 0x48
    CKKSLockStateTracker *_lockStateTracker;	// 80 = 0x50
    OctagonStateMachine *_stateMachine;	// 88 = 0x58
    CKKSResultOperation *_keyStateReadyDependency;	// 96 = 0x60
    CKKSZoneChangeFetcher *_zoneChangeFetcher;	// 104 = 0x68
    CKKSNearFutureScheduler *_suggestTLKUpload;	// 112 = 0x70
    CKKSNearFutureScheduler *_requestPolicyCheck;	// 120 = 0x78
    CKKSIncomingQueueOperation *_lastIncomingQueueOperation;	// 128 = 0x80
    CKKSNewTLKOperation *_lastNewTLKOperation;	// 136 = 0x88
    CKKSOutgoingQueueOperation *_lastOutgoingQueueOperation;	// 144 = 0x90
    CKKSProcessReceivedKeysOperation *_lastProcessReceivedKeysOperation;	// 152 = 0x98
    CKKSReencryptOutgoingItemsOperation *_lastReencryptOutgoingItemsOperation;	// 160 = 0xa0
    CKKSScanLocalItemsOperation *_lastScanLocalItemsOperation;	// 168 = 0xa8
    CKKSSynchronizeOperation *_lastSynchronizeOperation;	// 176 = 0xb0
    CKKSResultOperation *_lastFixupOperation;	// 184 = 0xb8
    NSOperation *_holdReencryptOutgoingItemsOperation;	// 192 = 0xc0
    NSOperation *_holdOutgoingQueueOperation;	// 200 = 0xc8
    NSOperation *_holdIncomingQueueOperation;	// 208 = 0xd0
    NSOperation *_holdLocalSynchronizeOperation;	// 216 = 0xd8
    CKKSResultOperation *_holdFixupOperation;	// 224 = 0xe0
    CKKSNearFutureScheduler *_notifyViewChangedScheduler;	// 232 = 0xe8
    CKKSNearFutureScheduler *_notifyViewReadyScheduler;	// 240 = 0xf0
    CKKSOperationDependencies *_operationDependencies;	// 248 = 0xf8
    NSHashTable *_incomingQueueOperations;	// 256 = 0x100
    NSHashTable *_outgoingQueueOperations;	// 264 = 0x108
    NSHashTable *_scanLocalItemsOperations;	// 272 = 0x110
    Class _notifierClass;	// 280 = 0x118
    CKKSNearFutureScheduler *_outgoingQueueOperationScheduler;	// 288 = 0x120
    CKKSResultOperation *_processIncomingQueueAfterNextUnlockOperation;	// 296 = 0x128
    CKKSResultOperation *_resultsOfNextIncomingQueueOperationOperation;	// 304 = 0x130
    NSOperationQueue *_waitingQueue;	// 312 = 0x138
    NSMutableSet *_resyncRecordsSeen;	// 320 = 0x140
    NSArray *_currentTrustStates;	// 328 = 0x148
    NSMutableSet *_currentFetchReasons;	// 336 = 0x150
}

- (void).cxx_destruct;	// IMP=0x00000001001551a4
@property(retain) NSMutableSet *currentFetchReasons; // @synthesize currentFetchReasons=_currentFetchReasons;
@property(retain) NSArray *currentTrustStates; // @synthesize currentTrustStates=_currentTrustStates;
@property(retain) NSMutableSet *resyncRecordsSeen; // @synthesize resyncRecordsSeen=_resyncRecordsSeen;
@property(retain) NSOperationQueue *waitingQueue; // @synthesize waitingQueue=_waitingQueue;
@property(retain) CKKSResultOperation *resultsOfNextIncomingQueueOperationOperation; // @synthesize resultsOfNextIncomingQueueOperationOperation=_resultsOfNextIncomingQueueOperationOperation;
@property(retain) CKKSResultOperation *processIncomingQueueAfterNextUnlockOperation; // @synthesize processIncomingQueueAfterNextUnlockOperation=_processIncomingQueueAfterNextUnlockOperation;
@property(retain) CKKSNearFutureScheduler *outgoingQueueOperationScheduler; // @synthesize outgoingQueueOperationScheduler=_outgoingQueueOperationScheduler;
@property(readonly) Class notifierClass; // @synthesize notifierClass=_notifierClass;
@property(retain) NSHashTable *scanLocalItemsOperations; // @synthesize scanLocalItemsOperations=_scanLocalItemsOperations;
@property(retain) NSHashTable *outgoingQueueOperations; // @synthesize outgoingQueueOperations=_outgoingQueueOperations;
@property(retain) NSHashTable *incomingQueueOperations; // @synthesize incomingQueueOperations=_incomingQueueOperations;
@property(readonly) CKKSOperationDependencies *operationDependencies; // @synthesize operationDependencies=_operationDependencies;
@property(retain) CKKSNearFutureScheduler *notifyViewReadyScheduler; // @synthesize notifyViewReadyScheduler=_notifyViewReadyScheduler;
@property(retain) CKKSNearFutureScheduler *notifyViewChangedScheduler; // @synthesize notifyViewChangedScheduler=_notifyViewChangedScheduler;
@property(retain) CKKSResultOperation *holdFixupOperation; // @synthesize holdFixupOperation=_holdFixupOperation;
@property(retain) NSOperation *holdLocalSynchronizeOperation; // @synthesize holdLocalSynchronizeOperation=_holdLocalSynchronizeOperation;
@property(retain) NSOperation *holdIncomingQueueOperation; // @synthesize holdIncomingQueueOperation=_holdIncomingQueueOperation;
@property(retain) NSOperation *holdOutgoingQueueOperation; // @synthesize holdOutgoingQueueOperation=_holdOutgoingQueueOperation;
@property(retain) NSOperation *holdReencryptOutgoingItemsOperation; // @synthesize holdReencryptOutgoingItemsOperation=_holdReencryptOutgoingItemsOperation;
@property(retain) CKKSResultOperation *lastFixupOperation; // @synthesize lastFixupOperation=_lastFixupOperation;
@property(retain) CKKSSynchronizeOperation *lastSynchronizeOperation; // @synthesize lastSynchronizeOperation=_lastSynchronizeOperation;
@property(retain) CKKSScanLocalItemsOperation *lastScanLocalItemsOperation; // @synthesize lastScanLocalItemsOperation=_lastScanLocalItemsOperation;
@property(retain) CKKSReencryptOutgoingItemsOperation *lastReencryptOutgoingItemsOperation; // @synthesize lastReencryptOutgoingItemsOperation=_lastReencryptOutgoingItemsOperation;
@property(retain) CKKSProcessReceivedKeysOperation *lastProcessReceivedKeysOperation; // @synthesize lastProcessReceivedKeysOperation=_lastProcessReceivedKeysOperation;
@property(retain) CKKSOutgoingQueueOperation *lastOutgoingQueueOperation; // @synthesize lastOutgoingQueueOperation=_lastOutgoingQueueOperation;
@property(retain) CKKSNewTLKOperation *lastNewTLKOperation; // @synthesize lastNewTLKOperation=_lastNewTLKOperation;
@property(retain) CKKSIncomingQueueOperation *lastIncomingQueueOperation; // @synthesize lastIncomingQueueOperation=_lastIncomingQueueOperation;
@property(retain) CKKSNearFutureScheduler *requestPolicyCheck; // @synthesize requestPolicyCheck=_requestPolicyCheck;
@property(retain) CKKSNearFutureScheduler *suggestTLKUpload; // @synthesize suggestTLKUpload=_suggestTLKUpload;
@property(retain) CKKSZoneChangeFetcher *zoneChangeFetcher; // @synthesize zoneChangeFetcher=_zoneChangeFetcher;
@property(retain) CKKSResultOperation *keyStateReadyDependency; // @synthesize keyStateReadyDependency=_keyStateReadyDependency;
@property _Bool keyStateFullRefetchRequested; // @synthesize keyStateFullRefetchRequested=_keyStateFullRefetchRequested;
@property _Bool keyStateMachineRefetched; // @synthesize keyStateMachineRefetched=_keyStateMachineRefetched;
@property(readonly) OctagonStateMachine *stateMachine; // @synthesize stateMachine=_stateMachine;
@property(retain) CKKSLockStateTracker *lockStateTracker; // @synthesize lockStateTracker=_lockStateTracker;
@property(retain) CKKSLaunchSequence *launch; // @synthesize launch=_launch;
@property long long trustStatus; // @synthesize trustStatus=_trustStatus;
@property(retain) CKKSCondition *accountStateKnown; // @synthesize accountStateKnown=_accountStateKnown;
@property(retain) CKKSCondition *loggedOut; // @synthesize loggedOut=_loggedOut;
@property(retain) CKKSCondition *loggedIn; // @synthesize loggedIn=_loggedIn;
- (id)fastStatus;	// IMP=0x0000000100154c60
- (id)status;	// IMP=0x00000001001548a8
- (void)halt;	// IMP=0x0000000100154828
- (void)cancelAllOperations;	// IMP=0x0000000100154744
- (void)cancelPendingOperations;	// IMP=0x000000010015434c
- (void)waitForKeyHierarchyReadiness;	// IMP=0x00000001001542cc
- (id)waitForFetchAndIncomingQueueProcessing;	// IMP=0x0000000100154284
- (_Bool)outgoingQueueEmpty:(id *)arg1;	// IMP=0x00000001001541d8
- (void)trustedPeerSetChanged:(id)arg1;	// IMP=0x00000001001540f8
- (void)selfPeerChanged:(id)arg1;	// IMP=0x0000000100154040
- (_Bool)shouldRetryAfterFetchError:(id)arg1;	// IMP=0x0000000100153cdc
- (_Bool)ckErrorOrPartialError:(id)arg1 isError:(long long)arg2;	// IMP=0x0000000100153ac0
- (void)changesFetched:(id)arg1 deletedRecordIDs:(id)arg2 newChangeToken:(id)arg3 moreComing:(_Bool)arg4 resync:(_Bool)arg5;	// IMP=0x00000001001538f0
- (id)participateInFetch;	// IMP=0x00000001001537a8
- (_Bool)_onQueueZoneIsReadyForFetching;	// IMP=0x000000010015363c
- (_Bool)zoneIsReadyForFetching;	// IMP=0x000000010015356c
- (void)receivedItemForWrongView;	// IMP=0x000000010015352c
- (void)setCurrentSyncingPolicy:(id)arg1 policyIsFresh:(_Bool)arg2;	// IMP=0x0000000100153474
@property(readonly) _Bool itemSyncingEnabled;
- (void)endTrustedOperation;	// IMP=0x0000000100153240
- (void)beginTrustedOperation:(id)arg1 suggestTLKUpload:(id)arg2 requestPolicyCheck:(id)arg3;	// IMP=0x0000000100153000
- (void)handleCKLogout;	// IMP=0x0000000100152f1c
- (void)handleCKLogin;	// IMP=0x0000000100152d2c
- (void)notifyZoneChange:(id)arg1;	// IMP=0x0000000100152c0c
- (_Bool)insideSQLTransaction;	// IMP=0x0000000100152be8
- (void)dispatchSyncWithSQLTransaction:(CDUnknownBlockType)arg1;	// IMP=0x0000000100152b54
- (void)dispatchSync:(CDUnknownBlockType)arg1;	// IMP=0x0000000100152968
- (_Bool)dispatchSyncWithConnection:(struct __OpaqueSecDbConnection *)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x0000000100152800
- (_Bool)_onqueueErrorOutgoingQueueEntry:(id)arg1 itemError:(id)arg2 error:(id *)arg3;	// IMP=0x00000001001525c8
- (_Bool)_onqueueChangeOutgoingQueueEntry:(id)arg1 toState:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100151ea4
- (_Bool)_onqueueResetAllInflightOQE:(id *)arg1;	// IMP=0x0000000100151af8
- (void)_onqueueCKRecordDeviceStateChanged:(id)arg1 resync:(_Bool)arg2;	// IMP=0x0000000100151698
- (void)_onqueueCKRecordManifestLeafChanged:(id)arg1 resync:(_Bool)arg2;	// IMP=0x0000000100151478
- (void)_onqueueCKRecordManifestChanged:(id)arg1 resync:(_Bool)arg2;	// IMP=0x0000000100151258
- (void)_onqueueCKRecordCurrentItemPointerChanged:(id)arg1 resync:(_Bool)arg2;	// IMP=0x0000000100150c80
- (void)_onqueueCKRecordCurrentKeyPointerChanged:(id)arg1 resync:(_Bool)arg2;	// IMP=0x00000001001506cc
- (void)_onqueueCKRecordTLKShareChanged:(id)arg1 resync:(_Bool)arg2;	// IMP=0x0000000100150504
- (void)_onqueueCKRecordKeyChanged:(id)arg1 resync:(_Bool)arg2;	// IMP=0x000000010014fd90
- (void)_onqueueCKRecordItemChanged:(id)arg1 resync:(_Bool)arg2;	// IMP=0x000000010014f0f0
- (_Bool)_onqueueCKRecordChanged:(id)arg1 resync:(_Bool)arg2;	// IMP=0x000000010014ec6c
- (_Bool)_onqueueCKRecordDeleted:(id)arg1 recordType:(id)arg2 resync:(_Bool)arg3;	// IMP=0x000000010014dbc0
- (_Bool)_onqueueCKWriteFailed:(id)arg1 attemptedRecordsChanged:(id)arg2;	// IMP=0x000000010014cf3c
- (id)fetchAndProcessCKChangesDueToAPNS:(id)arg1;	// IMP=0x000000010014cd7c
- (id)fetchAndProcessCKChanges:(id)arg1 after:(id)arg2;	// IMP=0x000000010014cbe0
- (id)fetchAndProcessCKChanges:(id)arg1;	// IMP=0x000000010014cbd0
- (id)resyncLocal;	// IMP=0x000000010014cb7c
- (id)resyncWithCloud;	// IMP=0x000000010014cb28
- (id)_onqueueCurrentDeviceStateEntry:(id *)arg1;	// IMP=0x000000010014b818
- (id)updateDeviceState:(_Bool)arg1 waitForKeyHierarchyInitialization:(unsigned long long)arg2 ckoperationGroup:(id)arg3;	// IMP=0x000000010014b634
- (id)scanLocalItems:(id)arg1 ckoperationGroup:(id)arg2 after:(id)arg3;	// IMP=0x000000010014b300
- (id)scanLocalItems:(id)arg1;	// IMP=0x000000010014b2ec
- (id)processIncomingQueue:(_Bool)arg1 after:(id)arg2 policyConsideredAuthoritative:(_Bool)arg3;	// IMP=0x000000010014afe4
- (id)processIncomingQueue:(_Bool)arg1 after:(id)arg2;	// IMP=0x000000010014afd4
- (id)processIncomingQueue:(_Bool)arg1;	// IMP=0x000000010014afc4
- (id)resultsOfNextProcessIncomingQueueOperation;	// IMP=0x000000010014ae6c
- (void)processIncomingQueueAfterNextUnlock;	// IMP=0x000000010014acbc
- (id)processOutgoingQueueAfter:(id)arg1 requiredDelay:(unsigned long long)arg2 ckoperationGroup:(id)arg3;	// IMP=0x000000010014a764
- (id)processOutgoingQueueAfter:(id)arg1 ckoperationGroup:(id)arg2;	// IMP=0x000000010014a6fc
- (id)processOutgoingQueue:(id)arg1;	// IMP=0x000000010014a6e8
- (id)findFirstPendingOperation:(id)arg1 ofClass:(Class)arg2;	// IMP=0x000000010014a548
- (id)findFirstPendingOperation:(id)arg1;	// IMP=0x000000010014a538
- (_Bool)requiresTLKUpload;	// IMP=0x000000010014a468
- (void)receiveTLKUploadRecords:(id)arg1;	// IMP=0x000000010014a168
- (id)findKeySet:(_Bool)arg1;	// IMP=0x0000000100149f30
- (void)getCurrentItemForAccessGroup:(id)arg1 identifier:(id)arg2 fetchCloudValue:(_Bool)arg3 complete:(CDUnknownBlockType)arg4;	// IMP=0x0000000100149b24
- (void)setCurrentItemForAccessGroup:(id)arg1 hash:(id)arg2 accessGroup:(id)arg3 identifier:(id)arg4 replacing:(id)arg5 hash:(id)arg6 complete:(CDUnknownBlockType)arg7;	// IMP=0x0000000100149584
- (void)handleKeychainEventDbConnection:(struct __OpaqueSecDbConnection *)arg1 source:(unsigned long long)arg2 added:(struct SecDbItem *)arg3 deleted:(struct SecDbItem *)arg4 rateLimiter:(id)arg5;	// IMP=0x0000000100148e88
- (_Bool)_onqueueOtherDevicesReportHavingTLKs:(id)arg1 trustStates:(id)arg2;	// IMP=0x0000000100147ef0
- (id)tlkMissingOperation:(id)arg1;	// IMP=0x0000000100147dd4
- (id)_onqueueNextStateMachineTransition:(id)arg1 flags:(id)arg2 pendingFlags:(id)arg3;	// IMP=0x0000000100145058
- (void)_onqueuePokeKeyStateMachine;	// IMP=0x0000000100144fec
- (id)createKeyStateReadyDependency:(id)arg1;	// IMP=0x0000000100144e58
- (void)keyStateMachineRequestProcess;	// IMP=0x0000000100144e10
- (id)resetCloudKitZone:(id)arg1;	// IMP=0x000000010014496c
- (id)resetLocalData;	// IMP=0x0000000100144650
- (id)performInitializedOperation;	// IMP=0x0000000100144568
- (id)createPendingInitializationOperation;	// IMP=0x0000000100144470
- (void)ensureKeyStateReadyDependency:(id)arg1;	// IMP=0x0000000100144364
@property(readonly) NSDictionary *keyHierarchyConditions;
- (id)keyHierarchyState;	// IMP=0x00000001001442bc
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (id)initWithContainer:(id)arg1 zoneName:(id)arg2 accountTracker:(id)arg3 lockStateTracker:(id)arg4 reachabilityTracker:(id)arg5 changeFetcher:(id)arg6 zoneModifier:(id)arg7 savedTLKNotifier:(id)arg8 cloudKitClassDependencies:(id)arg9;	// IMP=0x0000000100143788

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "NRLink.h"

#import "NEIKEv2ListenerDelegate-Protocol.h"
#import "NEIKEv2PacketDelegate-Protocol.h"
#import "NENexusDelegate-Protocol.h"

@class CBScalablePipe, NEIKEv2Listener, NEIKEv2Session, NEIPsecNexus, NRAnalyticsCmpnLinkBluetooth, NSData, NSDate, NSMutableArray, NSMutableData, NSObject, NSString, NSUUID, NWRemotePacketProxy;
@protocol NEIKEv2PacketReceiver, OS_dispatch_group, OS_dispatch_source, OS_os_log;

@interface NRLinkBluetooth : NRLink <NENexusDelegate, NEIKEv2ListenerDelegate, NEIKEv2PacketDelegate>
{
    unsigned char _sentPreludeState;	// 72 = 0x48
    unsigned char _receivedPreludeState;	// 73 = 0x49
    unsigned char _usedPreludeState;	// 74 = 0x4a
    _Bool _addedHostStateObserver;	// 75 = 0x4b
    _Bool _dNexusInputSourceSuspended;	// 76 = 0x4c
    _Bool _dNexusOutputSourceSuspended;	// 77 = 0x4d
    _Bool _dNexusVOInputSourceSuspended;	// 78 = 0x4e
    _Bool _dNexusVOOutputSourceSuspended;	// 79 = 0x4f
    _Bool _dNexusVIInputSourceSuspended;	// 80 = 0x50
    _Bool _dNexusVIOutputSourceSuspended;	// 81 = 0x51
    _Bool _dNexusBKInputSourceSuspended;	// 82 = 0x52
    _Bool _dNexusBKOutputSourceSuspended;	// 83 = 0x53
    unsigned char _logCounter;	// 84 = 0x54
    _Bool _linkProcessingWakingPacket;	// 85 = 0x55
    _Bool _dLinkInputSourceSuspended;	// 86 = 0x56
    _Bool _dLinkOutputSourceSuspended;	// 87 = 0x57
    _Bool _dDatagramLinkInputSourceSuspended;	// 88 = 0x58
    _Bool _dDatagramLinkOutputSourceSuspended;	// 89 = 0x59
    _Bool _datagramPipeNeeded;	// 90 = 0x5a
    _Bool _urgentLinkProcessingWakingPacket;	// 91 = 0x5b
    _Bool _dUrgentLinkInputSourceSuspended;	// 92 = 0x5c
    _Bool _dUrgentLinkOutputSourceSuspended;	// 93 = 0x5d
    _Bool _hasUrgentPrelude;	// 94 = 0x5e
    unsigned char _ringIdxToStart;	// 95 = 0x5f
    _Bool _shouldSuspend;	// 96 = 0x60
    _Bool _isSuspended;	// 97 = 0x61
    _Bool _pipeDisconnected;	// 98 = 0x62
    _Bool _hasConnectedPairingOnce;	// 99 = 0x63
    _Bool _hasFailedToConnectClassA;	// 100 = 0x64
    _Bool _remoteClassCUnlocked;	// 101 = 0x65
    _Bool _hasScheduledSendingLocalClassCUnlock;	// 102 = 0x66
    _Bool _requestedLocalPublicClassCKeysEncryptedWithIDS;	// 103 = 0x67
    _Bool _requestedLocalPublicClassAKeysEncryptedWithIDS;	// 104 = 0x68
    _Bool _isResponder;	// 105 = 0x69
    _Bool _lastKnownPeerIsAsleep;	// 106 = 0x6a
    _Bool _didIssueFirstIsAsleepUpdate;	// 107 = 0x6b
    unsigned short _remoteInnerLinkVersionHBO;	// 108 = 0x6c
    unsigned int _filledInLinkWriteBufferBytes;	// 112 = 0x70
    unsigned int _handledLinkWriteBufferBytes;	// 116 = 0x74
    unsigned int _controlPacketCounter;	// 120 = 0x78
    unsigned int _filledInUrgentLinkWriteBufferBytes;	// 124 = 0x7c
    unsigned int _handledUrgentLinkWriteBufferBytes;	// 128 = 0x80
    int _controlDataSendQueueLen;	// 132 = 0x84
    unsigned int _filledInLinkReadBufferBytes;	// 136 = 0x88
    unsigned int _handledLinkReadBufferBytes;	// 140 = 0x8c
    unsigned int _filledInUrgentLinkReadBufferBytes;	// 144 = 0x90
    unsigned int _handledUrgentLinkReadBufferBytes;	// 148 = 0x94
    NSUUID *_bluetoothUUID;	// 152 = 0x98
    NSString *_remoteDeviceName;	// 160 = 0xa0
    NSData *_sentPrelude;	// 168 = 0xa8
    NSData *_receivedPrelude;	// 176 = 0xb0
    struct channel *_nexusChannel;	// 184 = 0xb8
    struct channel_ring_desc *_nexusInputRing;	// 192 = 0xc0
    struct channel_ring_desc *_nexusOutputRing;	// 200 = 0xc8
    NSObject<OS_dispatch_source> *_dNexusInputSource;	// 208 = 0xd0
    NSObject<OS_dispatch_source> *_dNexusOutputSource;	// 216 = 0xd8
    NSObject<OS_dispatch_group> *_nexusGroup;	// 224 = 0xe0
    char *_linkWriteBuffer;	// 232 = 0xe8
    unsigned long long _nexusInputAvailWake;	// 240 = 0xf0
    unsigned long long _nexusOutputAvailWake;	// 248 = 0xf8
    unsigned long long _syncNexusInput;	// 256 = 0x100
    unsigned long long _syncNexusOutput;	// 264 = 0x108
    unsigned long long _packetsFromNexus;	// 272 = 0x110
    unsigned long long _packetsToNexus;	// 280 = 0x118
    unsigned long long _bytesFromNexus;	// 288 = 0x120
    unsigned long long _bytesToNexus;	// 296 = 0x128
    NSObject<OS_dispatch_group> *_nexusVOGroup;	// 304 = 0x130
    struct channel *_nexusVOChannel;	// 312 = 0x138
    struct channel_ring_desc *_nexusVOInputRing;	// 320 = 0x140
    struct channel_ring_desc *_nexusVOOutputRing;	// 328 = 0x148
    NSObject<OS_dispatch_source> *_dNexusVOInputSource;	// 336 = 0x150
    NSObject<OS_dispatch_source> *_dNexusVOOutputSource;	// 344 = 0x158
    unsigned long long _nexusVOInputAvailWake;	// 352 = 0x160
    unsigned long long _nexusVOOutputAvailWake;	// 360 = 0x168
    unsigned long long _syncNexusVOInput;	// 368 = 0x170
    unsigned long long _syncNexusVOOutput;	// 376 = 0x178
    unsigned long long _packetsFromNexusVO;	// 384 = 0x180
    unsigned long long _packetsToNexusVO;	// 392 = 0x188
    unsigned long long _bytesFromNexusVO;	// 400 = 0x190
    unsigned long long _bytesToNexusVO;	// 408 = 0x198
    NSObject<OS_dispatch_group> *_nexusVIGroup;	// 416 = 0x1a0
    struct channel *_nexusVIChannel;	// 424 = 0x1a8
    struct channel_ring_desc *_nexusVIInputRing;	// 432 = 0x1b0
    struct channel_ring_desc *_nexusVIOutputRing;	// 440 = 0x1b8
    NSObject<OS_dispatch_source> *_dNexusVIInputSource;	// 448 = 0x1c0
    NSObject<OS_dispatch_source> *_dNexusVIOutputSource;	// 456 = 0x1c8
    unsigned long long _nexusVIInputAvailWake;	// 464 = 0x1d0
    unsigned long long _nexusVIOutputAvailWake;	// 472 = 0x1d8
    unsigned long long _syncNexusVIInput;	// 480 = 0x1e0
    unsigned long long _syncNexusVIOutput;	// 488 = 0x1e8
    unsigned long long _packetsFromNexusVI;	// 496 = 0x1f0
    unsigned long long _packetsToNexusVI;	// 504 = 0x1f8
    unsigned long long _bytesFromNexusVI;	// 512 = 0x200
    unsigned long long _bytesToNexusVI;	// 520 = 0x208
    NSObject<OS_dispatch_group> *_nexusBKGroup;	// 528 = 0x210
    struct channel *_nexusBKChannel;	// 536 = 0x218
    struct channel_ring_desc *_nexusBKInputRing;	// 544 = 0x220
    struct channel_ring_desc *_nexusBKOutputRing;	// 552 = 0x228
    NSObject<OS_dispatch_source> *_dNexusBKInputSource;	// 560 = 0x230
    NSObject<OS_dispatch_source> *_dNexusBKOutputSource;	// 568 = 0x238
    unsigned long long _nexusBKInputAvailWake;	// 576 = 0x240
    unsigned long long _nexusBKOutputAvailWake;	// 584 = 0x248
    unsigned long long _syncNexusBKInput;	// 592 = 0x250
    unsigned long long _syncNexusBKOutput;	// 600 = 0x258
    unsigned long long _packetsFromNexusBK;	// 608 = 0x260
    unsigned long long _packetsToNexusBK;	// 616 = 0x268
    unsigned long long _bytesFromNexusBK;	// 624 = 0x270
    unsigned long long _bytesToNexusBK;	// 632 = 0x278
    unsigned long long _writeCounter;	// 640 = 0x280
    CBScalablePipe *_pipe;	// 648 = 0x288
    struct channel *_linkChannel;	// 656 = 0x290
    struct channel_ring_desc *_linkInputRing;	// 664 = 0x298
    struct channel_ring_desc *_linkOutputRing;	// 672 = 0x2a0
    NSObject<OS_dispatch_source> *_dLinkInputSource;	// 680 = 0x2a8
    NSObject<OS_dispatch_source> *_dLinkOutputSource;	// 688 = 0x2b0
    CBScalablePipe *_datagramPipe;	// 696 = 0x2b8
    struct channel *_datagramLinkChannel;	// 704 = 0x2c0
    struct channel_ring_desc *_datagramLinkInputRing;	// 712 = 0x2c8
    struct channel_ring_desc *_datagramLinkOutputRing;	// 720 = 0x2d0
    NSObject<OS_dispatch_source> *_dDatagramLinkInputSource;	// 728 = 0x2d8
    NSObject<OS_dispatch_source> *_dDatagramLinkOutputSource;	// 736 = 0x2e0
    CBScalablePipe *_urgentPipe;	// 744 = 0x2e8
    struct channel *_urgentLinkChannel;	// 752 = 0x2f0
    struct channel_ring_desc *_urgentLinkInputRing;	// 760 = 0x2f8
    struct channel_ring_desc *_urgentLinkOutputRing;	// 768 = 0x300
    NSObject<OS_dispatch_source> *_dUrgentLinkInputSource;	// 776 = 0x308
    NSObject<OS_dispatch_source> *_dUrgentLinkOutputSource;	// 784 = 0x310
    char *_urgentLinkWriteBuffer;	// 792 = 0x318
    NSMutableArray *_receivedIKEPackets;	// 800 = 0x320
    NSMutableArray *_latencyContexts;	// 808 = 0x328
    NEIKEv2Listener *_ikeListener;	// 816 = 0x330
    NEIKEv2Session *_ikeSessionClassD;	// 824 = 0x338
    NEIKEv2Session *_ikeSessionClassC;	// 832 = 0x340
    NEIKEv2Session *_ikeSessionClassA;	// 840 = 0x348
    NEIKEv2Session *_ikeSessionPairing;	// 848 = 0x350
    id <NEIKEv2PacketReceiver> _ikePacketReceiver;	// 856 = 0x358
    NSData *_initiatorLocalPublicClassDKeys;	// 864 = 0x360
    NSData *_initiatorLocalPublicClassCKeys;	// 872 = 0x368
    NSData *_initiatorLocalPublicClassAKeys;	// 880 = 0x370
    NSData *_initiatorLocalPublicClassDKeysEncryptedWithIDS;	// 888 = 0x378
    NSData *_localPublicClassCKeysEncryptedWithIDS;	// 896 = 0x380
    NSData *_localPublicClassAKeysEncryptedWithIDS;	// 904 = 0x388
    char *_linkReadBuffer;	// 912 = 0x390
    char *_urgentLinkReadBuffer;	// 920 = 0x398
    NSMutableData *_linkOutgoingData;	// 928 = 0x3a0
    NEIPsecNexus *_packetNexus;	// 936 = 0x3a8
    NWRemotePacketProxy *_remotePacketProxy;	// 944 = 0x3b0
    NSUUID *_randomUUID;	// 952 = 0x3b8
    NSString *_jointUUIDHash;	// 960 = 0x3c0
    unsigned long long _bytesFromLink;	// 968 = 0x3c8
    unsigned long long _bytesToLink;	// 976 = 0x3d0
    unsigned long long _datagramBytesFromLink;	// 984 = 0x3d8
    unsigned long long _datagramBytesToLink;	// 992 = 0x3e0
    unsigned long long _urgentBytesFromLink;	// 1000 = 0x3e8
    unsigned long long _urgentBytesToLink;	// 1008 = 0x3f0
    unsigned long long _syncLinkInput;	// 1016 = 0x3f8
    unsigned long long _syncLinkOutput;	// 1024 = 0x400
    unsigned long long _syncDatagramLinkInput;	// 1032 = 0x408
    unsigned long long _syncDatagramLinkOutput;	// 1040 = 0x410
    unsigned long long _syncUrgentLinkInput;	// 1048 = 0x418
    unsigned long long _syncUrgentLinkOutput;	// 1056 = 0x420
    unsigned long long _linkInputAvailWake;	// 1064 = 0x428
    unsigned long long _linkOutputAvailWake;	// 1072 = 0x430
    unsigned long long _datagramLinkInputAvailWake;	// 1080 = 0x438
    unsigned long long _datagramLinkOutputAvailWake;	// 1088 = 0x440
    unsigned long long _urgentLinkInputAvailWake;	// 1096 = 0x448
    unsigned long long _urgentLinkOutputAvailWake;	// 1104 = 0x450
    unsigned long long _sentUncompressedIP;	// 1112 = 0x458
    unsigned long long _sentEncapsulated6LoWPAN;	// 1120 = 0x460
    unsigned long long _sentKnownIPv6Hdr_ESP;	// 1128 = 0x468
    unsigned long long _sentKnownIPv6Hdr_ESP_ECT0;	// 1136 = 0x470
    unsigned long long _sentKnownIPv6Hdr_ESP_ClassC;	// 1144 = 0x478
    unsigned long long _sentKnownIPv6Hdr_ESP_ClassC_ECT0;	// 1152 = 0x480
    unsigned long long _sentKnownIPv6Hdr_TCP;	// 1160 = 0x488
    unsigned long long _sentKnownIPv6Hdr_TCP_ECT0;	// 1168 = 0x490
    unsigned long long _sentIKEv2PointToPoint;	// 1176 = 0x498
    unsigned long long _recvUncompressedIP;	// 1184 = 0x4a0
    unsigned long long _recvEncapsulated6LoWPAN;	// 1192 = 0x4a8
    unsigned long long _recvKnownIPv6Hdr_ESP;	// 1200 = 0x4b0
    unsigned long long _recvKnownIPv6Hdr_ESP_ECT0;	// 1208 = 0x4b8
    unsigned long long _recvKnownIPv6Hdr_ESP_ClassC;	// 1216 = 0x4c0
    unsigned long long _recvKnownIPv6Hdr_ESP_ClassC_ECT0;	// 1224 = 0x4c8
    unsigned long long _recvKnownIPv6Hdr_TCP;	// 1232 = 0x4d0
    unsigned long long _recvKnownIPv6Hdr_TCP_ECT0;	// 1240 = 0x4d8
    unsigned long long _recvIKEv2PointToPoint;	// 1248 = 0x4e0
    NSDate *_lastReadNexus;	// 1256 = 0x4e8
    NSDate *_lastWrittenNexus;	// 1264 = 0x4f0
    NSDate *_lastReadLink;	// 1272 = 0x4f8
    NSDate *_lastWrittenLink;	// 1280 = 0x500
    NSDate *_lastReadDatagramLink;	// 1288 = 0x508
    NSDate *_lastWrittenDatagramLink;	// 1296 = 0x510
    NSDate *_lastReadUrgentLink;	// 1304 = 0x518
    NSDate *_lastWrittenUrgentLink;	// 1312 = 0x520
    NSObject<OS_os_log> *_mpklLogObject;	// 1320 = 0x528
    NSObject<OS_dispatch_source> *_linkStatTimerSource;	// 1328 = 0x530
    unsigned long long _lastReadBytesToLink;	// 1336 = 0x538
    unsigned long long _lastReadBytesToUrgentLink;	// 1344 = 0x540
    unsigned long long _lastReadBytesToDatagramLink;	// 1352 = 0x548
    unsigned long long _lastReadBytesFromLink;	// 1360 = 0x550
    unsigned long long _lastReadBytesFromUrgentLink;	// 1368 = 0x558
    unsigned long long _lastReadBytesFromDatagramLink;	// 1376 = 0x560
    unsigned long long _lastReadPacketsFromNexusVO;	// 1384 = 0x568
    unsigned long long _lastReadPacketsToNexusVO;	// 1392 = 0x570
    unsigned long long _lastReadPacketsFromNexusVI;	// 1400 = 0x578
    unsigned long long _lastReadPacketsToNexusVI;	// 1408 = 0x580
    unsigned long long _lastReadPacketsFromNexusBE;	// 1416 = 0x588
    unsigned long long _lastReadPacketsToNexusBE;	// 1424 = 0x590
    unsigned long long _lastReadPacketsFromNexusBK;	// 1432 = 0x598
    unsigned long long _lastReadPacketsToNexusBK;	// 1440 = 0x5a0
    NRAnalyticsCmpnLinkBluetooth *_linkAnalytics;	// 1448 = 0x5a8
    struct in6_addr _localAddrClassD;	// 1456 = 0x5b0
    struct in6_addr _remoteAddrClassD;	// 1472 = 0x5c0
    struct in6_addr _localAddrClassC;	// 1488 = 0x5d0
    struct in6_addr _remoteAddrClassC;	// 1504 = 0x5e0
}

- (void).cxx_destruct;	// IMP=0x000000010004c864
@property(retain, nonatomic) NRAnalyticsCmpnLinkBluetooth *linkAnalytics; // @synthesize linkAnalytics=_linkAnalytics;
@property(nonatomic) unsigned long long lastReadPacketsToNexusBK; // @synthesize lastReadPacketsToNexusBK=_lastReadPacketsToNexusBK;
@property(nonatomic) unsigned long long lastReadPacketsFromNexusBK; // @synthesize lastReadPacketsFromNexusBK=_lastReadPacketsFromNexusBK;
@property(nonatomic) unsigned long long lastReadPacketsToNexusBE; // @synthesize lastReadPacketsToNexusBE=_lastReadPacketsToNexusBE;
@property(nonatomic) unsigned long long lastReadPacketsFromNexusBE; // @synthesize lastReadPacketsFromNexusBE=_lastReadPacketsFromNexusBE;
@property(nonatomic) unsigned long long lastReadPacketsToNexusVI; // @synthesize lastReadPacketsToNexusVI=_lastReadPacketsToNexusVI;
@property(nonatomic) unsigned long long lastReadPacketsFromNexusVI; // @synthesize lastReadPacketsFromNexusVI=_lastReadPacketsFromNexusVI;
@property(nonatomic) unsigned long long lastReadPacketsToNexusVO; // @synthesize lastReadPacketsToNexusVO=_lastReadPacketsToNexusVO;
@property(nonatomic) unsigned long long lastReadPacketsFromNexusVO; // @synthesize lastReadPacketsFromNexusVO=_lastReadPacketsFromNexusVO;
@property(nonatomic) unsigned long long lastReadBytesFromDatagramLink; // @synthesize lastReadBytesFromDatagramLink=_lastReadBytesFromDatagramLink;
@property(nonatomic) unsigned long long lastReadBytesFromUrgentLink; // @synthesize lastReadBytesFromUrgentLink=_lastReadBytesFromUrgentLink;
@property(nonatomic) unsigned long long lastReadBytesFromLink; // @synthesize lastReadBytesFromLink=_lastReadBytesFromLink;
@property(nonatomic) unsigned long long lastReadBytesToDatagramLink; // @synthesize lastReadBytesToDatagramLink=_lastReadBytesToDatagramLink;
@property(nonatomic) unsigned long long lastReadBytesToUrgentLink; // @synthesize lastReadBytesToUrgentLink=_lastReadBytesToUrgentLink;
@property(nonatomic) unsigned long long lastReadBytesToLink; // @synthesize lastReadBytesToLink=_lastReadBytesToLink;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *linkStatTimerSource; // @synthesize linkStatTimerSource=_linkStatTimerSource;
@property(retain, nonatomic) NSObject<OS_os_log> *mpklLogObject; // @synthesize mpklLogObject=_mpklLogObject;
@property(retain, nonatomic) NSDate *lastWrittenUrgentLink; // @synthesize lastWrittenUrgentLink=_lastWrittenUrgentLink;
@property(retain, nonatomic) NSDate *lastReadUrgentLink; // @synthesize lastReadUrgentLink=_lastReadUrgentLink;
@property(retain, nonatomic) NSDate *lastWrittenDatagramLink; // @synthesize lastWrittenDatagramLink=_lastWrittenDatagramLink;
@property(retain, nonatomic) NSDate *lastReadDatagramLink; // @synthesize lastReadDatagramLink=_lastReadDatagramLink;
@property(retain, nonatomic) NSDate *lastWrittenLink; // @synthesize lastWrittenLink=_lastWrittenLink;
@property(retain, nonatomic) NSDate *lastReadLink; // @synthesize lastReadLink=_lastReadLink;
@property(retain, nonatomic) NSDate *lastWrittenNexus; // @synthesize lastWrittenNexus=_lastWrittenNexus;
@property(retain, nonatomic) NSDate *lastReadNexus; // @synthesize lastReadNexus=_lastReadNexus;
@property(nonatomic) unsigned long long recvIKEv2PointToPoint; // @synthesize recvIKEv2PointToPoint=_recvIKEv2PointToPoint;
@property(nonatomic) unsigned long long recvKnownIPv6Hdr_TCP_ECT0; // @synthesize recvKnownIPv6Hdr_TCP_ECT0=_recvKnownIPv6Hdr_TCP_ECT0;
@property(nonatomic) unsigned long long recvKnownIPv6Hdr_TCP; // @synthesize recvKnownIPv6Hdr_TCP=_recvKnownIPv6Hdr_TCP;
@property(nonatomic) unsigned long long recvKnownIPv6Hdr_ESP_ClassC_ECT0; // @synthesize recvKnownIPv6Hdr_ESP_ClassC_ECT0=_recvKnownIPv6Hdr_ESP_ClassC_ECT0;
@property(nonatomic) unsigned long long recvKnownIPv6Hdr_ESP_ClassC; // @synthesize recvKnownIPv6Hdr_ESP_ClassC=_recvKnownIPv6Hdr_ESP_ClassC;
@property(nonatomic) unsigned long long recvKnownIPv6Hdr_ESP_ECT0; // @synthesize recvKnownIPv6Hdr_ESP_ECT0=_recvKnownIPv6Hdr_ESP_ECT0;
@property(nonatomic) unsigned long long recvKnownIPv6Hdr_ESP; // @synthesize recvKnownIPv6Hdr_ESP=_recvKnownIPv6Hdr_ESP;
@property(nonatomic) unsigned long long recvEncapsulated6LoWPAN; // @synthesize recvEncapsulated6LoWPAN=_recvEncapsulated6LoWPAN;
@property(nonatomic) unsigned long long recvUncompressedIP; // @synthesize recvUncompressedIP=_recvUncompressedIP;
@property(nonatomic) unsigned long long sentIKEv2PointToPoint; // @synthesize sentIKEv2PointToPoint=_sentIKEv2PointToPoint;
@property(nonatomic) unsigned long long sentKnownIPv6Hdr_TCP_ECT0; // @synthesize sentKnownIPv6Hdr_TCP_ECT0=_sentKnownIPv6Hdr_TCP_ECT0;
@property(nonatomic) unsigned long long sentKnownIPv6Hdr_TCP; // @synthesize sentKnownIPv6Hdr_TCP=_sentKnownIPv6Hdr_TCP;
@property(nonatomic) unsigned long long sentKnownIPv6Hdr_ESP_ClassC_ECT0; // @synthesize sentKnownIPv6Hdr_ESP_ClassC_ECT0=_sentKnownIPv6Hdr_ESP_ClassC_ECT0;
@property(nonatomic) unsigned long long sentKnownIPv6Hdr_ESP_ClassC; // @synthesize sentKnownIPv6Hdr_ESP_ClassC=_sentKnownIPv6Hdr_ESP_ClassC;
@property(nonatomic) unsigned long long sentKnownIPv6Hdr_ESP_ECT0; // @synthesize sentKnownIPv6Hdr_ESP_ECT0=_sentKnownIPv6Hdr_ESP_ECT0;
@property(nonatomic) unsigned long long sentKnownIPv6Hdr_ESP; // @synthesize sentKnownIPv6Hdr_ESP=_sentKnownIPv6Hdr_ESP;
@property(nonatomic) unsigned long long sentEncapsulated6LoWPAN; // @synthesize sentEncapsulated6LoWPAN=_sentEncapsulated6LoWPAN;
@property(nonatomic) unsigned long long sentUncompressedIP; // @synthesize sentUncompressedIP=_sentUncompressedIP;
@property(nonatomic) unsigned long long urgentLinkOutputAvailWake; // @synthesize urgentLinkOutputAvailWake=_urgentLinkOutputAvailWake;
@property(nonatomic) unsigned long long urgentLinkInputAvailWake; // @synthesize urgentLinkInputAvailWake=_urgentLinkInputAvailWake;
@property(nonatomic) unsigned long long datagramLinkOutputAvailWake; // @synthesize datagramLinkOutputAvailWake=_datagramLinkOutputAvailWake;
@property(nonatomic) unsigned long long datagramLinkInputAvailWake; // @synthesize datagramLinkInputAvailWake=_datagramLinkInputAvailWake;
@property(nonatomic) unsigned long long linkOutputAvailWake; // @synthesize linkOutputAvailWake=_linkOutputAvailWake;
@property(nonatomic) unsigned long long linkInputAvailWake; // @synthesize linkInputAvailWake=_linkInputAvailWake;
@property(nonatomic) unsigned long long syncUrgentLinkOutput; // @synthesize syncUrgentLinkOutput=_syncUrgentLinkOutput;
@property(nonatomic) unsigned long long syncUrgentLinkInput; // @synthesize syncUrgentLinkInput=_syncUrgentLinkInput;
@property(nonatomic) unsigned long long syncDatagramLinkOutput; // @synthesize syncDatagramLinkOutput=_syncDatagramLinkOutput;
@property(nonatomic) unsigned long long syncDatagramLinkInput; // @synthesize syncDatagramLinkInput=_syncDatagramLinkInput;
@property(nonatomic) unsigned long long syncLinkOutput; // @synthesize syncLinkOutput=_syncLinkOutput;
@property(nonatomic) unsigned long long syncLinkInput; // @synthesize syncLinkInput=_syncLinkInput;
@property(nonatomic) unsigned long long urgentBytesToLink; // @synthesize urgentBytesToLink=_urgentBytesToLink;
@property(nonatomic) unsigned long long urgentBytesFromLink; // @synthesize urgentBytesFromLink=_urgentBytesFromLink;
@property(nonatomic) unsigned long long datagramBytesToLink; // @synthesize datagramBytesToLink=_datagramBytesToLink;
@property(nonatomic) unsigned long long datagramBytesFromLink; // @synthesize datagramBytesFromLink=_datagramBytesFromLink;
@property(nonatomic) unsigned long long bytesToLink; // @synthesize bytesToLink=_bytesToLink;
@property(nonatomic) unsigned long long bytesFromLink; // @synthesize bytesFromLink=_bytesFromLink;
@property(nonatomic) _Bool didIssueFirstIsAsleepUpdate; // @synthesize didIssueFirstIsAsleepUpdate=_didIssueFirstIsAsleepUpdate;
@property(nonatomic) _Bool lastKnownPeerIsAsleep; // @synthesize lastKnownPeerIsAsleep=_lastKnownPeerIsAsleep;
@property(nonatomic) _Bool isResponder; // @synthesize isResponder=_isResponder;
@property(retain, nonatomic) NSString *jointUUIDHash; // @synthesize jointUUIDHash=_jointUUIDHash;
@property(retain, nonatomic) NSUUID *randomUUID; // @synthesize randomUUID=_randomUUID;
@property(nonatomic) struct in6_addr remoteAddrClassC; // @synthesize remoteAddrClassC=_remoteAddrClassC;
@property(nonatomic) struct in6_addr localAddrClassC; // @synthesize localAddrClassC=_localAddrClassC;
@property(nonatomic) struct in6_addr remoteAddrClassD; // @synthesize remoteAddrClassD=_remoteAddrClassD;
@property(nonatomic) struct in6_addr localAddrClassD; // @synthesize localAddrClassD=_localAddrClassD;
@property(retain, nonatomic) NWRemotePacketProxy *remotePacketProxy; // @synthesize remotePacketProxy=_remotePacketProxy;
@property(retain, nonatomic) NEIPsecNexus *packetNexus; // @synthesize packetNexus=_packetNexus;
@property(retain, nonatomic) NSMutableData *linkOutgoingData; // @synthesize linkOutgoingData=_linkOutgoingData;
@property(nonatomic) unsigned int handledUrgentLinkReadBufferBytes; // @synthesize handledUrgentLinkReadBufferBytes=_handledUrgentLinkReadBufferBytes;
@property(nonatomic) unsigned int filledInUrgentLinkReadBufferBytes; // @synthesize filledInUrgentLinkReadBufferBytes=_filledInUrgentLinkReadBufferBytes;
@property(nonatomic) char *urgentLinkReadBuffer; // @synthesize urgentLinkReadBuffer=_urgentLinkReadBuffer;
@property(nonatomic) unsigned int handledLinkReadBufferBytes; // @synthesize handledLinkReadBufferBytes=_handledLinkReadBufferBytes;
@property(nonatomic) unsigned int filledInLinkReadBufferBytes; // @synthesize filledInLinkReadBufferBytes=_filledInLinkReadBufferBytes;
@property(nonatomic) char *linkReadBuffer; // @synthesize linkReadBuffer=_linkReadBuffer;
@property(nonatomic) _Bool requestedLocalPublicClassAKeysEncryptedWithIDS; // @synthesize requestedLocalPublicClassAKeysEncryptedWithIDS=_requestedLocalPublicClassAKeysEncryptedWithIDS;
@property(nonatomic) _Bool requestedLocalPublicClassCKeysEncryptedWithIDS; // @synthesize requestedLocalPublicClassCKeysEncryptedWithIDS=_requestedLocalPublicClassCKeysEncryptedWithIDS;
@property(retain, nonatomic) NSData *localPublicClassAKeysEncryptedWithIDS; // @synthesize localPublicClassAKeysEncryptedWithIDS=_localPublicClassAKeysEncryptedWithIDS;
@property(retain, nonatomic) NSData *localPublicClassCKeysEncryptedWithIDS; // @synthesize localPublicClassCKeysEncryptedWithIDS=_localPublicClassCKeysEncryptedWithIDS;
@property(retain, nonatomic) NSData *initiatorLocalPublicClassDKeysEncryptedWithIDS; // @synthesize initiatorLocalPublicClassDKeysEncryptedWithIDS=_initiatorLocalPublicClassDKeysEncryptedWithIDS;
@property(retain, nonatomic) NSData *initiatorLocalPublicClassAKeys; // @synthesize initiatorLocalPublicClassAKeys=_initiatorLocalPublicClassAKeys;
@property(retain, nonatomic) NSData *initiatorLocalPublicClassCKeys; // @synthesize initiatorLocalPublicClassCKeys=_initiatorLocalPublicClassCKeys;
@property(retain, nonatomic) NSData *initiatorLocalPublicClassDKeys; // @synthesize initiatorLocalPublicClassDKeys=_initiatorLocalPublicClassDKeys;
@property(retain, nonatomic) id <NEIKEv2PacketReceiver> ikePacketReceiver; // @synthesize ikePacketReceiver=_ikePacketReceiver;
@property(retain, nonatomic) NEIKEv2Session *ikeSessionPairing; // @synthesize ikeSessionPairing=_ikeSessionPairing;
@property(retain, nonatomic) NEIKEv2Session *ikeSessionClassA; // @synthesize ikeSessionClassA=_ikeSessionClassA;
@property(retain, nonatomic) NEIKEv2Session *ikeSessionClassC; // @synthesize ikeSessionClassC=_ikeSessionClassC;
@property(retain, nonatomic) NEIKEv2Session *ikeSessionClassD; // @synthesize ikeSessionClassD=_ikeSessionClassD;
@property(retain, nonatomic) NEIKEv2Listener *ikeListener; // @synthesize ikeListener=_ikeListener;
@property(retain, nonatomic) NSMutableArray *latencyContexts; // @synthesize latencyContexts=_latencyContexts;
@property(retain, nonatomic) NSMutableArray *receivedIKEPackets; // @synthesize receivedIKEPackets=_receivedIKEPackets;
@property(nonatomic) int controlDataSendQueueLen; // @synthesize controlDataSendQueueLen=_controlDataSendQueueLen;
@property(nonatomic) _Bool hasScheduledSendingLocalClassCUnlock; // @synthesize hasScheduledSendingLocalClassCUnlock=_hasScheduledSendingLocalClassCUnlock;
@property(nonatomic) _Bool remoteClassCUnlocked; // @synthesize remoteClassCUnlocked=_remoteClassCUnlocked;
@property(nonatomic) _Bool hasFailedToConnectClassA; // @synthesize hasFailedToConnectClassA=_hasFailedToConnectClassA;
@property(nonatomic) _Bool hasConnectedPairingOnce; // @synthesize hasConnectedPairingOnce=_hasConnectedPairingOnce;
@property(nonatomic) _Bool pipeDisconnected; // @synthesize pipeDisconnected=_pipeDisconnected;
@property(nonatomic) _Bool isSuspended; // @synthesize isSuspended=_isSuspended;
@property(nonatomic) _Bool shouldSuspend; // @synthesize shouldSuspend=_shouldSuspend;
@property(nonatomic) unsigned char ringIdxToStart; // @synthesize ringIdxToStart=_ringIdxToStart;
@property(nonatomic) _Bool hasUrgentPrelude; // @synthesize hasUrgentPrelude=_hasUrgentPrelude;
@property(nonatomic) unsigned int handledUrgentLinkWriteBufferBytes; // @synthesize handledUrgentLinkWriteBufferBytes=_handledUrgentLinkWriteBufferBytes;
@property(nonatomic) unsigned int filledInUrgentLinkWriteBufferBytes; // @synthesize filledInUrgentLinkWriteBufferBytes=_filledInUrgentLinkWriteBufferBytes;
@property(nonatomic) char *urgentLinkWriteBuffer; // @synthesize urgentLinkWriteBuffer=_urgentLinkWriteBuffer;
@property(nonatomic) _Bool dUrgentLinkOutputSourceSuspended; // @synthesize dUrgentLinkOutputSourceSuspended=_dUrgentLinkOutputSourceSuspended;
@property(nonatomic) _Bool dUrgentLinkInputSourceSuspended; // @synthesize dUrgentLinkInputSourceSuspended=_dUrgentLinkInputSourceSuspended;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *dUrgentLinkOutputSource; // @synthesize dUrgentLinkOutputSource=_dUrgentLinkOutputSource;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *dUrgentLinkInputSource; // @synthesize dUrgentLinkInputSource=_dUrgentLinkInputSource;
@property(nonatomic) struct channel_ring_desc *urgentLinkOutputRing; // @synthesize urgentLinkOutputRing=_urgentLinkOutputRing;
@property(nonatomic) struct channel_ring_desc *urgentLinkInputRing; // @synthesize urgentLinkInputRing=_urgentLinkInputRing;
@property(nonatomic) _Bool urgentLinkProcessingWakingPacket; // @synthesize urgentLinkProcessingWakingPacket=_urgentLinkProcessingWakingPacket;
@property(nonatomic) struct channel *urgentLinkChannel; // @synthesize urgentLinkChannel=_urgentLinkChannel;
@property(retain, nonatomic) CBScalablePipe *urgentPipe; // @synthesize urgentPipe=_urgentPipe;
@property(nonatomic) _Bool datagramPipeNeeded; // @synthesize datagramPipeNeeded=_datagramPipeNeeded;
@property(nonatomic) _Bool dDatagramLinkOutputSourceSuspended; // @synthesize dDatagramLinkOutputSourceSuspended=_dDatagramLinkOutputSourceSuspended;
@property(nonatomic) _Bool dDatagramLinkInputSourceSuspended; // @synthesize dDatagramLinkInputSourceSuspended=_dDatagramLinkInputSourceSuspended;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *dDatagramLinkOutputSource; // @synthesize dDatagramLinkOutputSource=_dDatagramLinkOutputSource;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *dDatagramLinkInputSource; // @synthesize dDatagramLinkInputSource=_dDatagramLinkInputSource;
@property(nonatomic) struct channel_ring_desc *datagramLinkOutputRing; // @synthesize datagramLinkOutputRing=_datagramLinkOutputRing;
@property(nonatomic) struct channel_ring_desc *datagramLinkInputRing; // @synthesize datagramLinkInputRing=_datagramLinkInputRing;
@property(nonatomic) struct channel *datagramLinkChannel; // @synthesize datagramLinkChannel=_datagramLinkChannel;
@property(retain, nonatomic) CBScalablePipe *datagramPipe; // @synthesize datagramPipe=_datagramPipe;
@property(nonatomic) _Bool dLinkOutputSourceSuspended; // @synthesize dLinkOutputSourceSuspended=_dLinkOutputSourceSuspended;
@property(nonatomic) _Bool dLinkInputSourceSuspended; // @synthesize dLinkInputSourceSuspended=_dLinkInputSourceSuspended;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *dLinkOutputSource; // @synthesize dLinkOutputSource=_dLinkOutputSource;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *dLinkInputSource; // @synthesize dLinkInputSource=_dLinkInputSource;
@property(nonatomic) struct channel_ring_desc *linkOutputRing; // @synthesize linkOutputRing=_linkOutputRing;
@property(nonatomic) struct channel_ring_desc *linkInputRing; // @synthesize linkInputRing=_linkInputRing;
@property(nonatomic) _Bool linkProcessingWakingPacket; // @synthesize linkProcessingWakingPacket=_linkProcessingWakingPacket;
@property(nonatomic) struct channel *linkChannel; // @synthesize linkChannel=_linkChannel;
@property(retain, nonatomic) CBScalablePipe *pipe; // @synthesize pipe=_pipe;
@property(nonatomic) unsigned int controlPacketCounter; // @synthesize controlPacketCounter=_controlPacketCounter;
@property(nonatomic) unsigned long long writeCounter; // @synthesize writeCounter=_writeCounter;
@property(nonatomic) unsigned char logCounter; // @synthesize logCounter=_logCounter;
@property(nonatomic) unsigned long long bytesToNexusBK; // @synthesize bytesToNexusBK=_bytesToNexusBK;
@property(nonatomic) unsigned long long bytesFromNexusBK; // @synthesize bytesFromNexusBK=_bytesFromNexusBK;
@property(nonatomic) unsigned long long packetsToNexusBK; // @synthesize packetsToNexusBK=_packetsToNexusBK;
@property(nonatomic) unsigned long long packetsFromNexusBK; // @synthesize packetsFromNexusBK=_packetsFromNexusBK;
@property(nonatomic) unsigned long long syncNexusBKOutput; // @synthesize syncNexusBKOutput=_syncNexusBKOutput;
@property(nonatomic) unsigned long long syncNexusBKInput; // @synthesize syncNexusBKInput=_syncNexusBKInput;
@property(nonatomic) unsigned long long nexusBKOutputAvailWake; // @synthesize nexusBKOutputAvailWake=_nexusBKOutputAvailWake;
@property(nonatomic) unsigned long long nexusBKInputAvailWake; // @synthesize nexusBKInputAvailWake=_nexusBKInputAvailWake;
@property(nonatomic) _Bool dNexusBKOutputSourceSuspended; // @synthesize dNexusBKOutputSourceSuspended=_dNexusBKOutputSourceSuspended;
@property(nonatomic) _Bool dNexusBKInputSourceSuspended; // @synthesize dNexusBKInputSourceSuspended=_dNexusBKInputSourceSuspended;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *dNexusBKOutputSource; // @synthesize dNexusBKOutputSource=_dNexusBKOutputSource;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *dNexusBKInputSource; // @synthesize dNexusBKInputSource=_dNexusBKInputSource;
@property(nonatomic) struct channel_ring_desc *nexusBKOutputRing; // @synthesize nexusBKOutputRing=_nexusBKOutputRing;
@property(nonatomic) struct channel_ring_desc *nexusBKInputRing; // @synthesize nexusBKInputRing=_nexusBKInputRing;
@property(nonatomic) struct channel *nexusBKChannel; // @synthesize nexusBKChannel=_nexusBKChannel;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *nexusBKGroup; // @synthesize nexusBKGroup=_nexusBKGroup;
@property(nonatomic) unsigned long long bytesToNexusVI; // @synthesize bytesToNexusVI=_bytesToNexusVI;
@property(nonatomic) unsigned long long bytesFromNexusVI; // @synthesize bytesFromNexusVI=_bytesFromNexusVI;
@property(nonatomic) unsigned long long packetsToNexusVI; // @synthesize packetsToNexusVI=_packetsToNexusVI;
@property(nonatomic) unsigned long long packetsFromNexusVI; // @synthesize packetsFromNexusVI=_packetsFromNexusVI;
@property(nonatomic) unsigned long long syncNexusVIOutput; // @synthesize syncNexusVIOutput=_syncNexusVIOutput;
@property(nonatomic) unsigned long long syncNexusVIInput; // @synthesize syncNexusVIInput=_syncNexusVIInput;
@property(nonatomic) unsigned long long nexusVIOutputAvailWake; // @synthesize nexusVIOutputAvailWake=_nexusVIOutputAvailWake;
@property(nonatomic) unsigned long long nexusVIInputAvailWake; // @synthesize nexusVIInputAvailWake=_nexusVIInputAvailWake;
@property(nonatomic) _Bool dNexusVIOutputSourceSuspended; // @synthesize dNexusVIOutputSourceSuspended=_dNexusVIOutputSourceSuspended;
@property(nonatomic) _Bool dNexusVIInputSourceSuspended; // @synthesize dNexusVIInputSourceSuspended=_dNexusVIInputSourceSuspended;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *dNexusVIOutputSource; // @synthesize dNexusVIOutputSource=_dNexusVIOutputSource;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *dNexusVIInputSource; // @synthesize dNexusVIInputSource=_dNexusVIInputSource;
@property(nonatomic) struct channel_ring_desc *nexusVIOutputRing; // @synthesize nexusVIOutputRing=_nexusVIOutputRing;
@property(nonatomic) struct channel_ring_desc *nexusVIInputRing; // @synthesize nexusVIInputRing=_nexusVIInputRing;
@property(nonatomic) struct channel *nexusVIChannel; // @synthesize nexusVIChannel=_nexusVIChannel;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *nexusVIGroup; // @synthesize nexusVIGroup=_nexusVIGroup;
@property(nonatomic) unsigned long long bytesToNexusVO; // @synthesize bytesToNexusVO=_bytesToNexusVO;
@property(nonatomic) unsigned long long bytesFromNexusVO; // @synthesize bytesFromNexusVO=_bytesFromNexusVO;
@property(nonatomic) unsigned long long packetsToNexusVO; // @synthesize packetsToNexusVO=_packetsToNexusVO;
@property(nonatomic) unsigned long long packetsFromNexusVO; // @synthesize packetsFromNexusVO=_packetsFromNexusVO;
@property(nonatomic) unsigned long long syncNexusVOOutput; // @synthesize syncNexusVOOutput=_syncNexusVOOutput;
@property(nonatomic) unsigned long long syncNexusVOInput; // @synthesize syncNexusVOInput=_syncNexusVOInput;
@property(nonatomic) unsigned long long nexusVOOutputAvailWake; // @synthesize nexusVOOutputAvailWake=_nexusVOOutputAvailWake;
@property(nonatomic) unsigned long long nexusVOInputAvailWake; // @synthesize nexusVOInputAvailWake=_nexusVOInputAvailWake;
@property(nonatomic) _Bool dNexusVOOutputSourceSuspended; // @synthesize dNexusVOOutputSourceSuspended=_dNexusVOOutputSourceSuspended;
@property(nonatomic) _Bool dNexusVOInputSourceSuspended; // @synthesize dNexusVOInputSourceSuspended=_dNexusVOInputSourceSuspended;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *dNexusVOOutputSource; // @synthesize dNexusVOOutputSource=_dNexusVOOutputSource;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *dNexusVOInputSource; // @synthesize dNexusVOInputSource=_dNexusVOInputSource;
@property(nonatomic) struct channel_ring_desc *nexusVOOutputRing; // @synthesize nexusVOOutputRing=_nexusVOOutputRing;
@property(nonatomic) struct channel_ring_desc *nexusVOInputRing; // @synthesize nexusVOInputRing=_nexusVOInputRing;
@property(nonatomic) struct channel *nexusVOChannel; // @synthesize nexusVOChannel=_nexusVOChannel;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *nexusVOGroup; // @synthesize nexusVOGroup=_nexusVOGroup;
@property(nonatomic) unsigned long long bytesToNexus; // @synthesize bytesToNexus=_bytesToNexus;
@property(nonatomic) unsigned long long bytesFromNexus; // @synthesize bytesFromNexus=_bytesFromNexus;
@property(nonatomic) unsigned long long packetsToNexus; // @synthesize packetsToNexus=_packetsToNexus;
@property(nonatomic) unsigned long long packetsFromNexus; // @synthesize packetsFromNexus=_packetsFromNexus;
@property(nonatomic) unsigned long long syncNexusOutput; // @synthesize syncNexusOutput=_syncNexusOutput;
@property(nonatomic) unsigned long long syncNexusInput; // @synthesize syncNexusInput=_syncNexusInput;
@property(nonatomic) unsigned long long nexusOutputAvailWake; // @synthesize nexusOutputAvailWake=_nexusOutputAvailWake;
@property(nonatomic) unsigned long long nexusInputAvailWake; // @synthesize nexusInputAvailWake=_nexusInputAvailWake;
@property(nonatomic) unsigned int handledLinkWriteBufferBytes; // @synthesize handledLinkWriteBufferBytes=_handledLinkWriteBufferBytes;
@property(nonatomic) unsigned int filledInLinkWriteBufferBytes; // @synthesize filledInLinkWriteBufferBytes=_filledInLinkWriteBufferBytes;
@property(nonatomic) char *linkWriteBuffer; // @synthesize linkWriteBuffer=_linkWriteBuffer;
@property(nonatomic) _Bool dNexusOutputSourceSuspended; // @synthesize dNexusOutputSourceSuspended=_dNexusOutputSourceSuspended;
@property(nonatomic) _Bool dNexusInputSourceSuspended; // @synthesize dNexusInputSourceSuspended=_dNexusInputSourceSuspended;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *nexusGroup; // @synthesize nexusGroup=_nexusGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *dNexusOutputSource; // @synthesize dNexusOutputSource=_dNexusOutputSource;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *dNexusInputSource; // @synthesize dNexusInputSource=_dNexusInputSource;
@property(nonatomic) struct channel_ring_desc *nexusOutputRing; // @synthesize nexusOutputRing=_nexusOutputRing;
@property(nonatomic) struct channel_ring_desc *nexusInputRing; // @synthesize nexusInputRing=_nexusInputRing;
@property(nonatomic) struct channel *nexusChannel; // @synthesize nexusChannel=_nexusChannel;
@property(nonatomic) _Bool addedHostStateObserver; // @synthesize addedHostStateObserver=_addedHostStateObserver;
@property(retain, nonatomic) NSData *receivedPrelude; // @synthesize receivedPrelude=_receivedPrelude;
@property(retain, nonatomic) NSData *sentPrelude; // @synthesize sentPrelude=_sentPrelude;
@property(retain, nonatomic) NSString *remoteDeviceName; // @synthesize remoteDeviceName=_remoteDeviceName;
@property(nonatomic) unsigned short remoteInnerLinkVersionHBO; // @synthesize remoteInnerLinkVersionHBO=_remoteInnerLinkVersionHBO;
@property(nonatomic) unsigned char usedPreludeState; // @synthesize usedPreludeState=_usedPreludeState;
@property(nonatomic) unsigned char receivedPreludeState; // @synthesize receivedPreludeState=_receivedPreludeState;
@property(nonatomic) unsigned char sentPreludeState; // @synthesize sentPreludeState=_sentPreludeState;
@property(retain, nonatomic) NSUUID *bluetoothUUID; // @synthesize bluetoothUUID=_bluetoothUUID;
- (void)attemptPairingUsingOutOfBandKey:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010004ab6c
- (void)setPacketReceiver:(id)arg1;	// IMP=0x000000010004a904
- (_Bool)sendPacketData:(id)arg1;	// IMP=0x000000010004a7bc
- (void)requestConfigurationForListener:(id)arg1 session:(id)arg2 sessionConfig:(id)arg3 childConfig:(id)arg4 validateAuthBlock:(CDUnknownBlockType)arg5 responseBlock:(CDUnknownBlockType)arg6;	// IMP=0x00000001000498c0
- (id)respondToIKESession:(id)arg1 dataProtectionClass:(unsigned char)arg2 validateAuthBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000100049498
- (void)listener:(id)arg1 receivedNewSession:(id)arg2;	// IMP=0x000000010004939c
- (_Bool)setupIPsec;	// IMP=0x0000000100049170
- (void)restartIKESessionForDataProtectionClass:(unsigned char)arg1;	// IMP=0x0000000100048fa8
- (void)scheduleIKESessionClassADueToConnectFailure;	// IMP=0x0000000100048d84
- (void)restartIKESessionClassA;	// IMP=0x0000000100048d74
- (void)restartIKESessionClassC;	// IMP=0x0000000100048d64
- (void)restartIKESessionClassD;	// IMP=0x0000000100048d54
- (void)setupIPsecInitiatorIfNecessary:(unsigned char)arg1;	// IMP=0x00000001000484bc
- (void)setupIPsecForPairingInitiatorIfNecessary;	// IMP=0x00000001000481f4
- (void)setupIKECallbacksPairing;	// IMP=0x0000000100047d90
- (void)sendlocalPublicClassAKeysEncryptedWithIDS;	// IMP=0x0000000100047b44
- (void)sendlocalPublicClassCKeysEncryptedWithIDS;	// IMP=0x00000001000478f8
- (void)setupIKECallbacksClassA;	// IMP=0x00000001000478e8
- (void)setupIKECallbacksClassC;	// IMP=0x00000001000478d8
- (void)setupIKECallbacksClassD;	// IMP=0x00000001000478c8
- (void)setupIKECallbacks:(unsigned char)arg1;	// IMP=0x0000000100047314
- (void)reportRegistrationFailureIfNeededWithFailureCode:(long long)arg1 errorDescription:(id)arg2;	// IMP=0x00000001000472f8
- (void)handleNotifyCode:(unsigned short)arg1 payload:(id)arg2;	// IMP=0x00000001000459dc
- (void)sendNotifyPayload;	// IMP=0x00000001000459d8
- (_Bool)sendAlwaysOnWiFiUpdate;	// IMP=0x00000001000457c8
- (id)copyNotifyPayloadsToSendWithProxy:(_Bool)arg1;	// IMP=0x0000000100045038
- (_Bool)sendControlData:(id)arg1;	// IMP=0x0000000100044de8
- (_Bool)handleIncomingIKEData:(id)arg1;	// IMP=0x0000000100044b98
- (_Bool)sendIKEData:(id)arg1;	// IMP=0x000000010004488c
- (void)handleRequestToActivateNexus:(id)arg1 fromFlow:(id)arg2;	// IMP=0x0000000100044888
- (void)acceptNewFlow:(id)arg1 fromNexus:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000001000447f8
- (_Bool)appendEncapsulatedData:(id)arg1 type:(unsigned char)arg2;	// IMP=0x0000000100044484
- (void)appendlinkOutgoingData:(id)arg1;	// IMP=0x0000000100044414
- (_Bool)sendData;	// IMP=0x0000000100044404
- (_Bool)sendDataWithCount:(unsigned int)arg1;	// IMP=0x00000001000441bc
- (void)stopReadingPackets;	// IMP=0x00000001000441ac
- (void)stopReadingPacketsWithCount:(unsigned int)arg1;	// IMP=0x0000000100044020
- (void)resumeReadingPackets;	// IMP=0x0000000100044010
- (void)resumeReadingPacketsWithCount:(unsigned int)arg1;	// IMP=0x0000000100043e78
- (unsigned long long)writeBytesToChannel:(const char *)arg1 length:(unsigned long long)arg2;	// IMP=0x0000000100043c30
- (void)readDataFromChannelWithIsUrgent:(_Bool)arg1;	// IMP=0x00000001000439c4
- (void)readIncomingData:(char *)arg1 length:(unsigned long long)arg2 isUrgentLink:(_Bool)arg3;	// IMP=0x0000000100043728
- (void)handleIncoming6LoWPANData:(const char *)arg1 tlvBufferLength:(unsigned short)arg2 length:(unsigned short)arg3 tlvType:(unsigned char)arg4;	// IMP=0x00000001000433dc
- (void)handPacketToNexus:(id)arg1;	// IMP=0x00000001000433d0
- (void)writePacketToNexusChannel:(id)arg1;	// IMP=0x00000001000432d4
- (void)handleReadData:(_Bool)arg1;	// IMP=0x0000000100040e98
- (void)flushPipeWithReason:(id)arg1;	// IMP=0x0000000100040e04
- (void)cleanupLinkReadBufferWithExtra:(unsigned int)arg1;	// IMP=0x0000000100040c80
- (void)armLinkStatsTimer;	// IMP=0x0000000100040b60
- (_Bool)setupNexus;	// IMP=0x00000001000405ac
- (void)checkProxyAgentWithForceUpdate:(_Bool)arg1;	// IMP=0x0000000100040518
- (void)addVirtualInterfaceRoutes;	// IMP=0x0000000100040364
- (void)handlePongSequenceNumber:(unsigned long long)arg1 receiveTime:(unsigned long long)arg2;	// IMP=0x000000010003ffcc
- (void)measureLatencyWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010003fba4
- (void)updateDatagramPipe:(id)arg1;	// IMP=0x000000010003f12c
- (void)updateUrgentPipe:(id)arg1;	// IMP=0x000000010003e75c
- (void)cleanupUrgentPipeState;	// IMP=0x000000010003e438
- (_Bool)setQosMarkingEnabled;	// IMP=0x000000010003e168
- (_Bool)setMPKLLoggingWithEnabled:(_Bool)arg1;	// IMP=0x000000010003df20
- (_Bool)setupNexusChannelVoice:(id)arg1;	// IMP=0x000000010003d8d0
- (_Bool)setupNexusChannelBestEffort:(id)arg1;	// IMP=0x000000010003d280
- (_Bool)setupNexusChannelBackground:(id)arg1;	// IMP=0x000000010003cc30
- (_Bool)setupNexusChannelVideo:(id)arg1;	// IMP=0x000000010003c5e0
- (_Bool)validateChannelAttributes:(struct channel_attr *)arg1;	// IMP=0x000000010003ba04
- (_Bool)setupNexusChannel;	// IMP=0x000000010003b78c
- (void)pipeDidDisconnect;	// IMP=0x000000010003b778
- (_Bool)resume;	// IMP=0x000000010003b67c
- (_Bool)suspend;	// IMP=0x000000010003b510
- (_Bool)cancelBecausePipeDisconnected;	// IMP=0x000000010003b3a0
- (_Bool)cancelWithReason:(id)arg1;	// IMP=0x000000010003ae50
- (unsigned short)metric;	// IMP=0x000000010003ae48
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x000000010003ac70
- (void)refreshCompanionProxyAgent;	// IMP=0x000000010003abe8
- (void)dealloc;	// IMP=0x000000010003ab4c
- (void)invalidateLink;	// IMP=0x000000010003a738
- (void)invalidateNexusChannels;	// IMP=0x000000010003a0f4
- (void)invalidateIKESessionClassA;	// IMP=0x000000010003a0e4
- (void)invalidateIKESessionClassC;	// IMP=0x000000010003a0d4
- (void)invalidateIKESessionClassD;	// IMP=0x000000010003a0c4
- (id *)ikeSessionPointerForDataProtectionClass:(unsigned char)arg1;	// IMP=0x0000000100039f6c
- (void)invalidateIKESessionForClass:(unsigned char)arg1;	// IMP=0x0000000100039f00
- (_Bool)start;	// IMP=0x0000000100038380
- (id)copyShortDescriptionInner;	// IMP=0x0000000100038290
- (id)copyDescriptionInner;	// IMP=0x000000010003810c
- (id)initLinkWithQueue:(id)arg1 linkDelegate:(id)arg2 nrUUID:(id)arg3 pipe:(id)arg4 remoteDeviceName:(id)arg5;	// IMP=0x0000000100037b98
@property(readonly, nonatomic) _Bool hasValidPipe;
- (id)copyStatusString;	// IMP=0x00000001000367b0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


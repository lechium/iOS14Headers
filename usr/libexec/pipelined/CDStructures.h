//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

@class NSInputStream;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ActivityPolicy {
    struct optional<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> _field1;
    struct optional<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> _field2;
    struct optional<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> _field3;
    char *_field4;
    int _field5;
};

struct AltitudeParameters;

struct AvailabilityData {
    double _field1;
    id _field2;
    duration_673274cf _field3;
    double _field4;
    double _field5;
    double _field6;
    _Bool _field7;
};

struct AvailabilityTile {
    struct shared_ptr<proto::availability::AvailabilityTile> _field1;
    _Bool _field2;
    struct unique_ptr<wireless_diagnostics::google::protobuf::io::FileInputStream, std::__1::default_delete<wireless_diagnostics::google::protobuf::io::FileInputStream>> _field3;
    struct path _field4;
    int _field5;
    int _field6;
    long long _field7;
    long long _field8;
    struct unique_ptr<FileHandleWrapper, std::__1::default_delete<FileHandleWrapper>> _field9;
    int _field10;
    long long _field11;
};

struct BeaconParameters;

struct BeaconSensor;

struct BlockingQueue<DataUploadDb::QueueInfo> {
    struct deque<DataUploadDb::QueueInfo, std::__1::allocator<DataUploadDb::QueueInfo>> _field1;
    struct mutex _field2;
    struct condition_variable _field3;
    struct condition_variable _field4;
    unsigned long long _field5;
};

struct BodyFixedDetectorParameters;

struct CMGravity {
    float _field1;
    float _field2;
    float _field3;
};

struct ClientCoarseIndoorParameters;

struct CoarseRegionalParameters;

struct CoastedGravityEstimator {
    struct unique_ptr<CoastedGravityEstimatorImpl, std::__1::default_delete<CoastedGravityEstimatorImpl>> fImpl;
};

struct CoastedGravityEstimatorImpl;

struct CombinedLogger;

struct DataUploadDb {
    CDUnknownFunctionPointerType *_field1;
    struct path _field2;
    _Bool _field3;
    struct BlockingQueue<DataUploadDb::QueueInfo> _field4;
    struct BlockingQueue<DataUploadDb::QueueInfo> _field5;
    struct atomic<bool> _field6;
    struct atomic<bool> _field7;
    struct atomic<bool> _field8;
    id _field9;
    struct shared_ptr<_EventBusCollection> _field10;
    struct atomic<int> _field11;
    struct atomic<int> _field12;
    struct atomic<int> _field13;
    struct atomic<long long> _field14;
    struct atomic<unsigned long long> _field15;
    id _field16;
    id _field17;
    id _field18;
    struct unique_ptr<RetryPolicy, std::__1::default_delete<RetryPolicy>> _field19;
    int _field20;
    id _field21;
    id _field22;
    int _field23;
    _Bool _field24;
    id _field25;
    struct unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> _field26;
    struct unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> _field27;
    struct unordered_map<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>>> _field28;
    struct unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> _field29;
    id _field30;
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field31;
    id _field32;
    struct safe_thread<CL::joinable> _field33;
    struct safe_thread<CL::joinable> _field34;
};

struct DeadReckoningParameters;

struct DeferredState {
    id _field1;
    struct optional<OSTransaction> _field2;
};

struct DynamicScanPriorityObserver;

struct DynamicUniverseParameters {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    _Bool _field6;
    int _field7;
    unsigned int _field8[1];
};

struct FileHandleWrapper;

struct FileInputStream;

struct FloorEnvironmentLoader;

struct FloorTransitionState {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    long long _field4;
    struct _FloorTransitionState__isset _field5;
};

struct GPSSensor;

struct GenericWifiSensor;

struct GpsFusionGlobalParameters;

struct GpsStrobeParameters;

struct HealthIndicators {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct vector<double, std::__1::allocator<double>> _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    int _field13;
    int _field14;
    struct _HealthIndicators__isset _field15;
};

struct IOSActivityStateSensorBridge {
    CDUnknownFunctionPointerType *_field1;
    struct vector<std::__1::weak_ptr<sensors::Observer>, std::__1::allocator<std::__1::weak_ptr<sensors::Observer>>> _field2;
    id _field3;
};

struct IOSInertialSensorBridge {
    CDUnknownFunctionPointerType *_field1;
    struct vector<std::__1::weak_ptr<sensors::Observer>, std::__1::allocator<std::__1::weak_ptr<sensors::Observer>>> _field2;
    int _field3;
    unsigned long long _field4;
    double _field5;
    unsigned long long _field6;
    double _field7;
    double _field8;
    unsigned long long _field9;
    id _field10;
};

struct IPossibleLocations;

struct ITileDb;

struct Info {
    basic_string_7c0a1c0b _field1;
    int _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
};

struct InjectionParameters;

struct LatLon {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    double _field3;
    struct _LatLon__isset _field4;
};

struct LatLonPolygon;

struct LocalizerApi;

struct LocalizerInputEvent {
    struct shared_ptr<boost::variant<ActivityStateInputEvent, AltimeterInputEvent, AppOrientationInputEvent, AttitudeXInputEvent, BeaconInputEvent, CellInputEvent, DynamicUniverseInputEvent, GPSInputEvent, InertialInputEvent, OutdoorPosInputEvent, PedometryInputEvent, ResetInputEvent, UserLocationInput, VideoFrameInputEvent, WifiInputEvent, CascadiaInputEvent>> _field1;
};

struct LocalizerParameters {
    CDUnknownFunctionPointerType *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    int _field4;
    int _field5;
    int _field6;
    float _field7;
    float _field8;
    struct MotionTruthParameters *_field9;
    struct MultiphoneDbmParameters *_field10;
    struct PedometryCompassMotionParameters *_field11;
    struct InjectionParameters *_field12;
    struct PdrParameters *_field13;
    struct WifiParameters *_field14;
    float _field15;
    int _field16;
    struct BodyFixedDetectorParameters *_field17;
    double _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    struct BeaconParameters *_field23;
    float _field24;
    int _field25;
    double _field26;
    struct WallBehaviorParamaters *_field27;
    struct DynamicUniverseParameters *_field28;
    struct AltitudeParameters *_field29;
    double _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    float _field34;
    struct GpsFusionGlobalParameters *_field35;
    struct DeadReckoningParameters *_field36;
    struct ClientCoarseIndoorParameters *_field37;
    struct GpsFusionGlobalParameters *_field38;
    float _field39;
    float _field40;
    struct PedometryCompassMotionParameters *_field41;
    float _field42;
    float _field43;
    struct CoarseRegionalParameters *_field44;
    struct GpsStrobeParameters *_field45;
    int _field46;
    unsigned int _field47[2];
};

struct LocationId {
    struct shared_ptr<std::__1::basic_string<char>> _field1;
};

struct MotionTruthParameters;

struct MultiLocationSet;

struct MultiphoneDbmParameters;

struct NearestVenueSettings {
    id _field1;
    double _field2;
    id _field3;
    _Bool _field4;
};

struct PdrParameters;

struct PedometryCompassMotionParameters;

struct PedometrySensor;

struct PlatformInfo;

struct PoseEstimate {
    CDUnknownFunctionPointerType *_field1;
    struct Universal2d _field2;
    struct LatLon _field3;
    double _field4;
    double _field5;
    int _field6;
    double _field7;
    basic_string_7c0a1c0b _field8;
    int _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
    double _field17;
    double _field18;
    double _field19;
    double _field20;
    double _field21;
    double _field22;
    long long _field23;
    double _field24;
    double _field25;
    double _field26;
    double _field27;
    double _field28;
    double _field29;
    int _field30;
    int _field31;
    struct HealthIndicators _field32;
    _Bool _field33;
    _Bool _field34;
    long long _field35;
    long long _field36;
    double _field37;
    double _field38;
    double _field39;
    double _field40;
    int _field41;
    int _field42;
    struct LatLon _field43;
    double _field44;
    struct FloorTransitionState _field45;
    double _field46;
    int _field47;
    double _field48;
    double _field49;
    double _field50;
    double _field51;
    double _field52;
    double _field53;
    int _field54;
    double _field55;
    double _field56;
    double _field57;
    double _field58;
    double _field59;
    int _field60;
    basic_string_7c0a1c0b _field61;
    double _field62;
    struct _PoseEstimate__isset _field63;
};

struct QueueInfo;

struct RepeatedField<unsigned int> {
    unsigned int *_field1;
    int _field2;
    int _field3;
};

struct RepeatedPtrField<proto::availability::LatLonPolygon> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<std::__1::basic_string<char>> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RetryPolicy;

struct ScanInformation {
    struct ScanInformationLifetimeTracer _field1;
    struct unique_ptr<__WiFiDeviceClient *, CF::CFReleaser<__WiFiDeviceClient *>> _field2;
    id _field3;
    id _field4;
    id _field5;
    struct dispatch_timer _field6;
    CDUnknownBlockType _field7;
    time_point_e708cccf _field8;
    int _field9;
};

struct ScanInformationLifetimeTracer {
    void *_field1;
};

struct ScannerSettingsChangeListener;

struct SelectedLocations {
    struct shared_ptr<IPossibleLocations> _field1;
    struct unordered_map<LocationId, LocationConfiguration, std::__1::hash<LocationId>, std::__1::equal_to<LocationId>, std::__1::allocator<std::__1::pair<const LocationId, LocationConfiguration>>> _field2;
    struct shared_ptr<MultiLocationSet> _field3;
    _Bool _field4;
};

struct Sensor {
    CDUnknownFunctionPointerType *_field1;
    struct vector<std::__1::weak_ptr<sensors::Observer>, std::__1::allocator<std::__1::weak_ptr<sensors::Observer>>> _field2;
};

struct SensorCollection;

struct SensorMeasurement {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    double _field3;
    double _field4;
    long long _field5;
    int _field6;
    long long _field7;
    long long _field8;
    double _field9;
    int _field10;
    double _field11;
    struct _SensorMeasurement__isset _field12;
};

struct TemporaryPath;

struct TileDownloadConfiguration;

struct TileIdentifier {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    int _field3;
};

struct TileStorageLimits {
    int _maxIndoorCount;
    int _maxIndoorByteSize;
    int _maxRegionalCount;
    int _maxRegionalByteSize;
    float _numOfDaysBeforeIndoorTileRedownload;
    float _numOfDaysBeforeRegionalTileRedownload;
};

struct Universal2d {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    double _field3;
    struct _Universal2d__isset _field4;
};

struct UniverseState {
    id _field1;
    duration_673274cf _field2;
    CDStruct_4d1fbe9a _field3;
};

struct UnprocessedDatarun {
    struct path _field1;
};

struct Urls {
    basic_string_7c0a1c0b _field1;
    id _field2;
    id _field3;
};

struct VenueBounds {
    CDUnknownFunctionPointerType *_field1;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field2;
    struct RepeatedPtrField<proto::availability::LatLonPolygon> _field3;
    struct TileDownloadConfiguration *_field4;
    struct LatLonPolygon *_field5;
    struct RepeatedField<unsigned int> _field6;
    int _field7;
    int _field8;
    unsigned int _field9[1];
};

struct WallBehaviorParamaters;

struct WifiParameters;

struct WifiScanStrategy;

struct _EventBusCollection;

struct _FloorTransitionState__isset {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct _HealthIndicators__isset {
    unsigned int :1;
    unsigned int :1;
};

struct _LatLon__isset {
    unsigned int :1;
    unsigned int :1;
};

struct _PoseEstimate__isset {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct _SensorMeasurement__isset {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct _Universal2d__isset {
    unsigned int :1;
    unsigned int :1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<LocationId, LocationConfiguration>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<LocationId, LocationConfiguration>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*> *_field1;
};

struct __list_node_base<std::__1::unique_ptr<ScanInformation, std::__1::default_delete<ScanInformation>>, void *> {
    struct __list_node_base<std::__1::unique_ptr<ScanInformation, std::__1::default_delete<ScanInformation>>, void *> *__prev_;
    struct __list_node_base<std::__1::unique_ptr<ScanInformation, std::__1::default_delete<ScanInformation>>, void *> *__next_;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct a4;

struct a8;

struct aligned_storage<AltimeterSensor> {
    union dummy_u {
        char data[40];
        struct a8 aligner_;
    } dummy_;
};

struct aligned_storage<AvailabilityData> {
    union dummy_u {
        char data[56];
        struct a8 aligner_;
    } dummy_;
};

struct aligned_storage<DataRun> {
    dummy_u_c7808310 dummy_;
};

struct aligned_storage<DeferredState> {
    dummy_u_c7808310 dummy_;
};

struct aligned_storage<DispatchLocalizerObserver> {
    dummy_u_888b42fd dummy_;
};

struct aligned_storage<DispatchPossibleLocationTrackerObserver> {
    dummy_u_888b42fd dummy_;
};

struct aligned_storage<OSTransaction> {
    union dummy_u {
        char _field1[32];
        struct a8 _field2;
    } _field1;
};

struct aligned_storage<Params> {
    dummy_u_888b42fd dummy_;
};

struct aligned_storage<SelectedLocations> {
    union dummy_u {
        char data[80];
        struct a8 aligner_;
    } dummy_;
};

struct aligned_storage<UniverseState> {
    union dummy_u {
        char data[160];
        struct a8 aligner_;
    } dummy_;
};

struct aligned_storage<bool> {
    union dummy_u {
        char data[1];
        char aligner_;
    } dummy_;
};

struct aligned_storage<double> {
    dummy_u_ce8d0729 dummy_;
};

struct aligned_storage<int> {
    dummy_u_b361318f dummy_;
};

struct aligned_storage<proto::params::LocalizerParameters> {
    union dummy_u {
        char data[280];
        struct a8 aligner_;
    } dummy_;
};

struct aligned_storage<std::__1::basic_string<char>> {
    union dummy_u {
        char data[24];
        struct a8 aligner_;
    } dummy_;
};

struct aligned_storage<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> {
    union dummy_u {
        char _field1[8];
        struct a8 _field2;
    } _field1;
};

struct aligned_storage<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    dummy_u_ce8d0729 dummy_;
};

struct aligned_storage<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>>> {
    dummy_u_ce8d0729 dummy_;
};

struct aligned_storage<unsigned int> {
    dummy_u_b361318f dummy_;
};

struct aligned_storage<unsigned long> {
    dummy_u_ce8d0729 dummy_;
};

struct atomic<ScannerSettingsChangeListener *> {
    struct __cxx_atomic_impl<ScannerSettingsChangeListener *, std::__1::__cxx_atomic_base_impl<ScannerSettingsChangeListener *>> {
        _Atomic struct ScannerSettingsChangeListener *__a_value;
    } __a_;
};

struct atomic<bool> {
    struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool>> {
        _Atomic _Bool __a_value;
    } __a_;
};

struct atomic<int> {
    struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int>> {
        _Atomic int _field1;
    } _field1;
};

struct atomic<long long> {
    struct __cxx_atomic_impl<long long, std::__1::__cxx_atomic_base_impl<long long>> {
        _Atomic long long _field1;
    } _field1;
};

struct atomic<unsigned long long> {
    struct __cxx_atomic_impl<unsigned long long, std::__1::__cxx_atomic_base_impl<unsigned long long>> {
        _Atomic unsigned long long _field1;
    } _field1;
};

struct atomic<unsigned long> {
    struct __cxx_atomic_impl<unsigned long, std::__1::__cxx_atomic_base_impl<unsigned long>> {
        _Atomic unsigned long long __a_value;
    } __a_;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct condition_variable {
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field1;
};

struct deque<DataUploadDb::QueueInfo, std::__1::allocator<DataUploadDb::QueueInfo>> {
    struct __split_buffer<DataUploadDb::QueueInfo *, std::__1::allocator<DataUploadDb::QueueInfo *>> {
        struct QueueInfo **_field1;
        struct QueueInfo **_field2;
        struct QueueInfo **_field3;
        struct __compressed_pair<DataUploadDb::QueueInfo **, std::__1::allocator<DataUploadDb::QueueInfo *>> {
            struct QueueInfo **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<DataUploadDb::QueueInfo>> {
        unsigned long long _field1;
    } _field3;
};

struct dispatch_timer {
    id _field1;
};

struct duration<long double, std::__1::ratio<1, 1>> {
    long double __rep_;
};

struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long __rep_;
};

struct duration<long long, std::__1::ratio<1, 1000>> {
    long long __rep_;
};

struct duration<long long, std::__1::ratio<1, 1>> {
    long long __rep_;
};

struct handle;

struct list<std::__1::unique_ptr<ScanInformation, std::__1::default_delete<ScanInformation>>, std::__1::allocator<std::__1::unique_ptr<ScanInformation, std::__1::default_delete<ScanInformation>>>> {
    struct __list_node_base<std::__1::unique_ptr<ScanInformation, std::__1::default_delete<ScanInformation>>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<ScanInformation, std::__1::default_delete<ScanInformation>>, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct mutex {
    struct _opaque_pthread_mutex_t {
        long long _field1;
        char _field2[56];
    } _field1;
};

struct optional<AltimeterSensor> {
    _Bool m_initialized;
    struct aligned_storage<AltimeterSensor> m_storage;
};

struct optional<AvailabilityData> {
    _Bool m_initialized;
    struct aligned_storage<AvailabilityData> m_storage;
};

struct optional<DataRun> {
    _Bool m_initialized;
    struct aligned_storage<DataRun> m_storage;
};

struct optional<DeferredState> {
    _Bool m_initialized;
    struct aligned_storage<DeferredState> m_storage;
};

struct optional<DispatchLocalizerObserver> {
    _Bool m_initialized;
    struct aligned_storage<DispatchLocalizerObserver> m_storage;
};

struct optional<DispatchPossibleLocationTrackerObserver> {
    _Bool m_initialized;
    struct aligned_storage<DispatchPossibleLocationTrackerObserver> m_storage;
};

struct optional<OSTransaction> {
    _Bool _field1;
    struct aligned_storage<OSTransaction> _field2;
};

struct optional<Params> {
    _Bool m_initialized;
    struct aligned_storage<Params> m_storage;
};

struct optional<SelectedLocations> {
    _Bool m_initialized;
    struct aligned_storage<SelectedLocations> m_storage;
};

struct optional<UniverseState> {
    _Bool m_initialized;
    struct aligned_storage<UniverseState> m_storage;
};

struct optional<bool> {
    _Bool m_initialized;
    struct aligned_storage<bool> m_storage;
};

struct optional<double> {
    _Bool m_initialized;
    struct aligned_storage<double> m_storage;
};

struct optional<int> {
    _Bool m_initialized;
    struct aligned_storage<int> m_storage;
};

struct optional<proto::params::LocalizerParameters> {
    _Bool m_initialized;
    struct aligned_storage<proto::params::LocalizerParameters> m_storage;
};

struct optional<std::__1::basic_string<char>> {
    _Bool m_initialized;
    struct aligned_storage<std::__1::basic_string<char>> m_storage;
};

struct optional<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> {
    _Bool _field1;
    struct aligned_storage<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> _field2;
};

struct optional<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    _Bool m_initialized;
    struct aligned_storage<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> m_storage;
};

struct optional<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>>> {
    _Bool m_initialized;
    struct aligned_storage<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>>> m_storage;
};

struct optional<unsigned int> {
    _Bool m_initialized;
    struct aligned_storage<unsigned int> m_storage;
};

struct optional<unsigned long> {
    _Bool m_initialized;
    struct aligned_storage<unsigned long> m_storage;
};

struct pair<NSInputStream *, unsigned long> {
    NSInputStream *first;
    unsigned long long second;
};

struct path {
    basic_string_7c0a1c0b _field1;
};

struct point_xy<double, boost::geometry::cs::cartesian>;

struct polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, std::vector, std::vector, std::allocator, std::allocator> {
    struct ring<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, vector, allocator> m_outer;
    struct vector<boost::geometry::model::ring<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, vector, allocator>, std::__1::allocator<boost::geometry::model::ring<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, vector, allocator>>> m_inners;
};

struct ring<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, vector, allocator> {
    struct point_xy<double, boost::geometry::cs::cartesian> *__begin_;
    struct point_xy<double, boost::geometry::cs::cartesian> *__end_;
    struct __compressed_pair<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>*, std::__1::allocator<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>>> {
        struct point_xy<double, boost::geometry::cs::cartesian> *__value_;
    } __end_cap_;
};

struct safe_thread<CL::joinable> {
    struct thread _field1;
};

struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long>> {
    struct __tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<AvailabilityTile> {
    struct AvailabilityTile *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<DynamicScanPriorityObserver> {
    struct DynamicScanPriorityObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<IPossibleLocations> {
    struct IPossibleLocations *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ITileDb> {
    struct ITileDb *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<MultiLocationSet> {
    struct MultiLocationSet *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<PlatformInfo> {
    struct PlatformInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<SensorCollection> {
    struct SensorCollection *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TemporaryPath> {
    struct TemporaryPath *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<WifiScanStrategy> {
    struct WifiScanStrategy *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<_EventBusCollection> {
    struct _EventBusCollection *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<boost::variant<ActivityStateInputEvent, AltimeterInputEvent, AppOrientationInputEvent, AttitudeXInputEvent, BeaconInputEvent, CellInputEvent, DynamicUniverseInputEvent, GPSInputEvent, InertialInputEvent, OutdoorPosInputEvent, PedometryInputEvent, ResetInputEvent, UserLocationInput, VideoFrameInputEvent, WifiInputEvent, CascadiaInputEvent>> {
    struct variant<ActivityStateInputEvent, AltimeterInputEvent, AppOrientationInputEvent, AttitudeXInputEvent, BeaconInputEvent, CellInputEvent, DynamicUniverseInputEvent, GPSInputEvent, InertialInputEvent, OutdoorPosInputEvent, PedometryInputEvent, ResetInputEvent, UserLocationInput, VideoFrameInputEvent, WifiInputEvent, CascadiaInputEvent> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<db::resources::handle> {
    struct handle *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<proto::availability::AvailabilityTile> {
    struct AvailabilityTile *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<sensors::CombinedLogger> {
    struct CombinedLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::basic_string<char>> {
    basic_string_7c0a1c0b *_field1;
    struct __shared_weak_count *_field2;
};

struct thread {
    struct _opaque_pthread_t *_field1;
};

struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    duration_673274cf __d_;
};

struct unique_ptr<BeaconSensor, std::__1::default_delete<BeaconSensor>> {
    struct __compressed_pair<BeaconSensor *, std::__1::default_delete<BeaconSensor>> {
        struct BeaconSensor *__value_;
    } __ptr_;
};

struct unique_ptr<CoastedGravityEstimatorImpl, std::__1::default_delete<CoastedGravityEstimatorImpl>> {
    struct __compressed_pair<CoastedGravityEstimatorImpl *, std::__1::default_delete<CoastedGravityEstimatorImpl>> {
        struct CoastedGravityEstimatorImpl *__value_;
    } __ptr_;
};

struct unique_ptr<FileHandleWrapper, std::__1::default_delete<FileHandleWrapper>> {
    struct __compressed_pair<FileHandleWrapper *, std::__1::default_delete<FileHandleWrapper>> {
        struct FileHandleWrapper *_field1;
    } _field1;
};

struct unique_ptr<FloorEnvironmentLoader, std::__1::default_delete<FloorEnvironmentLoader>> {
    struct __compressed_pair<FloorEnvironmentLoader *, std::__1::default_delete<FloorEnvironmentLoader>> {
        struct FloorEnvironmentLoader *__value_;
    } __ptr_;
};

struct unique_ptr<GPSSensor, std::__1::default_delete<GPSSensor>> {
    struct __compressed_pair<GPSSensor *, std::__1::default_delete<GPSSensor>> {
        struct GPSSensor *__value_;
    } __ptr_;
};

struct unique_ptr<GenericWifiSensor, std::__1::default_delete<GenericWifiSensor>> {
    struct __compressed_pair<GenericWifiSensor *, std::__1::default_delete<GenericWifiSensor>> {
        struct GenericWifiSensor *__value_;
    } __ptr_;
};

struct unique_ptr<IOSActivityStateSensorBridge, std::__1::default_delete<IOSActivityStateSensorBridge>> {
    struct __compressed_pair<IOSActivityStateSensorBridge *, std::__1::default_delete<IOSActivityStateSensorBridge>> {
        struct IOSActivityStateSensorBridge *__value_;
    } __ptr_;
};

struct unique_ptr<IOSInertialSensorBridge, std::__1::default_delete<IOSInertialSensorBridge>> {
    struct __compressed_pair<IOSInertialSensorBridge *, std::__1::default_delete<IOSInertialSensorBridge>> {
        struct IOSInertialSensorBridge *__value_;
    } __ptr_;
};

struct unique_ptr<LocalizerApi, std::__1::default_delete<LocalizerApi>> {
    struct __compressed_pair<LocalizerApi *, std::__1::default_delete<LocalizerApi>> {
        struct LocalizerApi *__value_;
    } __ptr_;
};

struct unique_ptr<PedometrySensor, std::__1::default_delete<PedometrySensor>> {
    struct __compressed_pair<PedometrySensor *, std::__1::default_delete<PedometrySensor>> {
        struct PedometrySensor *__value_;
    } __ptr_;
};

struct unique_ptr<RetryPolicy, std::__1::default_delete<RetryPolicy>> {
    struct __compressed_pair<RetryPolicy *, std::__1::default_delete<RetryPolicy>> {
        struct RetryPolicy *_field1;
    } _field1;
};

struct unique_ptr<ScanInformation, std::__1::default_delete<ScanInformation>> {
    struct __compressed_pair<ScanInformation *, std::__1::default_delete<ScanInformation>> {
        struct ScanInformation *_field1;
    } _field1;
};

struct unique_ptr<__WiFiDeviceClient *, CF::CFReleaser<__WiFiDeviceClient *>> {
    struct __compressed_pair<__WiFiDeviceClient *, CF::CFReleaser<__WiFiDeviceClient *>> {
        struct __WiFiDeviceClient *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<LocationId, LocationConfiguration>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<LocationId, LocationConfiguration>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<LocationId, LocationConfiguration>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<LocationId, LocationConfiguration>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<LocationId, LocationConfiguration>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<LocationId, LocationConfiguration>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<LocationId, LocationConfiguration>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<wireless_diagnostics::google::protobuf::io::FileInputStream, std::__1::default_delete<wireless_diagnostics::google::protobuf::io::FileInputStream>> {
    struct __compressed_pair<wireless_diagnostics::google::protobuf::io::FileInputStream *, std::__1::default_delete<wireless_diagnostics::google::protobuf::io::FileInputStream>> {
        struct FileInputStream *_field1;
    } _field1;
};

struct unordered_map<LocationId, LocationConfiguration, std::__1::hash<LocationId>, std::__1::equal_to<LocationId>, std::__1::allocator<std::__1::pair<const LocationId, LocationConfiguration>>> {
    struct __hash_table<std::__1::__hash_value_type<LocationId, LocationConfiguration>, std::__1::__unordered_map_hasher<LocationId, std::__1::__hash_value_type<LocationId, LocationConfiguration>, std::__1::hash<LocationId>, true>, std::__1::__unordered_map_equal<LocationId, std::__1::__hash_value_type<LocationId, LocationConfiguration>, std::__1::equal_to<LocationId>, true>, std::__1::allocator<std::__1::__hash_value_type<LocationId, LocationConfiguration>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<LocationId, LocationConfiguration>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<LocationId, LocationConfiguration>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<LocationId, LocationConfiguration>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<LocationId, LocationConfiguration>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<LocationId, LocationConfiguration>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<LocationId, std::__1::__hash_value_type<LocationId, LocationConfiguration>, std::__1::hash<LocationId>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<LocationId, std::__1::__hash_value_type<LocationId, LocationConfiguration>, std::__1::equal_to<LocationId>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct variant<ActivityStateInputEvent, AltimeterInputEvent, AppOrientationInputEvent, AttitudeXInputEvent, BeaconInputEvent, CellInputEvent, DynamicUniverseInputEvent, GPSInputEvent, InertialInputEvent, OutdoorPosInputEvent, PedometryInputEvent, ResetInputEvent, UserLocationInput, VideoFrameInputEvent, WifiInputEvent, CascadiaInputEvent>;

struct vector<NSArray *, std::__1::allocator<NSArray *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<NSArray *__strong *, std::__1::allocator<NSArray *>> {
        id *__value_;
    } __end_cap_;
};

struct vector<NSInputStream *, std::__1::allocator<NSInputStream *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<NSInputStream *__strong *, std::__1::allocator<NSInputStream *>> {
        id *__value_;
    } __end_cap_;
};

struct vector<boost::geometry::model::ring<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, vector, allocator>, std::__1::allocator<boost::geometry::model::ring<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, vector, allocator>>> {
    struct ring<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, vector, allocator> *__begin_;
    struct ring<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, vector, allocator> *__end_;
    struct __compressed_pair<boost::geometry::model::ring<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, vector, allocator>*, std::__1::allocator<boost::geometry::model::ring<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, vector, allocator>>> {
        struct ring<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, vector, allocator> *__value_;
    } __end_cap_;
};

struct vector<double, std::__1::allocator<double>> {
    double *_field1;
    double *_field2;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_7c0a1c0b *__begin_;
    basic_string_7c0a1c0b *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_7c0a1c0b *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<NSInputStream *, unsigned long>, std::__1::allocator<std::__1::pair<NSInputStream *, unsigned long>>> {
    pair_2b0ed7ca *_field1;
    pair_2b0ed7ca *_field2;
    struct __compressed_pair<std::__1::pair<NSInputStream *, unsigned long>*, std::__1::allocator<std::__1::pair<NSInputStream *, unsigned long>>> {
        pair_2b0ed7ca *_field1;
    } _field3;
};

struct vector<std::__1::shared_ptr<ITileDb>, std::__1::allocator<std::__1::shared_ptr<ITileDb>>> {
    shared_ptr_00a9cfce *_field1;
    shared_ptr_00a9cfce *_field2;
    struct __compressed_pair<std::__1::shared_ptr<ITileDb>*, std::__1::allocator<std::__1::shared_ptr<ITileDb>>> {
        shared_ptr_00a9cfce *_field1;
    } _field3;
};

struct vector<std::__1::weak_ptr<sensors::Observer>, std::__1::allocator<std::__1::weak_ptr<sensors::Observer>>> {
    struct weak_ptr<sensors::Observer> *_field1;
    struct weak_ptr<sensors::Observer> *_field2;
    struct __compressed_pair<std::__1::weak_ptr<sensors::Observer>*, std::__1::allocator<std::__1::weak_ptr<sensors::Observer>>> {
        struct weak_ptr<sensors::Observer> *_field1;
    } _field3;
};

struct weak_ptr<sensors::Observer>;

#pragma mark Typedef'd Structures

typedef struct {
    int yieldType;
    double prbPipelinedSaysYield;
    double prbCoarseIndoorSaysIndoor;
    double prbWifiSaysIndoor;
    double prbGpsSaysIndoor;
    double prbParticleFilterSaysYield;
    double prbOnFloors;
    double prbOnFloor[5];
    double prbInlier;
    double prbLocalizerIoWrapperSaysWifiOk;
    double prbInjectionOccupancyRetryLimitOk;
    double prbInjectionGainRetryLimitOk;
    int pfYieldStatusBeforeCalculatePose;
    int yieldStatusBeforeCalculatePose;
} CDStruct_e5e57c13;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    double odometer;
    double deltaDistance;
    double deltaDistanceAccuracy;
    double timestampGps;
    double machtime;
    float horzUncSemiMaj;
    float horzUncSemiMin;
    float horzUncSemiMajAz;
    _Bool isFitnessMatch;
    int matchQuality;
    CDStruct_2c43369c matchCoordinate;
    double matchCourse;
    int matchFormOfWay;
    int matchRoadClass;
    _Bool matchShifted;
    struct {
        double rawUnmodifiedCourse;
        double rawUnmodifiedCourseUnc;
        _Bool isStatic;
        _Bool isMounted;
    } mapMatcherData;
    struct {
        double value;
        double std;
    } pressure;
    float undulation;
    CDStruct_2c43369c specialCoordinate;
    double specialHorizontalAccuracy;
    double machContinuousTime;
    int originDevice;
    _Bool isMatcherPropagatedCoordinates;
    double slope;
    double maxAbsSlope;
    double groundAltitude;
    double groundAltitudeUncertainty;
} CDStruct_6422f5cf;

typedef struct {
    int suitability;
    CDStruct_2c43369c coordinate;
    double horizontalAccuracy;
    double altitude;
    double verticalAccuracy;
    double speed;
    double speedAccuracy;
    double course;
    double courseAccuracy;
    double timestamp;
    int confidence;
    double lifespan;
    int type;
    CDStruct_2c43369c rawCoordinate;
    double rawCourse;
    int floor;
    unsigned int integrity;
    int referenceFrame;
    int rawReferenceFrame;
    int signalEnvironmentType;
} CDStruct_4d1fbe9a;

// Ambiguous groups
typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_7c0a1c0b;

typedef struct duration<long double, std::__1::ratio<1, 1>> {
    long double __rep_;
} duration_b9a348d0;

typedef struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long __rep_;
} duration_673274cf;

typedef struct duration<long long, std::__1::ratio<1, 1000>> {
    long long __rep_;
} duration_6174cf92;

typedef struct duration<long long, std::__1::ratio<1, 1>> {
    long long __rep_;
} duration_b069fde9;

typedef struct optional<SelectedLocations> {
    _Bool m_initialized;
    struct aligned_storage<SelectedLocations> m_storage;
} optional_222981b3;

typedef struct optional<bool> {
    _Bool m_initialized;
    struct aligned_storage<bool> m_storage;
} optional_a0b196b0;

typedef struct optional<double> {
    _Bool m_initialized;
    struct aligned_storage<double> m_storage;
} optional_e841d536;

typedef struct optional<int> {
    _Bool m_initialized;
    struct aligned_storage<int> m_storage;
} optional_e65c1c4a;

typedef struct optional<proto::params::LocalizerParameters> {
    _Bool m_initialized;
    struct aligned_storage<proto::params::LocalizerParameters> m_storage;
} optional_4453896d;

typedef struct optional<unsigned int> {
    _Bool m_initialized;
    struct aligned_storage<unsigned int> m_storage;
} optional_fb00a7d4;

typedef struct optional<unsigned long> {
    _Bool m_initialized;
    struct aligned_storage<unsigned long> m_storage;
} optional_b6bb3987;

typedef struct pair<NSInputStream *, unsigned long> {
    NSInputStream *first;
    unsigned long long second;
} pair_2b0ed7ca;

typedef struct polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, std::vector, std::vector, std::allocator, std::allocator> {
    struct ring<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, vector, allocator> m_outer;
    struct vector<boost::geometry::model::ring<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, vector, allocator>, std::__1::allocator<boost::geometry::model::ring<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, vector, allocator>>> m_inners;
} polygon_fd6ad489;

typedef struct set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long>> {
    struct __tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} set_0f820a0b;

typedef struct shared_ptr<ITileDb> {
    struct ITileDb *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_00a9cfce;

typedef struct shared_ptr<TemporaryPath> {
    struct TemporaryPath *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_07b8d31d;

typedef struct shared_ptr<WifiScanStrategy> {
    struct WifiScanStrategy *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_2d79713b;

typedef struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    duration_673274cf __d_;
} time_point_e708cccf;

typedef struct unique_ptr<ScanInformation, std::__1::default_delete<ScanInformation>> {
    struct __compressed_pair<ScanInformation *, std::__1::default_delete<ScanInformation>> {
        struct ScanInformation *_field1;
    } _field1;
} unique_ptr_9116c12a;

typedef struct vector<int, std::__1::allocator<int>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *_field1;
    } _field3;
} vector_3203cf93;

typedef struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_7c0a1c0b *__begin_;
    basic_string_7c0a1c0b *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_7c0a1c0b *__value_;
    } __end_cap_;
} vector_ebb6ef3e;

typedef struct vector<std::__1::pair<NSInputStream *, unsigned long>, std::__1::allocator<std::__1::pair<NSInputStream *, unsigned long>>> {
    pair_2b0ed7ca *_field1;
    pair_2b0ed7ca *_field2;
    struct __compressed_pair<std::__1::pair<NSInputStream *, unsigned long>*, std::__1::allocator<std::__1::pair<NSInputStream *, unsigned long>>> {
        pair_2b0ed7ca *_field1;
    } _field3;
} vector_651a0b99;

typedef struct vector<std::__1::shared_ptr<ITileDb>, std::__1::allocator<std::__1::shared_ptr<ITileDb>>> {
    shared_ptr_00a9cfce *_field1;
    shared_ptr_00a9cfce *_field2;
    struct __compressed_pair<std::__1::shared_ptr<ITileDb>*, std::__1::allocator<std::__1::shared_ptr<ITileDb>>> {
        shared_ptr_00a9cfce *_field1;
    } _field3;
} vector_3062e1ff;

#pragma mark Named Unions

#if 0
// Names with conflicting types:
typedef union {
    char data[16];
    struct a8 aligner_;
} dummy_u_888b42fd;

typedef union {
    char data[48];
    struct a8 aligner_;
} dummy_u_c7808310;

typedef union {
    char data[4];
    struct a4 aligner_;
} dummy_u_b361318f;

typedef union {
    char data[8];
    struct a8 aligner_;
} dummy_u_ce8d0729;

#endif


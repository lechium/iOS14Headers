//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSMutableDictionary, NSString;
@protocol CarryLog_NANDDriver, StateMgr, TaskingManager;

@interface ASPCarryLogStateMachine : NSObject
{
    _Bool _isLegacyDaemonActive;	// 8 = 0x8
    _Bool _isInternal;	// 9 = 0x9
    NSString *_workDir;	// 16 = 0x10
    id <StateMgr> _stateMgr;	// 24 = 0x18
    NSMutableDictionary *_currentTaskingInfo;	// 32 = 0x20
    NSMutableArray *_taskingIdHistory;	// 40 = 0x28
    id <TaskingManager> _DATaskingMgr;	// 48 = 0x30
    NSString *_DATaskingID;	// 56 = 0x38
    long long _taskingDuration;	// 64 = 0x40
    long long _taskingSizeLimit;	// 72 = 0x48
    id <CarryLog_NANDDriver> _nandDriver;	// 80 = 0x50
}

- (void).cxx_destruct;	// IMP=0x000000010000c1bc
@property(retain, nonatomic) id <CarryLog_NANDDriver> nandDriver; // @synthesize nandDriver=_nandDriver;
@property _Bool isInternal; // @synthesize isInternal=_isInternal;
@property _Bool isLegacyDaemonActive; // @synthesize isLegacyDaemonActive=_isLegacyDaemonActive;
@property long long taskingSizeLimit; // @synthesize taskingSizeLimit=_taskingSizeLimit;
@property long long taskingDuration; // @synthesize taskingDuration=_taskingDuration;
@property(retain, nonatomic) NSString *DATaskingID; // @synthesize DATaskingID=_DATaskingID;
@property(retain, nonatomic) id <TaskingManager> DATaskingMgr; // @synthesize DATaskingMgr=_DATaskingMgr;
@property(retain, nonatomic) NSMutableArray *taskingIdHistory; // @synthesize taskingIdHistory=_taskingIdHistory;
@property(retain, nonatomic) NSMutableDictionary *currentTaskingInfo; // @synthesize currentTaskingInfo=_currentTaskingInfo;
@property(retain, nonatomic) id <StateMgr> stateMgr; // @synthesize stateMgr=_stateMgr;
@property(retain, nonatomic) NSString *workDir; // @synthesize workDir=_workDir;
- (void)bootCheck;	// IMP=0x000000010000be4c
- (void)dailyCheckWithStatsProvider:(id)arg1 UploadDriver:(id)arg2;	// IMP=0x000000010000ba64
- (void)_deleteUploadInfo;	// IMP=0x000000010000b8a8
- (void)_cleanUpWorkDir;	// IMP=0x000000010000b49c
- (void)_cleanUpAfterTasking;	// IMP=0x000000010000b378
- (void)_tryActivateTaskingPerDecisionServerDriver:(id)arg1;	// IMP=0x000000010000b004
- (_Bool)_canJoinTaskingPerStatsDriver:(id)arg1;	// IMP=0x000000010000ae10
- (void)_addDATaskingToHist;	// IMP=0x000000010000ac88
- (_Bool)_passDATaskingCriteria:(id)arg1;	// IMP=0x000000010000abe4
- (_Bool)_canInspectNewDATasking;	// IMP=0x000000010000ab90
- (void)_setNextTaskingInspectionMinTime;	// IMP=0x000000010000aae4
- (_Bool)_isAfterTaskingInspectionCoolDown;	// IMP=0x000000010000aa08
- (_Bool)_DATaskingNotInHist;	// IMP=0x000000010000a924
- (_Bool)_curTaskingMatchDATasking;	// IMP=0x000000010000a83c
- (_Bool)_activeTaskingExpired;	// IMP=0x000000010000a570
- (void)_unmarkCurrentTasking;	// IMP=0x000000010000a44c
- (void)_markDATaskingActive;	// IMP=0x000000010000a1dc
- (void)_markDATaskingDSReply_Pending;	// IMP=0x0000000100009fe4
- (_Bool)_hasPendingDSReplyTasking;	// IMP=0x0000000100009f60
- (_Bool)_hasActiveTasking;	// IMP=0x0000000100009edc
- (id)_getDeviceId;	// IMP=0x0000000100009e48
- (id)_genUniqueDeviceId;	// IMP=0x0000000100009b6c
- (void)_checkLegacyDaemon;	// IMP=0x0000000100009a90
- (_Bool)isLegacyPipelineActive;	// IMP=0x0000000100009a84
- (_Bool)isInternalBuild;	// IMP=0x0000000100009a78
- (void)unregisterIOLoggingXPC;	// IMP=0x0000000100009a74
- (void)registerIOLoggingXPCforInternalBuild:(_Bool)arg1;	// IMP=0x0000000100009a70
- (id)initWithStateManager:(id)arg1 TaskingManager:(id)arg2 NANDDriver:(id)arg3 WorkDirectory:(id)arg4;	// IMP=0x000000010000977c

@end


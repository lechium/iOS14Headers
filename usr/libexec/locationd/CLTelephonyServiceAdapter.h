//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "CLNotifierServiceAdapter.h"

#import "CLTelephonyServiceProtocol-Protocol.h"

@class NSString;

@interface CLTelephonyServiceAdapter : CLNotifierServiceAdapter <CLTelephonyServiceProtocol>
{
}

+ (id)getSilo;	// IMP=0x000000010017e0f4
+ (void)performSyncOnSilo:(id)arg1 invoker:(CDUnknownBlockType)arg2;	// IMP=0x000000010017e0d0
+ (void)becameFatallyBlocked:(id)arg1 index:(unsigned long long)arg2;	// IMP=0x000000010017e04c
+ (_Bool)isSupported;	// IMP=0x0000000100182360
- (void)sendNotificationToClients:(id)arg1 notificationData:(id)arg2;	// IMP=0x0000000100182324
- (_Bool)syncgetServingCdmaCell:(struct CdmaCell *)arg1;	// IMP=0x0000000100181f68
- (_Bool)syncgetServingGsmCell:(struct Cell *)arg1;	// IMP=0x0000000100181ed0
- (_Bool)syncgetServingCells:(struct vector<CLCell, std::__1::allocator<CLCell>> *)arg1 addNeighborCells:(_Bool)arg2;	// IMP=0x0000000100181db8
- (void)dumpLogWithReason:(id)arg1;	// IMP=0x0000000100181aec
- (void)resetModemWithReason:(id)arg1;	// IMP=0x0000000100181728
- (_Bool)syncgetSignalStrength:(int *)arg1;	// IMP=0x0000000100181494
- (_Bool)syncgetCopyPhoneNumber:(id *)arg1;	// IMP=0x0000000100181150
- (_Bool)syncgetCopyIMSI:(id *)arg1;	// IMP=0x0000000100180e1c
- (_Bool)syncgetCopyServingProviderFromCarrierBundle:(id *)arg1;	// IMP=0x0000000100180ae8
- (_Bool)syncgetCopyServingProvider:(id *)arg1;	// IMP=0x0000000100180a40
- (_Bool)syncgetCopyServingOperatorAbbreviated:(id *)arg1;	// IMP=0x0000000100180998
- (_Bool)syncgetCopyServingOperator:(id *)arg1;	// IMP=0x0000000100180664
- (_Bool)syncgetRefreshCellMonitor;	// IMP=0x000000010018056c
- (_Bool)syncgetActiveEmergencyCall:(_Bool *)arg1;	// IMP=0x00000001001801f0
- (_Bool)syncgetActiveCall:(_Bool *)arg1;	// IMP=0x00000001001801ac
- (_Bool)syncgetLastKnownServingMCC:(int *)arg1;	// IMP=0x0000000100180178
- (_Bool)syncgetLastKnownSubscriberMCC:(int *)arg1;	// IMP=0x000000010017fec0
- (int)syncgetCellTransmitStatus;	// IMP=0x000000010017fea0
- (int)syncgetRegistrationStatus;	// IMP=0x000000010017fd74
- (void)fetchSignalStrengthMeasurementsWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010017fd38
- (int)syncgetRadioAccessTechnology;	// IMP=0x000000010017fce8
- (_Bool)syncgetIsRegisteredOnCell;	// IMP=0x000000010017fcc4
- (_Bool)syncgetDetectedCells:(struct vector<CLCell, std::__1::allocator<CLCell>> *)arg1;	// IMP=0x000000010017f130
- (void)queryForCtclNotification:(const struct __CFString *)arg1;	// IMP=0x000000010017f0b4
- (void)fetchUmtsApnForInstance:(int)arg1 WithReply:(CDUnknownBlockType)arg2;	// IMP=0x000000010017f07c
- (void)fetchUmtsApnWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010017f04c
- (id)syncgetRegistrationInfoDictionary;	// IMP=0x000000010017eef4
- (_Bool)syncgetUplinkFrequency:(float *)arg1 andBandwidth:(float *)arg2;	// IMP=0x000000010017eeb4
- (void)disableWakeOnCellChange;	// IMP=0x000000010017edb8
- (void)enableWakeOnCellChange;	// IMP=0x000000010017eca4
- (void)assertCommCenter:(int)arg1 with:(int)arg2;	// IMP=0x000000010017eaf8
- (_Bool)syncgetCampOnlyState;	// IMP=0x000000010017e7bc
- (void)requestCamping:(_Bool)arg1;	// IMP=0x000000010017e690
- (void)fetchActiveOrHeldWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010017e3d0
- (void)fetchIsCellAvailableWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010017e390
- (_Bool)syncgetDoSync:(CDUnknownBlockType)arg1;	// IMP=0x000000010017e354
- (void)doAsync:(CDUnknownBlockType)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x000000010017e310
- (void)doAsync:(CDUnknownBlockType)arg1;	// IMP=0x000000010017e2dc
- (struct CLTelephonyService *)adaptee;	// IMP=0x000000010017e2a0
- (void)endService;	// IMP=0x000000010017e27c
- (void)beginService;	// IMP=0x000000010017e1b0
- (id)init;	// IMP=0x000000010017e16c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(nonatomic) _Bool valid;

@end


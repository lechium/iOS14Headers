//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class APMescalSigningSettings, APUnfairLock, NSMutableData, NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface APMescalSigningService : NSObject
{
    unsigned int _version;	// 8 = 0x8
    double _setupStartTime;	// 16 = 0x10
    long long _state;	// 24 = 0x18
    NSMutableData *_certificateData;	// 32 = 0x20
    NSMutableDictionary *_requestsWhileInitializing;	// 40 = 0x28
    APUnfairLock *_syncRequestsLock;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_setupQueue;	// 56 = 0x38
    struct FPSAPContextOpaque_ *_session;	// 64 = 0x40
    APMescalSigningSettings *_mescalSigningSettings;	// 72 = 0x48
    struct FairPlayHWInfo_ _hwInfo;	// 80 = 0x50
}

+ (id)service;	// IMP=0x000000010003f55c
- (void).cxx_destruct;	// IMP=0x0000000100041a58
@property(retain, nonatomic) APMescalSigningSettings *mescalSigningSettings; // @synthesize mescalSigningSettings=_mescalSigningSettings;
@property struct FairPlayHWInfo_ hwInfo; // @synthesize hwInfo=_hwInfo;
@property struct FPSAPContextOpaque_ *session; // @synthesize session=_session;
@property unsigned int version; // @synthesize version=_version;
@property(retain) NSObject<OS_dispatch_queue> *setupQueue; // @synthesize setupQueue=_setupQueue;
@property(readonly, nonatomic) APUnfairLock *syncRequestsLock; // @synthesize syncRequestsLock=_syncRequestsLock;
@property(retain) NSMutableDictionary *requestsWhileInitializing; // @synthesize requestsWhileInitializing=_requestsWhileInitializing;
@property(retain) NSMutableData *certificateData; // @synthesize certificateData=_certificateData;
@property long long state; // @synthesize state=_state;
@property double setupStartTime; // @synthesize setupStartTime=_setupStartTime;
- (void)setupNegotiationStepDidFinish:(id)arg1 certificateIsCached:(_Bool)arg2 error:(id)arg3;	// IMP=0x0000000100041758
- (void)certificateRetrievalDidFinish:(id)arg1 error:(id)arg2;	// IMP=0x00000001000414ec
- (void)fairPlaySAPExchange:(id)arg1 certificateIsCached:(_Bool)arg2;	// IMP=0x0000000100040e7c
- (void)requestCertificate;	// IMP=0x0000000100040d30
- (void)setupRequestSigningWithCachedCertificate:(_Bool)arg1;	// IMP=0x0000000100040a84
- (void)retrySetup;	// IMP=0x0000000100040944
- (void)dealloc;	// IMP=0x00000001000408e0
- (_Bool)initializeFairPlay;	// IMP=0x00000001000406e8
- (void)queueSignatureRequest:(id)arg1 waitTime:(double)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000401e0
- (void)signatureForData:(id)arg1 waitTime:(double)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000400e8
- (id)signatureForData:(id)arg1 error:(id *)arg2;	// IMP=0x000000010003fd18
- (_Bool)signatureIsValid:(id)arg1 data:(id)arg2 error:(id *)arg3;	// IMP=0x000000010003f788
- (void)start;	// IMP=0x000000010003f6c8
- (id)init;	// IMP=0x000000010003f5e0

@end


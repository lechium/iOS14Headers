//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "NSObject-Protocol.h"

@class NSDictionary, NSString, WAMessage, WAMessageAWD, WAXPCConnection;

@protocol WAXPCConnectionDelegate <NSObject>
- (void)xpcConnection:(WAXPCConnection *)arg1 summarizeDeviceAnalyticsForNetwork:(NSString *)arg2 maxAgeInDays:(unsigned long long)arg3 andReply:(void (^)(id, NSError *))arg4;
- (void)xpcConnection:(WAXPCConnection *)arg1 getDeviceAnalyticsConfigurationAndReply:(void (^)(id, NSError *))arg2;
- (void)xpcConnection:(WAXPCConnection *)arg1 setDeviceAnalyticsConfiguration:(NSDictionary *)arg2 andReply:(void (^)(id, NSError *))arg3;
- (void)xpcConnection:(WAXPCConnection *)arg1 trigger11axPerfStudyAndReply:(void (^)(id, NSError *))arg2;
- (void)xpcConnection:(WAXPCConnection *)arg1 trapCrashMiniTracerDumpReadyForInterfaceWithName:(NSString *)arg2 andReply:(void (^)(id, NSError *))arg3;
- (void)xpcConnection:(WAXPCConnection *)arg1 clearMessageStoreAndReply:(void (^)(id, NSError *))arg2;
- (void)xpcConnection:(WAXPCConnection *)arg1 killDaemonAndReply:(void (^)(id, NSError *))arg2;
- (void)xpcConnection:(WAXPCConnection *)arg1 triggerDatapathDiagnosticsAndCollectUpdates:(long long)arg2 waMessage:(WAMessageAWD *)arg3 andReply:(void (^)(id, NSError *))arg4;
- (void)xpcConnection:(WAXPCConnection *)arg1 triggerQueryForNWActivity:(long long)arg2 andReply:(void (^)(id, NSError *))arg3;
- (void)xpcConnection:(WAXPCConnection *)arg1 clientConfigChangeDelegateSetForGroupType:(long long)arg2 andReply:(void (^)(id, NSError *))arg3;
- (void)xpcConnection:(WAXPCConnection *)arg1 registerForQueryableMessageWithidentifierDict:(NSDictionary *)arg2 groupType:(long long)arg3 andReply:(void (^)(id, NSError *))arg4;
- (void)xpcConnection:(WAXPCConnection *)arg1 ingestMessage:(WAMessageAWD *)arg2 andReply:(void (^)(id, NSError *))arg3;
- (void)xpcConnection:(WAXPCConnection *)arg1 submitWiFiAnalyticsMessage:(WAMessage *)arg2 andReply:(void (^)(id, NSError *))arg3;
- (void)xpcConnection:(WAXPCConnection *)arg1 submitMessage:(WAMessageAWD *)arg2 groupType:(long long)arg3 andReply:(void (^)(id, NSError *))arg4;
- (void)xpcConnection:(WAXPCConnection *)arg1 getMessagesModelForGroupType:(long long)arg2 andReply:(void (^)(id, NSError *))arg3;
- (void)xpcConnection:(WAXPCConnection *)arg1 getNewMessageForKey:(NSString *)arg2 groupType:(long long)arg3 andReply:(void (^)(id, NSError *))arg4;
- (void)xpcConnection:(WAXPCConnection *)arg1 getMessageForUUID:(NSString *)arg2 andReply:(void (^)(id, NSError *))arg3;
- (void)xpcConnection:(WAXPCConnection *)arg1 registerMessageGroup:(long long)arg2 andReply:(void (^)(id, NSError *))arg3;
- (void)xpcConnection:(WAXPCConnection *)arg1 establishConnectionWithToken:(NSString *)arg2 andReply:(void (^)(id, NSError *))arg3;
@end


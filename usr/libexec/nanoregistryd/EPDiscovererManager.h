//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "CBCentralManagerDelegate-Protocol.h"
#import "CBCentralManagerPrivateDelegate-Protocol.h"
#import "EPDeviceCollectionDelegate-Protocol.h"
#import "EPResourceOwnerDelegate-Protocol.h"

@class EPCentralManager, EPDeviceCollection, NRPowerAssertionActivity, NSArray, NSDate, NSPointerArray, NSString;
@protocol OS_dispatch_source;

@interface EPDiscovererManager : NSObject <CBCentralManagerDelegate, CBCentralManagerPrivateDelegate, EPDeviceCollectionDelegate, EPResourceOwnerDelegate>
{
    EPCentralManager *_central;	// 8 = 0x8
    _Bool _isScanning;	// 16 = 0x10
    NSPointerArray *_discoverers;	// 24 = 0x18
    long long _pairingFailures;	// 32 = 0x20
    unsigned long long _newBluetoothState;	// 40 = 0x28
    unsigned long long _bluetoothState;	// 48 = 0x30
    NSObject<OS_dispatch_source> *_currentTimer;	// 56 = 0x38
    _Bool _wasNeedingDiscovering;	// 64 = 0x40
    long long _discoveryCounter;	// 72 = 0x48
    double _discoveryStartTime;	// 80 = 0x50
    struct __CFRunLoopSource *_alertRunLoopSource;	// 88 = 0x58
    struct __CFUserNotification *_alert;	// 96 = 0x60
    NSDate *_ttrDate;	// 104 = 0x68
    double _ttrDuration;	// 112 = 0x70
    NRPowerAssertionActivity *_powerAssertion;	// 120 = 0x78
    _Bool _scanForProximity;	// 128 = 0x80
    NSArray *_discoverDeviceUUIDs;	// 136 = 0x88
    EPDeviceCollection *_deviceCollection;	// 144 = 0x90
}

- (void).cxx_destruct;	// IMP=0x0000000100051d38
@property(readonly, nonatomic) EPDeviceCollection *deviceCollection; // @synthesize deviceCollection=_deviceCollection;
@property(nonatomic) _Bool scanForProximity; // @synthesize scanForProximity=_scanForProximity;
@property(retain, nonatomic) NSArray *discoverDeviceUUIDs; // @synthesize discoverDeviceUUIDs=_discoverDeviceUUIDs;
- (void)collectionPairingSuccess:(id)arg1;	// IMP=0x0000000100051d08
- (void)collectionPairingFailure:(id)arg1;	// IMP=0x0000000100051cdc
- (void)collection:(id)arg1 deviceInfoDidDealloc:(id)arg2;	// IMP=0x0000000100051b7c
- (void)collection:(id)arg1 deviceDidBecomeUnproximate:(id)arg2;	// IMP=0x0000000100051a1c
- (void)collection:(id)arg1 deviceDidBecomeUndisplayable:(id)arg2;	// IMP=0x00000001000518bc
- (void)collection:(id)arg1 deviceDidDisappear:(id)arg2;	// IMP=0x000000010005174c
- (void)collection:(id)arg1 deviceDidUpdate:(id)arg2;	// IMP=0x00000001000515ec
- (void)collection:(id)arg1 deviceDidBecomeProximate:(id)arg2;	// IMP=0x000000010005148c
- (void)collection:(id)arg1 deviceDidBecomeDisplayable:(id)arg2;	// IMP=0x000000010005132c
- (void)collection:(id)arg1 deviceDidAppear:(id)arg2;	// IMP=0x00000001000511cc
- (void)centralManager:(id)arg1 didDiscoverPeripheral:(id)arg2 advertisementData:(id)arg3 RSSI:(id)arg4;	// IMP=0x0000000100051064
- (void)centralManagerDidUpdateState:(id)arg1;	// IMP=0x0000000100051060
- (void)resourceAvailabilityDidChange:(id)arg1;	// IMP=0x0000000100051054
- (void)recordButtonPress:(unsigned long long)arg1;	// IMP=0x0000000100050c98
- (void)alertResponseWithResponseFlags:(unsigned long long)arg1;	// IMP=0x0000000100050be4
- (void)_dismissBluetoothAlert;	// IMP=0x0000000100050a8c
- (void)dismissBluetoothAlert;	// IMP=0x0000000100050a24
- (void)presentBluetoothAlert;	// IMP=0x0000000100050648
- (void)removeDiscoverer:(id)arg1;	// IMP=0x000000010005063c
- (void)notifyDelegateOfBluetoothSuccess;	// IMP=0x00000001000504fc
- (void)notifyDelegateOfPossibleBluetoothFailure;	// IMP=0x00000001000503bc
- (void)update;	// IMP=0x000000010004faac
- (void)clear;	// IMP=0x000000010004fa9c
- (id)newDiscovererWithDelegate:(id)arg1;	// IMP=0x000000010004f9ac
- (id)init;	// IMP=0x000000010004f834
- (id)devicesDictionary;	// IMP=0x000000010004f824
- (void)_setTimerDuration:(double)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010004f69c
- (void)cancelDiscoveryCounter;	// IMP=0x000000010004f3d0
- (void)clearAndStartDiscoveryCounter;	// IMP=0x000000010004f238

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


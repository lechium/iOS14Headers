/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:52:45 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /usr/lib/libBKDM1.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libBKDM1.dylib/libBKDM1.dylib-Structs.h>
#import <BiometricSupport/BiometricKitXPCServer.h>
#import <libobjc.A.dylib/CMWakeGestureDelegate.h>
#import <libobjc.A.dylib/NSXPCListenerDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class NSMutableDictionary, NSMutableData, NSDate, NSObject, MesaCoreAnalytics, NSString, CMWakeGestureManager, NSMutableArray, BioLog;

@interface BiometricKitXPCServerMesa : BiometricKitXPCServer <CMWakeGestureDelegate, NSXPCListenerDelegate> {

	unsigned _services;
	unsigned _connect;
	unsigned _status;
	unsigned short _commProtocolVersion;
	NSMutableDictionary* _cachedImageDB;
	BOOL _showDebugImages;
	NSMutableData* _templListCache;
	long long _enrollmentCount;
	NSDate* _currentDate;
	NSObject*<OS_dispatch_queue> _hidClientQueue;
	IOHIDEventSystemClientRef _hidClient;
	MesaCoreAnalytics* _statistics;
	SCD_Struct_Bi3 _sensorInfo;
	BOOL _enableMultiCatacombs;
	BOOL _loadCatacombMap;
	NSString* _catacombFileName;
	BOOL _blockHomeButton;
	CMWakeGestureManager* _wakeGestureManager;
	BOOL _autoMatchStartedByHomeButton;
	BOOL _wakeOnMenuPinEnabled;
	BOOL _fingerIsOn;
	BOOL _hidEventFilterCallbackRegistered;
	int _lastSBFingerMsg;
	int _lastSBLockMsg;
	NSMutableArray* _vibrationPatterns;
	BioLog* _log;
	unsigned long long _loggingType;
	NSObject*<OS_dispatch_source> _sigTERMDispatchSource;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)getSysCfgCalibrationData;
-(id)getLogs:(BOOL)arg1 withDetails:(id*)arg2 ;
-(long long)getCalBlobVersion;
-(BOOL)fileRadarWithLogs:(id)arg1 withDescription:(id)arg2 ;
-(int)saveTemplateListSU:(BOOL)arg1 ;
-(id)pullCaptureBufferWithClient:(id)arg1 ;
-(int)performGetSystemProtectedConfigCommand:(id*)arg1 ;
-(int)initAutoBugCapture;
-(void)templateUpdateMessage:(SCD_Struct_Bi9*)arg1 ;
-(int)performGetLastMatchEventCommand:(SCD_Struct_Bi10*)arg1 ;
-(int)performGetTemplatesValidityCommand:(unsigned)arg1 isValid:(BOOL*)arg2 ;
-(id)identities:(id)arg1 withClient:(id)arg2 ;
-(int)initEnrollOperation:(id)arg1 biometricType:(int)arg2 userID:(unsigned)arg3 options:(id)arg4 client:(id)arg5 ;
-(int)initMatchOperation:(id)arg1 filter:(id)arg2 options:(id)arg3 client:(id)arg4 ;
-(id)getCalibrationDataInfoWithClient:(id)arg1 ;
-(void)statisticsMessage:(SCD_Struct_Bi11*)arg1 ;
-(BOOL)templatesExistAtBoot;
-(int)unarchiveCatacombDataForComponent:(id)arg1 fromUnarchiver:(id)arg2 secureData:(id*)arg3 identities:(id*)arg4 ;
-(void)timestampEvent:(unsigned long long)arg1 absoluteTime:(unsigned long long)arg2 ;
-(int)cachePatch;
-(void)matchResult:(id)arg1 timestamp:(unsigned long long)arg2 ;
-(void)dumpSyslogWithDelay:(double)arg1 ;
-(BOOL)isXARTAvailableWithClient:(id)arg1 ;
-(BOOL)isFingerOnWithClient:(id)arg1 ;
-(id)getModuleSerialNumber;
-(int)performRemoveIdentityCommand:(SCD_Struct_Bi0*)arg1 ;
-(int)performCompleteSaveCatacombCommand:(id)arg1 outBuffer:(id)arg2 ;
-(id)getSyslog;
-(int)performPrepareSaveCatacombCommand:(id)arg1 outDataSize:(unsigned*)arg2 ;
-(int)restoreTemplateListSU;
-(int)performRequestMaxIdentityCountCommand:(unsigned*)arg1 ;
-(void)updateBioLogState;
-(void)dealloc;
-(int)performCancelCommand;
-(int)setDebugImages:(BOOL)arg1 withClient:(id)arg2 ;
-(unsigned long long)getLoggingType;
-(int)cancelWithClient:(id)arg1 ;
-(int)performGetBiometrickitdInfoCommand:(SCD_Struct_Bi12*)arg1 ;
-(id)getFDRCalibrationData;
-(void)notifyAppIsInactive:(BOOL)arg1 withClient:(id)arg2 ;
-(void)enrollResult:(id)arg1 withTimestamp:(unsigned long long)arg2 ;
-(int)performGetSKSLockStateCommand:(unsigned)arg1 outState:(unsigned*)arg2 ;
-(int)getCatacombSaveListForComponents:(id)arg1 list:(id*)arg2 ;
-(int)getDataFromDriverCommand:(unsigned char)arg1 value:(unsigned char)arg2 data:(char*)arg3 size:(unsigned long long)arg4 ;
-(void)registerForLiftToWakeNotifications:(BOOL)arg1 ;
-(int)loadCalibrationData;
-(void)clearTemplateList;
-(int)performLoadBioLockoutRecordCommand:(id)arg1 ;
-(int)restoreAndSyncTemplates;
-(int)performDisplayStatusChangedCommand:(BOOL)arg1 ;
-(int)performCommand:(unsigned short)arg1 inValue:(unsigned short)arg2 inData:(const void*)arg3 inSize:(unsigned long long)arg4 outData:(char*)arg5 outSize:(unsigned long long*)arg6 ;
-(int)getCountersignedStoreToken:(id*)arg1 withClient:(id)arg2 ;
-(id)pullCalibrationDataWithClient:(id)arg1 ;
-(id)getSystemProtectedConfigurationWithClient:(id)arg1 ;
-(void)vibrate:(long long)arg1 ;
-(void)updateImageDB:(id)arg1 templateUpdateInfo:(const SCD_Struct_Bi9*)arg2 ;
-(id)getProtectedConfigurationForUser:(unsigned)arg1 withClient:(id)arg2 ;
-(void)deleteUnusedCatacombFiles;
-(void)homeButtonPressed;
-(int)resetAppleConnectCounterWithClient:(id)arg1 ;
-(int)resetSensor;
-(int)performConfirmSaveCatacombCommand:(id)arg1 ;
-(void)disableHomeButton:(BOOL)arg1 ;
-(int)getLastMatchEvent:(id*)arg1 withClient:(id)arg2 ;
-(int)loadCatacomb;
-(id)getRemoteFDRCalibrationData;
-(BOOL)shouldFilterStatusForSB:(unsigned)arg1 ;
-(id)init;
-(void)registerDelegate:(BOOL)arg1 withClient:(id)arg2 ;
-(int)removeAllIdentitiesForUser:(unsigned)arg1 withOptions:(id)arg2 withClient:(id)arg3 ;
-(int)performSetSystemProtectedConfigCommand:(id)arg1 authData:(SCD_Struct_Bi1*)arg2 ;
-(long long)getCalibrationDataState;
-(int)removeIdentity:(id)arg1 withOptions:(id)arg2 withClient:(id)arg3 ;
-(int)diagnostics:(int)arg1 withOptions:(id)arg2 passed:(BOOL*)arg3 withDetails:(id*)arg4 withClient:(id)arg5 ;
-(int)performGetCatacombHashCommand:(unsigned)arg1 outHash:(id*)arg2 ;
-(int)forceBioLockoutForUser:(unsigned)arg1 withOptions:(id)arg2 withClient:(id)arg3 ;
-(id)getIdentityFromUUID:(id)arg1 withClient:(id)arg2 ;
-(int)setSystemProtectedConfiguration:(id)arg1 withOptions:(id)arg2 withClient:(id)arg3 ;
-(void)wakeGestureManager:(id)arg1 didUpdateWakeGesture:(long long)arg2 ;
-(int)getCommProtocolVersion;
-(int)setProtectedConfiguration:(id)arg1 forUser:(unsigned)arg2 withOptions:(id)arg3 withClient:(id)arg4 ;
-(id)pullAlignmentData;
-(long long)getSensorCalibrationStatusWithClient:(id)arg1 ;
-(int)setAppleMesaSEPLoggingLevel;
-(int)setUserDSID:(unsigned long long)arg1 withOptions:(id)arg2 withClient:(id)arg3 ;
-(int)performRemoveUserDataCommand:(unsigned)arg1 ;
-(id)getSyslogForQuery:(asl_object_sRef)arg1 withFilter:(/*^block*/id)arg2 ;
-(id)getNodeTopologyForIdentity:(id)arg1 withClient:(id)arg2 ;
-(void)clearTemplateListForUser:(unsigned)arg1 ;
-(int)getTimestampCollection:(SCD_Struct_Bi14*)arg1 ;
-(int)performForceBioLockoutCommand:(unsigned)arg1 ;
-(int)dropUnlockTokenWithClient:(id)arg1 ;
-(id)getSyslogArray;
-(void)disconnectingClient:(id)arg1 ;
-(void)addIdentityObjects:(id)arg1 ;
-(int)setIORegistryProperty:(id)arg1 toValue:(id)arg2 onService:(id)arg3 ;
-(id)pullDebugImageData:(BOOL)arg1 rotated:(BOOL)arg2 hasWidth:(unsigned*)arg3 hasHeight:(unsigned*)arg4 withClient:(id)arg5 ;
-(int)getBiometryAvailability:(long long*)arg1 forUser:(unsigned)arg2 withClient:(id)arg3 ;
-(id)getEEPROMCalibrationData;
-(void)statusMessage:(unsigned)arg1 withData:(id)arg2 timestamp:(unsigned long long)arg3 ;
-(int)enroll:(int)arg1 forUser:(unsigned)arg2 withOptions:(id)arg3 withClient:(id)arg4 ;
-(id)getSensorInfoWithClient:(id)arg1 ;
-(BOOL)getEnabledForUnlock;
-(int)performGetIdentitiesListCommand:(unsigned)arg1 outBuffer:(id)arg2 ;
-(int)saveCatacombForIdentity:(id)arg1 ;
-(float)getModulationRatio;
-(id)pullMatchPolicyInfoData;
-(int)performDropUnlockTokenCommand;
-(id)getIdentitiesDatabaseUUIDForUser:(unsigned)arg1 withClient:(id)arg2 ;
-(int)enableBackgroundFdet:(BOOL)arg1 withClient:(id)arg2 ;
-(int)performLoadCatacombCommand:(id)arg1 inData:(id)arg2 ;
-(int)performCommand:(unsigned short)arg1 version:(unsigned short)arg2 inValue:(unsigned short)arg3 inData:(const void*)arg4 inSize:(unsigned long long)arg5 outData:(char*)arg6 outSize:(unsigned long long*)arg7 ;
-(int)decodeCatacombDataV1:(char*)arg1 withSize:(unsigned long long)arg2 ;
-(int)restoreCatacombMap;
-(id)createMatchOperation;
-(id)getSerialisedTemplatesForUser:(unsigned)arg1 ;
-(int)registerDSID:(unsigned long long)arg1 withOptions:(id)arg2 withClient:(id)arg3 ;
-(void)removeIdentityObject:(id)arg1 ;
-(int)setCalibrationData:(id)arg1 source:(int)arg2 ;
-(int)performMatchCommand:(id)arg1 ;
-(unsigned long long)getSensorType;
-(int)performGetCatacombUUIDCommand:(unsigned)arg1 outUUID:(id*)arg2 ;
-(int)performRequestMessageDataCommand:(unsigned long long)arg1 size:(unsigned long long)arg2 outData:(id*)arg3 ;
-(int)archiveCatacombDataForComponent:(id)arg1 toArchiver:(id)arg2 ;
-(int)detectPresenceWithOptions:(id)arg1 withClient:(id)arg2 ;
-(int)saveCatacomb;
-(int)getBioLockoutState:(long long*)arg1 forUser:(unsigned)arg2 withClient:(id)arg3 ;
-(int)enrollContinue;
-(void)sendStatusMessage:(unsigned)arg1 toClient:(id)arg2 ;
-(id)getIdentitiesDatabaseHashForUser:(unsigned)arg1 withClient:(id)arg2 ;
-(long long)getProvisioningStateWithClient:(id)arg1 ;
-(int)saveCatacombMap;
-(void)matchEventMessage:(SCD_Struct_Bi10*)arg1 ;
-(int)match:(id)arg1 withOptions:(id)arg2 withClient:(id)arg3 ;
-(int)registerStoreToken:(id)arg1 withClient:(id)arg2 ;
-(long long)getMaxIdentityCount:(int)arg1 withClient:(id)arg2 ;
-(long long)getFreeIdentityCount:(int)arg1 forUser:(unsigned)arg2 withClient:(id)arg3 ;
-(int)performPresenceDetectCommand:(id)arg1 ;
-(int)cacheSensorInfo;
-(int)serviceStatus:(unsigned)arg1 version:(unsigned)arg2 ordinal:(unsigned long long)arg3 data:(id)arg4 timestamp:(unsigned long long)arg5 ;
-(int)performSaveBioLockoutRecordCommand:(id)arg1 ;
-(int)performNoCatacombCommand:(unsigned)arg1 ;
-(void)cacheImageDB:(SCD_Struct_Bi5*)arg1 ;
-(int)performEnrollCommand:(id)arg1 ;
-(int)performSetProtectedConfigCommand:(unsigned)arg1 cfg:(id)arg2 authData:(SCD_Struct_Bi1*)arg3 ;
-(int)performGetFreeIdentityCountCommand:(unsigned)arg1 outCount:(unsigned*)arg2 ;
-(int)performGetCatacombStateCommand:(id)arg1 ;
-(long long)getEnrollmentCount;
-(int)performGetProtectedConfigCommand:(unsigned)arg1 outSetCfg:(id*)arg2 outEffectiveCfg:(id*)arg3 ;
-(void)dumpSyslog;
-(int)updateIdentity:(id)arg1 withOptions:(id)arg2 withClient:(id)arg3 ;
-(void)touchIDButtonPressed:(BOOL)arg1 ;
@end


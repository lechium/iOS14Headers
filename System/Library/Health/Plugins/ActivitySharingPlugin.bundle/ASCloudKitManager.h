/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:33:15 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Health/Plugins/ActivitySharingPlugin.bundle/ActivitySharingPlugin
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/APSConnectionDelegate.h>
#import <libobjc.A.dylib/ASActivitySharingManagerReadyObserver.h>

@protocol OS_dispatch_queue, OS_dispatch_source, OS_dispatch_group;
@class ASActivitySharingManager, ASContactsManager, NSObject, APSConnection, CKShare, NSHashTable, ASNotificationStep, NSArray, ASCloudKitServerChangeTokenCache, NSDictionary, HDDaemonTransaction, ASCloudKitUtility, CKContainer, NSDate, NSString;

@interface ASCloudKitManager : NSObject <APSConnectionDelegate, ASActivitySharingManagerReadyObserver> {

	ASActivitySharingManager* _activitySharingManager;
	ASContactsManager* _contactsManager;
	NSObject*<OS_dispatch_queue> _serialQueue;
	NSObject*<OS_dispatch_queue> _observerQueue;
	NSObject*<OS_dispatch_queue> _changeTokenQueue;
	APSConnection* _apsConnection;
	CKShare* _activityDataShare;
	NSHashTable* _observers;
	ASNotificationStep* _relationshipNotificationStep;
	ASNotificationStep* _remoteRelationshipNotificationStep;
	ASNotificationStep* _privateDatabaseActivitySnapshotNotificationStep;
	ASNotificationStep* _activitySnapshotNotificationStep;
	ASNotificationStep* _workoutNotificationStep;
	ASNotificationStep* _achievementNotificationStep;
	ASNotificationStep* _notificationEventNotificationStep;
	ASNotificationStep* _privateDatabaseCompetitionNotificationStep;
	ASNotificationStep* _competitionNotificationStep;
	BOOL _pushNotificationRecieved;
	unsigned long long _currentFetchPriority;
	BOOL _subscriptionNotificationWasReceivedDuringCurrentFetch;
	NSArray* _blocksWaitingOnFetch;
	ASCloudKitServerChangeTokenCache* _serverChangeTokenCache;
	long long _cloudKitAccountStatus;
	NSObject*<OS_dispatch_source> _newAccountTasksTimer;
	NSDictionary* _friendUUIDsByZoneID;
	NSHashTable* _observersNotReady;
	NSObject*<OS_dispatch_group> _observersNotReadyGroup;
	HDDaemonTransaction* _fetchTransaction;
	BOOL _hasCompletedFirstFetch;
	BOOL _readyForOperations;
	ASCloudKitUtility* _cloudKitUtility;
	CKContainer* _container;
	NSDate* _dateOfLastSuccessfulFetch;

}

@property (nonatomic,retain) ASCloudKitUtility * cloudKitUtility;              //@synthesize cloudKitUtility=_cloudKitUtility - In the implementation block
@property (nonatomic,retain) CKContainer * container;                          //@synthesize container=_container - In the implementation block
@property (nonatomic,retain) NSDate * dateOfLastSuccessfulFetch;               //@synthesize dateOfLastSuccessfulFetch=_dateOfLastSuccessfulFetch - In the implementation block
@property (assign) BOOL readyForOperations;                                    //@synthesize readyForOperations=_readyForOperations - In the implementation block
@property (nonatomic,readonly) BOOL hasCompletedFirstFetch;                    //@synthesize hasCompletedFirstFetch=_hasCompletedFirstFetch - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)relationshipZone;
+(id)activityDataRecordZoneID;
+(id)activityDataRootRecordID;
+(id)_activityDataShareRecordID;
+(id)shareURLForShare:(id)arg1 ;
-(void)connection:(id)arg1 didReceivePublicToken:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveToken:(id)arg2 forTopic:(id)arg3 identifier:(id)arg4 ;
-(void)connection:(id)arg1 didReceiveIncomingMessage:(id)arg2 ;
-(void)addObserver:(id)arg1 ;
-(void)setContainer:(CKContainer *)arg1 ;
-(void)removeObserver:(id)arg1 ;
-(void)dealloc;
-(void)fetchCloudKitAccountStatusWithCompletion:(/*^block*/id)arg1 ;
-(id)init;
-(void)expireChangeTokenWithCompletion:(/*^block*/id)arg1 ;
-(CKContainer *)container;
-(void)forceSaveRecordsIntoPrivateDatabaseIgnoringServerChanges:(id)arg1 recordIDsToDelete:(id)arg2 priority:(long long)arg3 activity:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)activitySharingManagerReady:(id)arg1 ;
-(void)fetchShareParticipantWithCloudKitAddress:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)fetchOrCreateActivityDataShareWithCompletion:(/*^block*/id)arg1 ;
-(void)fetchAllChangesWithPriority:(long long)arg1 activity:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)saveRecordsIntoPrivateDatabase:(id)arg1 priority:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)fetchCloudKitAddressWithCompletion:(/*^block*/id)arg1 ;
-(void)removeParticpantWithCloudKitAddress:(id)arg1 fromShares:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)fetchShareWithShareRecordID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)createShareWithRootRecord:(id)arg1 otherRecordsToSave:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)addParticipantWithCloudKitAddress:(id)arg1 toShares:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)acceptSharesWithURLs:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)hasCompletedFirstFetch;
-(void)setReadyForOperations:(BOOL)arg1 ;
-(void)_createNotificationSteps;
-(void)_queue_pushDisable;
-(void)setCloudKitUtility:(ASCloudKitUtility *)arg1 ;
-(void)_cloudKitAccountStatusChanged:(id)arg1 ;
-(void)_fetchCloudKitAccountStatusAndNotifyOfChanges;
-(void)_queue_pushEnable;
-(ASCloudKitUtility *)cloudKitUtility;
-(BOOL)readyForOperations;
-(void)_createActivityDataShareWithCompletion:(/*^block*/id)arg1 ;
-(void)_queue_callFetchCompletionBlocksWithSuccess:(BOOL)arg1 error:(id)arg2 ;
-(void)_handleNewPrivateDatabaseRecordChanges:(id)arg1 sharedDatabaseRecordChanges:(id)arg2 fetchType:(long long)arg3 ;
-(void)_fetchAllChangesWithPriority:(long long)arg1 activity:(id)arg2 ;
-(void)_queue_setHasCompletedFirstFetch:(BOOL)arg1 ;
-(void)setDateOfLastSuccessfulFetch:(NSDate *)arg1 ;
-(void)_queue_startFetchAllChangesOperationWithPriority:(long long)arg1 activity:(id)arg2 changeTokenCache:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_performBlockWhenAllObserversBecomeReady:(/*^block*/id)arg1 ;
-(void)_queue_cancelAllExecutingFetches;
-(void)_fetchAllChangesWithPriority:(long long)arg1 activity:(id)arg2 completion:(/*^block*/id)arg3 ;
-(NSDate *)dateOfLastSuccessfulFetch;
-(void)_subscribeToChangesInDatabase:(id)arg1 subscriptionPrefix:(id)arg2 recordTypes:(id)arg3 recordTypesToDelete:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)_subscribeToChangesInSharedDatabaseWithCompletion:(/*^block*/id)arg1 ;
-(void)_subscribeToChangesInPrivateDatabaseWithCompletion:(/*^block*/id)arg1 ;
-(void)_handleIncomingNotification:(id)arg1 ;
-(id)_queue_apsEnvironmentString;
-(void)_verifyOrCreateSubscriptionsWithCompletion:(/*^block*/id)arg1 ;
-(void)_cancelNewAccountTasksTimer;
-(void)_saveCloudKitAddressToKeyValueStore;
-(void)_performAndRetryNewAccountTasksWithRetryInterval:(double)arg1 shouldCreateSubscriptions:(BOOL)arg2 shouldFetch:(BOOL)arg3 ;
-(void)_performNewAccountTasksCreatingSubscriptions:(BOOL)arg1 fetching:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)_fetchCloudKitAddressWithCompletion:(/*^block*/id)arg1 ;
-(void)_handleAccountStatusChange:(long long)arg1 ;
-(BOOL)_queue_isLastCloudKitAddressDifferentFromNewCloudKitAddress:(id)arg1 ;
-(void)_performAndRetryNewAccountTasksIfNecessaryWithShouldCreateSubscriptions:(BOOL)arg1 shouldFetch:(BOOL)arg2 ;
-(void)_queue_clearChangeTokenCacheAndFriendListWithCompletion:(/*^block*/id)arg1 ;
-(void)_queue_notifyObserversOfStatusChanged;
-(id)_observerQueue_friendUUIDForActivityDataShareRecordZoneID:(id)arg1 ;
-(void)_observerQueue_notifyObserversOfBeginUpdatesForFetchWithType:(long long)arg1 ;
-(void)_observerQueue_clearFriendUUIDByZoneIDCache;
-(void)_observerQueue_performNotificationStep:(id)arg1 onRecords:(id)arg2 dispatchGroup:(id)arg3 ;
-(void)_observerQueue_notifyObserversOfEndUpdatesForFetchWithType:(long long)arg1 ;
-(void)beginHandlingOperations;
-(void)endHandlingOperations;
-(void)fetchAllChangesIfTimeSinceLastFetchIsGreaterThan:(unsigned long long)arg1 priority:(long long)arg2 activity:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)setHasCompletedFirstFetch:(BOOL)arg1 ;
-(void)observerDidBecomeReadyToProcessChanges:(id)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:53:35 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/UserNotificationsUI.framework/UserNotificationsUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UserNotificationsUI/UserNotificationsUI-Structs.h>
#import <Foundation/NSExtensionContext.h>
#import <libobjc.A.dylib/_UNNotificationExtensionVendorInterface.h>
#import <libobjc.A.dylib/_UNNotificationExtensionHostInterface.h>

@protocol _UNNotificationContentExtensionContainer, OS_dispatch_queue;
@class NSArray, NSObject;

@interface _UNNotificationContentExtensionVendorContext : NSExtensionContext <_UNNotificationExtensionVendorInterface, _UNNotificationExtensionHostInterface> {

	BOOL _queueInactive;
	BOOL _didCheckActionResponseDelegate;
	NSArray* _notificationActions;
	id<_UNNotificationContentExtensionContainer> _notificationExtensionContainer;
	NSObject*<OS_dispatch_queue> _queue;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                                                              //@synthesize queue=_queue - In the implementation block
@property (assign,getter=isQueueInactive,nonatomic) BOOL queueInactive;                                                       //@synthesize queueInactive=_queueInactive - In the implementation block
@property (assign,nonatomic) BOOL didCheckActionResponseDelegate;                                                             //@synthesize didCheckActionResponseDelegate=_didCheckActionResponseDelegate - In the implementation block
@property (nonatomic,copy) NSArray * notificationActions;                                                                     //@synthesize notificationActions=_notificationActions - In the implementation block
@property (assign,nonatomic,__weak) id<_UNNotificationContentExtensionContainer> notificationExtensionContainer;              //@synthesize notificationExtensionContainer=_notificationExtensionContainer - In the implementation block
+(id)_extensionAuxiliaryVendorProtocol;
+(id)_extensionAuxiliaryHostProtocol;
-(void)requestDismiss;
-(void)openURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)dealloc;
-(id)initWithInputItems:(id)arg1 listenerEndpoint:(id)arg2 contextUUID:(id)arg3 ;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)_extensionRequestsDismiss;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)performNotificationDefaultAction;
-(void)setNotificationActions:(NSArray *)arg1 ;
-(void)_extensionWantsToReceiveActionResponses:(BOOL)arg1 ;
-(void)_extensionWantsToBecomeFirstResponder:(BOOL)arg1 ;
-(void)_extensionDidCompleteNotificationResponse:(id)arg1 withOption:(unsigned long long)arg2 ;
-(void)_extensionSetPlayPauseMediaButtonType:(unsigned long long)arg1 ;
-(void)_extensionSetPlayPauseMediaButtonFrame:(CGRect)arg1 ;
-(void)_extensionSetPlayPauseMediaButtonColor:(id)arg1 ;
-(void)_extensionMediaPlayingStarted;
-(void)_extensionMediaPlayingPaused;
-(void)_extensionDidUpdatePlayPauseMediaButton;
-(void)_extensionRequestsDefaultAction;
-(void)_extensionDidUpdateTitle:(id)arg1 ;
-(void)_extensionDidUpdateNotificationActions:(id)arg1 ;
-(void)_hostDidReceiveNotification:(id)arg1 ;
-(void)_hostDidReceiveNotificationResponse:(id)arg1 ;
-(void)_hostWantsMediaToPlay;
-(void)_hostWantsMediaToPause;
-(void)_hostWantsToUpdateMediaPlayPauseButton;
-(void)_hostWantsToPreserveInputViews;
-(void)_hostWantsToRestoreInputViews;
-(void)_activateQueueIfNecessary;
-(void)_updateMediaPlayPauseButton;
-(id<_UNNotificationContentExtensionContainer>)notificationExtensionContainer;
-(id)_notificationExtension;
-(BOOL)didCheckActionResponseDelegate;
-(void)setDidCheckActionResponseDelegate:(BOOL)arg1 ;
-(void)mediaPlayingStarted;
-(void)mediaPlayingPaused;
-(void)dismissNotificationContentExtension;
-(void)_extensionWantsMessagesFromHostDelivered;
-(void)_extensionWantsToUpdateMediaPlayPauseButton;
-(NSArray *)notificationActions;
-(void)setNotificationExtensionContainer:(id<_UNNotificationContentExtensionContainer>)arg1 ;
-(BOOL)isQueueInactive;
-(void)setQueueInactive:(BOOL)arg1 ;
@end


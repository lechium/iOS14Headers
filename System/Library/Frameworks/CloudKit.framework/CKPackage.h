/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:39:42 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/CloudKit.framework/CloudKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CloudKit/CloudKit-Structs.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/CKRecordValue.h>

@protocol OS_dispatch_queue;
@class NSString, NSData, CKSQLite, NSObject, NSArray, CKRecord;

@interface CKPackage : NSObject <NSSecureCoding, CKRecordValue> {

	OpaquePCSShareProtectionRef _recordPCS;
	BOOL _open;
	BOOL _transaction;
	BOOL _wasCached;
	BOOL _uploaded;
	BOOL _downloaded;
	BOOL _hasSize;
	BOOL _shouldReadRawEncryptedData;
	NSString* _UUID;
	NSString* _rootDatabasePath;
	long long _state;
	NSData* _archiverInfo;
	CKSQLite* _sqlite;
	unsigned long long _nextItemIndex;
	NSObject*<OS_dispatch_queue> _queue;
	unsigned long long _size;
	long long _storageGroupingPolicy;
	long long _uploadRank;
	long long _packageID;
	NSArray* _assets;
	CKRecord* _record;
	NSString* _recordKey;

}

@property (assign,nonatomic) long long state;                                    //@synthesize state=_state - In the implementation block
@property (nonatomic,copy) NSData * archiverInfo;                                //@synthesize archiverInfo=_archiverInfo - In the implementation block
@property (nonatomic,retain) CKSQLite * sqlite;                                  //@synthesize sqlite=_sqlite - In the implementation block
@property (assign,nonatomic) unsigned long long nextItemIndex;                   //@synthesize nextItemIndex=_nextItemIndex - In the implementation block
@property (assign,getter=isOpen,nonatomic) BOOL open;                            //@synthesize open=_open - In the implementation block
@property (assign,getter=inTransaction,nonatomic) BOOL transaction;              //@synthesize transaction=_transaction - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                 //@synthesize queue=_queue - In the implementation block
@property (assign,nonatomic) OpaquePCSShareProtectionRef recordPCS;              //@synthesize recordPCS=_recordPCS - In the implementation block
@property (nonatomic,copy) NSString * UUID;                                      //@synthesize UUID=_UUID - In the implementation block
@property (assign,nonatomic) unsigned long long size;                            //@synthesize size=_size - In the implementation block
@property (assign,nonatomic) BOOL wasCached;                                     //@synthesize wasCached=_wasCached - In the implementation block
@property (assign,nonatomic) BOOL uploaded;                                      //@synthesize uploaded=_uploaded - In the implementation block
@property (assign,nonatomic) BOOL downloaded;                                    //@synthesize downloaded=_downloaded - In the implementation block
@property (assign,nonatomic) BOOL hasSize;                                       //@synthesize hasSize=_hasSize - In the implementation block
@property (assign,nonatomic) BOOL shouldReadRawEncryptedData;                    //@synthesize shouldReadRawEncryptedData=_shouldReadRawEncryptedData - In the implementation block
@property (assign,nonatomic) long long storageGroupingPolicy;                    //@synthesize storageGroupingPolicy=_storageGroupingPolicy - In the implementation block
@property (assign,nonatomic) long long uploadRank;                               //@synthesize uploadRank=_uploadRank - In the implementation block
@property (assign,nonatomic) long long packageID;                                //@synthesize packageID=_packageID - In the implementation block
@property (nonatomic,copy) NSArray * assets;                                     //@synthesize assets=_assets - In the implementation block
@property (assign,nonatomic,__weak) CKRecord * record;                           //@synthesize record=_record - In the implementation block
@property (nonatomic,copy) NSString * recordKey;                                 //@synthesize recordKey=_recordKey - In the implementation block
@property (nonatomic,copy) NSString * databaseBasePath; 
@property (nonatomic,copy) NSString * rootDatabasePath;                          //@synthesize rootDatabasePath=_rootDatabasePath - In the implementation block
@property (nonatomic,copy) NSData * signature; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_createPackageDBWithPath:(id)arg1 ;
+(void)destroyClientPackageWithDatabaseBasePath:(id)arg1 UUID:(id)arg2 ;
+(id)clientPackageDatabaseDirectory;
+(BOOL)supportsSecureCoding;
+(id)_packageDatabaseDirectoryWithBasePath:(id)arg1 state:(long long)arg2 ;
+(id)stagingPathSuffixForCloudKitCachesDirectoryWithBundleIdentifier:(id)arg1 ;
+(void)gcPackagesInDirectory:(id)arg1 dbInUseBlock:(/*^block*/id)arg2 ;
+(id)_packageDatabasePathWithBasePath:(id)arg1 UUID:(id)arg2 state:(long long)arg3 ;
+(id)packageInDaemonWithBasePath:(id)arg1 error:(id*)arg2 ;
+(id)packageWithError:(id*)arg1 ;
+(id)_packagesBasePathForBundleID:(id)arg1 ;
+(id)packageWithPackage:(id)arg1 error:(id*)arg2 ;
+(id)packageInClientWithBasePath:(id)arg1 error:(id*)arg2 ;
+(id)packageProcessBasePath;
-(CKRecord *)record;
-(BOOL)isOpen;
-(NSArray *)assets;
-(id)sectionAtIndex:(unsigned long long)arg1 ;
-(id)CKDescriptionPropertiesWithPublic:(BOOL)arg1 private:(BOOL)arg2 shouldExpand:(BOOL)arg3 ;
-(BOOL)openWithError:(id*)arg1 ;
-(BOOL)open;
-(void)beginTransaction;
-(void)endTransaction;
-(void)close;
-(CKSQLite *)sqlite;
-(void)setOpen:(BOOL)arg1 ;
-(long long)uploadRank;
-(BOOL)downloaded;
-(long long)storageGroupingPolicy;
-(void)setRecord:(CKRecord *)arg1 ;
-(void)setStorageGroupingPolicy:(long long)arg1 ;
-(void)setRecordKey:(NSString *)arg1 ;
-(void)addSection:(id)arg1 ;
-(void)setUploaded:(BOOL)arg1 ;
-(void)setDownloaded:(BOOL)arg1 ;
-(void)setUploadRank:(long long)arg1 ;
-(void)addItem:(id)arg1 ;
-(BOOL)uploaded;
-(id)itemEnumerator;
-(NSString *)UUID;
-(void)dealloc;
-(BOOL)hasSize;
-(void)setSize:(unsigned long long)arg1 ;
-(NSData *)signature;
-(void)removeDB;
-(void)setState:(long long)arg1 ;
-(long long)packageID;
-(id)clonedPackageInDaemonWithBasePath:(id)arg1 filesDuplicatedIntoDirectory:(id)arg2 error:(id*)arg3 ;
-(BOOL)removeDBAndDeleteFilesWithError:(id*)arg1 ;
-(id)init;
-(void)setSqlite:(CKSQLite *)arg1 ;
-(OpaquePCSShareProtectionRef)recordPCS;
-(id)_initWithBasePath:(id)arg1 UUID:(id)arg2 ;
-(id)_packageDatabasePath;
-(void)setPackageID:(long long)arg1 ;
-(NSData *)archiverInfo;
-(BOOL)prepareDBWithError:(id*)arg1 ;
-(void)handleChangeStateAction:(long long)arg1 ;
-(BOOL)handleChangeStateAction:(long long)arg1 error:(id*)arg2 ;
-(id)sqliteOrRaise;
-(id)_packageDatabasePathWithState:(long long)arg1 ;
-(BOOL)movePackagesDatabaseInDirection:(BOOL)arg1 error:(id*)arg2 ;
-(void)setRootDatabasePath:(NSString *)arg1 ;
-(void)releaseDBWithRemove:(BOOL)arg1 ;
-(BOOL)_locked_openWithError:(id*)arg1 ;
-(BOOL)inTransaction;
-(id)_itemWithColumnsByName:(id)arg1 ;
-(void)_locked_open;
-(id)_itemOrNilAtIndex:(unsigned long long)arg1 ;
-(void)_locked_beginTransaction;
-(void)_locked_endTransaction;
-(BOOL)setArchiverInfo:(id)arg1 error:(id*)arg2 ;
-(id)initUnreachablePackageWithUUID:(id)arg1 ;
-(void)setRecordPCS:(OpaquePCSShareProtectionRef)arg1 ;
-(id)itemEnumeratorForSectionAtIndex:(unsigned long long)arg1 ;
-(NSString *)databaseBasePath;
-(void)updateItemAtIndex:(long long)arg1 withSignature:(id)arg2 size:(unsigned long long)arg3 itemID:(unsigned long long)arg4 sectionIndex:(unsigned long long)arg5 ;
-(void)updateItemAtIndex:(long long)arg1 withFileURL:(id)arg2 ;
-(void)updateItemsAtIndexes:(id)arg1 fileURLs:(id)arg2 ;
-(void)testAddSectionConstraintAndRaise:(id)arg1 ;
-(void)setDatabaseBasePath:(NSString *)arg1 ;
-(double)earliestUploadReceiptExpiration;
-(void)setArchiverInfo:(NSData *)arg1 ;
-(unsigned long long)nextItemIndex;
-(void)setNextItemIndex:(unsigned long long)arg1 ;
-(NSObject*<OS_dispatch_queue>)queue;
-(BOOL)shouldReadRawEncryptedData;
-(id)initWithCoder:(id)arg1 ;
-(void)setTransaction:(BOOL)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setUUID:(NSString *)arg1 ;
-(unsigned long long)size;
-(BOOL)wasCached;
-(void)releaseDB;
-(NSString *)recordKey;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(unsigned long long)itemCount;
-(id)itemAtIndex:(unsigned long long)arg1 ;
-(void)setSignature:(NSData *)arg1 ;
-(void)setAssets:(NSArray *)arg1 ;
-(long long)state;
-(void)setWasCached:(BOOL)arg1 ;
-(NSString *)description;
-(NSString *)rootDatabasePath;
-(unsigned long long)sectionCount;
-(BOOL)claimOwnershipWithError:(id*)arg1 ;
-(void)setHasSize:(BOOL)arg1 ;
-(void)setShouldReadRawEncryptedData:(BOOL)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:41:23 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/WKNavigationDelegate.h>
#import <libobjc.A.dylib/LPMetadataProviderSpecializationDelegate.h>

@protocol OS_dispatch_group;
@class WKWebView, NSURL, NSTimer, BKSProcessAssertion, LPEvent, LPLinkMetadata, NSObject, LPFetcherGroup, LPAnimatedImageTranscoder, NSMutableArray, LPMetadataProviderSpecialization, NSString;

@interface LPMetadataProvider : NSObject <WKNavigationDelegate, LPMetadataProviderSpecializationDelegate> {

	unsigned _loggingID;
	WKWebView* _webView;
	NSURL* _URL;
	NSURL* _originalURL;
	NSTimer* _watchdog;
	BKSProcessAssertion* _processAssertion;
	LPEvent* _event;
	LPEvent* _mainResourceLoadEvent;
	LPEvent* _webProcessLaunchEvent;
	LPLinkMetadata* _metadata;
	BOOL _complete;
	BOOL _fetchingFromExistingWebView;
	BOOL _hasStartedFetching;
	BOOL _hasEverStartedFetchingMetadataFromWebView;
	BOOL _timedOut;
	BOOL _useSpecializedProviders;
	unsigned long long _allowedSpecializedProviders;
	NSObject*<OS_dispatch_group> _subresourceFetchGroup;
	LPFetcherGroup* _iconFetcherGroup;
	LPAnimatedImageTranscoder* _imageTranscoder;
	NSMutableArray* _pendingFetchers;
	long long _specializationState;
	LPMetadataProviderSpecialization* _specializedMetadataProvider;
	BOOL _shouldFetchSubresources;
	BOOL _cancelled;
	double _timeout;
	/*^block*/id _completionHandler;

}

@property (nonatomic,copy) id completionHandler;                                          //@synthesize completionHandler=_completionHandler - In the implementation block
@property (assign) BOOL cancelled;                                                        //@synthesize cancelled=_cancelled - In the implementation block
@property (nonatomic,readonly) LPEvent * _event;                                          //@synthesize event=_event - In the implementation block
@property (assign,nonatomic) BOOL useSpecializedProviders;                                //@synthesize useSpecializedProviders=_useSpecializedProviders - In the implementation block
@property (assign,nonatomic) BOOL fetchSubresources; 
@property (assign,nonatomic) unsigned long long allowedSpecializedProviders;              //@synthesize allowedSpecializedProviders=_allowedSpecializedProviders - In the implementation block
@property (assign,nonatomic) BOOL shouldFetchSubresources;                                //@synthesize shouldFetchSubresources=_shouldFetchSubresources - In the implementation block
@property (assign,nonatomic) double timeout;                                              //@synthesize timeout=_timeout - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)requestMetadataForURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
+(id)_copyDefaultWebViewConfiguration;
+(id)_defaultUserAgent;
+(id)_incompleteMetadataRequests;
+(id)requestMetadataForWebView:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
+(id)_callbackQueue;
-(void)cancel;
-(LPEvent *)_event;
-(void)setCancelled:(BOOL)arg1 ;
-(double)timeout;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3 ;
-(void)dealloc;
-(void)metadataProviderSpecializationDidFail:(id)arg1 ;
-(void)metadataProviderSpecialization:(id)arg1 didCompleteWithMetadata:(id)arg2 ;
-(void)setTimeout:(double)arg1 ;
-(id)init;
-(BOOL)cancelled;
-(void)_failedWithErrorCode:(long long)arg1 underlyingError:(id)arg2 ;
-(void)startFetchingMetadataForURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)startFetchingMetadataForWebView:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_startWatchdogTimer;
-(void)_cancelDueToTimeout;
-(void)_stopWatchdogTimer;
-(void)_willStartFetchingMetadata;
-(BOOL)_switchToSpecializationIfPossibleForURL:(id)arg1 ;
-(void)_internalStartFetchingMetadataFromURL;
-(void)_fetchImplicitIcons;
-(void)_fetchMetadataFromWebView;
-(void)_fetchSubresources;
-(BOOL)_switchToSpecializationIfPossibleForMIMEType:(id)arg1 URL:(id)arg2 hasLoadedResource:(BOOL)arg3 ;
-(void)_fetchedMetadata:(id)arg1 ;
-(void)_setMetadata:(id)arg1 onlyUpgradeFields:(BOOL)arg2 ;
-(BOOL)_switchToSpecializationIfPossibleForMetadata:(id)arg1 URL:(id)arg2 ;
-(void)_redistinguishImagesAndIcons;
-(void)_simplifyTitle;
-(id)subresourceFetcherConfiguration;
-(void)_fetchAssociatedApplicationMetadataWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)_postProcessResolvedMetadataWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)_generateSpecializationIfPossibleForCompleteMetadata:(id)arg1 URL:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(BOOL)fetchSubresources;
-(void)metadataProviderSpecialization:(id)arg1 didFetchPreliminaryMetadata:(id)arg2 ;
-(id)_startFetchingMetadataForURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)_startFetchingMetadataForWebView:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)startFetchingSubresourcesForPartialMetadata:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setFetchSubresources:(BOOL)arg1 ;
-(unsigned long long)allowedSpecializedProviders;
-(void)setAllowedSpecializedProviders:(unsigned long long)arg1 ;
-(BOOL)shouldFetchSubresources;
-(void)setShouldFetchSubresources:(BOOL)arg1 ;
-(BOOL)useSpecializedProviders;
-(void)setUseSpecializedProviders:(BOOL)arg1 ;
-(void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3 ;
-(void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2 ;
-(void)_completedWithError:(id)arg1 ;
-(void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 didFinishNavigation:(id)arg2 ;
-(void)webViewWebContentProcessDidTerminate:(id)arg1 ;
-(void)setCompletionHandler:(id)arg1 ;
-(id)completionHandler;
@end


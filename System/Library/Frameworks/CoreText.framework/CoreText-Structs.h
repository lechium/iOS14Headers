/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:39:17 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/CoreText.framework/CoreText
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

typedef struct {
	long long field1;
	long long field2;
} SCD_Struct_CT0;

typedef struct _NSZone* NSZoneRef;

typedef struct type {
	unsigned char __lx[16];
} type;

typedef struct os_unfair_lock_s {
	unsigned _os_unfair_lock_opaque;
} os_unfair_lock_s;

typedef struct TUnfairLock {
	os_unfair_lock_s fLock;
} TUnfairLock;

typedef struct {
	unsigned long long field1;
	id field2;
	unsigned long long field3;
	unsigned long long field4[5];
} SCD_Struct_CT5;

typedef struct __CTGlyphStorage* CTGlyphStorageRef;

typedef struct _cxx_atomic_impl<const __CFArray *, std::__1::__cxx_atomic_base_impl<const __CFArray *> > {
	A__CFArray __a_value;
} cxx_atomic_impl<const __CFArray *, std::__1::__cxx_atomic_base_impl<const __CFArray *> >;

typedef struct atomic<const __CFArray *> {
	cxx_atomic_impl<const __CFArray *, std::__1::__cxx_atomic_base_impl<const __CFArray *> > __a_;
} atomic<const __CFArray *>;

typedef struct TCFRef<const __CFArray *> {
	atomic<const __CFArray *> fRef;
} TCFRef<const __CFArray *>;

typedef struct _cxx_atomic_impl<const __CFSet *, std::__1::__cxx_atomic_base_impl<const __CFSet *> > {
	A__CFSet __a_value;
} cxx_atomic_impl<const __CFSet *, std::__1::__cxx_atomic_base_impl<const __CFSet *> >;

typedef struct atomic<const __CFSet *> {
	cxx_atomic_impl<const __CFSet *, std::__1::__cxx_atomic_base_impl<const __CFSet *> > __a_;
} atomic<const __CFSet *>;

typedef struct TCFRef<const __CFSet *> {
	atomic<const __CFSet *> fRef;
} TCFRef<const __CFSet *>;


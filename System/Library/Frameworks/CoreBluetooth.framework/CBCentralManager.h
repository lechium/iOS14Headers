/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:42:28 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreBluetooth/CoreBluetooth-Structs.h>
#import <CoreBluetooth/CBManager.h>

@protocol CBCentralManagerDelegate;
@class NSMapTable, NSMutableArray;

@interface CBCentralManager : CBManager {

	struct {
		unsigned willRestoreState : 1;
		unsigned didDiscoverPeripheral : 1;
		unsigned didConnectPeripheral : 1;
		unsigned didFailToConnectPeripheral : 1;
		unsigned didDisconnectPeripheral : 1;
		unsigned didUpdatePeripheralConnectionState : 1;
		unsigned didFindPeripheral : 1;
		unsigned didLosePeripheral : 1;
		unsigned didLoseZone : 1;
		unsigned didUpdateConnectionParameters : 1;
		unsigned connectionEventDidOccur : 1;
		unsigned didSendBytesToPeripheralWithError : 1;
		unsigned didReceiveDataFromPeripheral : 1;
		unsigned didDiscoverMultiplePeripherals : 1;
		unsigned didUpdateANCSAuthorizationForPeripheral : 1;
		unsigned canSendDataToPeripheral : 1;
		unsigned didFailToStartScanWithError : 1;
		unsigned didUpdateControllerBTClockForPeripheral : 1;
	}  _delegateFlags;
	BOOL _observingKeyPaths;
	BOOL _isScanning;
	id<CBCentralManagerDelegate> _delegate;
	NSMapTable* _peripherals;
	NSMutableArray* _discoveredPeripherals;

}

@property (assign,nonatomic) BOOL isScanning;                                           //@synthesize isScanning=_isScanning - In the implementation block
@property (nonatomic,retain,readonly) NSMapTable * peripherals;                         //@synthesize peripherals=_peripherals - In the implementation block
@property (retain) NSMutableArray * discoveredPeripherals;                              //@synthesize discoveredPeripherals=_discoveredPeripherals - In the implementation block
@property (assign,nonatomic,__weak) id<CBCentralManagerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
+(BOOL)supportsFeatures:(unsigned long long)arg1 ;
-(void)setIsScanning:(BOOL)arg1 ;
-(void)handleDidReceiveDataFromPeripheral:(id)arg1 ;
-(void)cancelPeripheralConnection:(id)arg1 ;
-(void)handleZoneLost:(id)arg1 ;
-(id)isApplicationConnectedToAnyPeripherals:(id)arg1 ;
-(void)handleMsg:(unsigned short)arg1 args:(id)arg2 ;
-(id)peerWithInfo:(id)arg1 ;
-(BOOL)isMsgAllowedWhenOff:(unsigned short)arg1 ;
-(BOOL)isMsgAllowedAlways:(unsigned short)arg1 ;
-(id)stopConnectionEventCounterForPeripheral:(id)arg1 ;
-(id)initWithDelegate:(id)arg1 queue:(id)arg2 ;
-(id)retrievePeripheralWithAddress:(id)arg1 ;
-(id)retrieveState;
-(unsigned short)getTotalSupportedAdvancedMatchingRules;
-(void)forEachPeripheral:(/*^block*/id)arg1 ;
-(void)cancelPeripheralConnection:(id)arg1 options:(id)arg2 ;
-(void)handleAdvertisingAddressChanged:(id)arg1 ;
-(void)handlePeripheralDiscovered:(id)arg1 ;
-(id)peripheralWithIdentifier:(id)arg1 ;
-(void)setMatchActionRules:(id)arg1 ;
-(void)removeSingleEntryDuplicateFilter:(id)arg1 ;
-(void)scanForPeripheralsWithServices:(id)arg1 options:(id)arg2 ;
-(id)retrieveConnectedPeripheralsWithServices:(id)arg1 ;
-(void)pauseLeConnectionManager;
-(void)handlePeripheralDisconnectionCompleted:(id)arg1 ;
-(void)setLESetPhy:(id)arg1 options:(id)arg2 ;
-(void)dealloc;
-(void)setDesiredConnectionLatency:(long long)arg1 forPeripheral:(id)arg2 ;
-(void)handleConnectionParametersUpdated:(id)arg1 ;
-(void)wipeDuplicateFilterList:(id)arg1 ;
-(void)enablePrivateModeForSessionWithIdentifier:(id)arg1 forDuration:(unsigned short)arg2 ;
-(void)setDiscoveredPeripherals:(NSMutableArray *)arg1 ;
-(void)createOfflineLEPairing:(unsigned short)arg1 ;
-(void)setDataLengthChange:(id)arg1 options:(id)arg2 ;
-(void)resumeScans;
-(unsigned short)getRemainingAdvancedMatchingRule;
-(void)resumeLeConnectionManager;
-(id)createPeripheralWithAddress:(id)arg1 andIdentifier:(id)arg2 ;
-(id)init;
-(void)sendData:(id)arg1 toPeripheral:(id)arg2 ;
-(void)handleDidSendBytesToPeripheralwithError:(id)arg1 ;
-(void)stopTrackingPeripheral:(id)arg1 options:(id)arg2 ;
-(id)retrievePeripheralsWithIdentifiers:(id)arg1 ;
-(void)handleReadyForUpdates:(id)arg1 ;
-(void)setDelegate:(id<CBCentralManagerDelegate>)arg1 ;
-(void)handleScanFailedToStartWithError:(id)arg1 ;
-(void)registerForConnectionEventsWithOptions:(id)arg1 ;
-(void)HandleControllerBTClockUpdateMsg:(id)arg1 ;
-(void)retrieveConnectedPeripherals;
-(id)startConnectionEventCounterForPeripheral:(id)arg1 ;
-(id)retrieveConnectedPeripheralsWithServices:(id)arg1 allowAll:(BOOL)arg2 ;
-(void)handleSupportedFeatures:(id)arg1 ;
-(void)retrievePeripherals:(id)arg1 ;
-(void)handleAncsAuthChanged:(id)arg1 ;
-(void)setEnhancedScanEnable:(id)arg1 ;
-(void)handleApplicationConnectionEventDidOccur:(id)arg1 ;
-(void)handlePeripheralConnectionCompleted:(id)arg1 ;
-(void)orphanPeripherals;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)startTrackingPeripheral:(id)arg1 options:(id)arg2 ;
-(void)connectPeripheral:(id)arg1 options:(id)arg2 ;
-(NSMapTable *)peripherals;
-(id<CBCentralManagerDelegate>)delegate;
-(void)stopScan;
-(void)handlePeripheralConnectionStateUpdated:(id)arg1 ;
-(void)enablePrivateModeForPeripheral:(id)arg1 forDuration:(unsigned short)arg2 ;
-(void)cancelPeripheralConnection:(id)arg1 force:(BOOL)arg2 ;
-(void)handlePeripheralCLReady:(id)arg1 ;
-(id)dataArrayToUUIDArray:(id)arg1 ;
-(id)initWithDelegate:(id)arg1 queue:(id)arg2 options:(id)arg3 ;
-(BOOL)isScanning;
-(void)pauseScans;
-(void)handlePeripheralTrackingUpdated:(id)arg1 ;
-(void)addAdvancedMatchingRule:(id)arg1 ;
-(NSMutableArray *)discoveredPeripherals;
-(void)handleRestoringState:(id)arg1 ;
-(void)setConnectionEventOptions:(id)arg1 ;
-(void)setEnhancedSetScanParamtersMultiCore:(id)arg1 ;
-(void)setLeAFHMap:(id)arg1 ;
-(void)removeAdvancedMatchingRule:(id)arg1 ;
-(id)peripheralWithInfo:(id)arg1 ;
-(void)handleApplicationActivityEvent:(id)arg1 ;
-(void)randomizeAFHMapForPeripheral:(id)arg1 ;
@end


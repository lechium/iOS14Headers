/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:53:22 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/GameController.framework/GameController
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/_GCDeviceGamepadComponent.h>
#import <libobjc.A.dylib/_GCDeviceMotionComponent.h>
#import <libobjc.A.dylib/_GCDevicePlayerIndexIndicatorComponent.h>
#import <libobjc.A.dylib/_GCDeviceLightComponent.h>
#import <libobjc.A.dylib/_GCDeviceBatteryComponent.h>
#import <libobjc.A.dylib/GCBatteryServiceClientInterface.h>
#import <libobjc.A.dylib/_GCDeviceHapticCapabilitiesComponent.h>
#import <libobjc.A.dylib/_GCPhysicalDevice.h>

@protocol _GCDeviceDriverConnection, NSObjectNSCopyingNSSecureCoding, _GCDeviceManager, _GCDefaultPhysicalDeviceDelegate, GCLightServiceServerInterface, GCMotionServiceServerInterface, GCBatteryServiceServerInterface;
@class GCDeviceLight, GCDeviceBattery, NSArray, GCHapticCapabilityGraph, _GCCControllerHIDServiceInfo, NSString, NSSet;

@interface _GCDefaultPhysicalDevice : NSObject <_GCDeviceGamepadComponent, _GCDeviceMotionComponent, _GCDevicePlayerIndexIndicatorComponent, _GCDeviceLightComponent, _GCDeviceBatteryComponent, GCBatteryServiceClientInterface, _GCDeviceHapticCapabilitiesComponent, _GCPhysicalDevice> {

	id<_GCDeviceDriverConnection> _driverConnection;
	id _driverConnectionInvalidationRegistration;
	/*^block*/id _lightComponentServiceConnectedHandler;
	/*^block*/id _motionComponentServiceConnectedHandler;
	/*^block*/id _batteryComponentServiceConnectedHandler;
	/*^block*/id _batteryComponentBatteryUpdatedHandler;
	id<NSObject><NSCopying><NSSecureCoding> _identifier;
	id<_GCDeviceManager> _manager;
	id<_GCDefaultPhysicalDeviceDelegate> _delegate;
	id<GCLightServiceServerInterface> _lightServiceServer;
	id<GCMotionServiceServerInterface> _motionServiceServer;
	id<GCBatteryServiceServerInterface> _batteryServiceServer;
	_GCCControllerHIDServiceInfo* _serviceInfo;

}

@property (readonly) id<_GCGamepadEventSourceDescription> gamepadEventSource; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy) id deviceMotionServiceConnectedHandler; 
@property (nonatomic,readonly) id<_GCMotionEventSourceDescription> motionEventSource; 
@property (assign,nonatomic) BOOL sensorsActive; 
@property (assign) long long indicatedPlayerIndex; 
@property (nonatomic,copy) id deviceLightServiceConnectedHandler; 
@property (nonatomic,retain) GCDeviceLight * light; 
@property (nonatomic,copy) id deviceBatteryServiceConnectedHandler; 
@property (nonatomic,copy) id deviceBatteryComponentBatteryUpdatedHandler; 
@property (nonatomic,readonly) GCDeviceBattery * battery; 
@property (nonatomic,readonly) NSArray * hapticEngines; 
@property (nonatomic,readonly) GCHapticCapabilityGraph * hapticCapabilityGraph; 
@property (assign,nonatomic,__weak) id<_GCDefaultPhysicalDeviceDelegate> delegate;                    //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) id<GCLightServiceServerInterface> lightServiceServer;                  //@synthesize lightServiceServer=_lightServiceServer - In the implementation block
@property (nonatomic,readonly) id<GCMotionServiceServerInterface> motionServiceServer;                //@synthesize motionServiceServer=_motionServiceServer - In the implementation block
@property (nonatomic,readonly) id<GCBatteryServiceServerInterface> batteryServiceServer;              //@synthesize batteryServiceServer=_batteryServiceServer - In the implementation block
@property (nonatomic,readonly) _GCCControllerHIDServiceInfo * serviceInfo;                            //@synthesize serviceInfo=_serviceInfo - In the implementation block
@property (copy,readonly) id<NSObject><NSCopying><NSSecureCoding> identifier;                         //@synthesize identifier=_identifier - In the implementation block
@property (__weak,readonly) id<_GCDeviceManager> manager;                                             //@synthesize manager=_manager - In the implementation block
@property (readonly) NSSet * components; 
+(id)identifierForService:(id)arg1 ;
-(id)redactedDescription;
-(id<NSObject><NSCopying><NSSecureCoding>)identifier;
-(BOOL)conformsToProtocol:(id)arg1 ;
-(id)propertyForKey:(id)arg1 ;
-(NSSet *)components;
-(GCDeviceLight *)light;
-(NSString *)debugDescription;
-(id<_GCDeviceManager>)manager;
-(id)init;
-(void)setDelegate:(id<_GCDefaultPhysicalDeviceDelegate>)arg1 ;
-(id<_GCDefaultPhysicalDeviceDelegate>)delegate;
-(_GCCControllerHIDServiceInfo *)serviceInfo;
-(GCDeviceBattery *)battery;
-(NSString *)description;
-(void)setLight:(GCDeviceLight *)arg1 ;
-(void)setSensorsActive:(BOOL)arg1 ;
-(BOOL)sensorsActive;
-(NSArray *)hapticEngines;
-(id)driverConnection;
-(id)initWithHIDDevice:(id)arg1 manager:(id)arg2 ;
-(void)setDriverConnection:(id)arg1 ;
-(id<GCBatteryServiceServerInterface>)batteryServiceServer;
-(long long)indicatedPlayerIndex;
-(void)setIndicatedPlayerIndex:(long long)arg1 ;
-(id)deviceLightServiceConnectedHandler;
-(void)setDeviceLightServiceConnectedHandler:(id)arg1 ;
-(id)deviceMotionServiceConnectedHandler;
-(void)setDeviceMotionServiceConnectedHandler:(id)arg1 ;
-(id<_GCMotionEventSourceDescription>)motionEventSource;
-(id)deviceBatteryServiceConnectedHandler;
-(void)setDeviceBatteryServiceConnectedHandler:(id)arg1 ;
-(id)deviceBatteryComponentBatteryUpdatedHandler;
-(void)setDeviceBatteryComponentBatteryUpdatedHandler:(id)arg1 ;
-(id<_GCGamepadEventSourceDescription>)gamepadEventSource;
-(GCHapticCapabilityGraph *)hapticCapabilityGraph;
-(BOOL)supportsGamepad;
-(BOOL)supportsPlayerIndicator;
-(BOOL)supportsLight;
-(BOOL)supportsHapticCapabilities;
-(BOOL)supportsMotion;
-(BOOL)supportsBattery;
-(id<GCLightServiceServerInterface>)lightServiceServer;
-(id<GCMotionServiceServerInterface>)motionServiceServer;
-(void)updateBattery:(unsigned char)arg1 isCharging:(BOOL)arg2 ;
@end


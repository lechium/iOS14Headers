/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:53:23 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/GameController.framework/GameController
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <GameController/GameController-Structs.h>
@class NSObject, NSMutableDictionary, BKSApplicationStateMonitor;

@interface _GCHapticServerManager : NSObject {

	unsigned long long _nextClientID;
	unsigned long long _tickCount;
	float _tickLengthSeconds;
	BOOL _running;
	BOOL _idle;
	unsigned long long _channelID;
	NSObject*<OS_dispatch_queue> queue;
	NSMutableDictionary* _logicalHapticDevices;
	NSMutableDictionary* _clientInvalidationHandlers;
	NSMutableDictionary* _hapticPlayers;
	BKSApplicationStateMonitor* _appMonitor;
	BOOL _activeEvents;
	NSMutableDictionary* _clients;
	NSObject*<OS_dispatch_queue> _runloopQueue;

}

@property (nonatomic,retain) NSMutableDictionary * clients;                            //@synthesize clients=_clients - In the implementation block
@property (assign,nonatomic) BOOL activeEvents;                                        //@synthesize activeEvents=_activeEvents - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> runloopQueue;              //@synthesize runloopQueue=_runloopQueue - In the implementation block
+(id)sharedInstance;
-(NSMutableDictionary *)clients;
-(void)setClients:(NSMutableDictionary *)arg1 ;
-(id)init;
-(void)notifyPlayerNoLongerRetained:(id)arg1 ;
-(void)scheduleCommand:(const HapticCommand*)arg1 ;
-(void)logicalDeviceWasUnregistered:(id)arg1 ;
-(void)removeHapticClient:(id)arg1 ;
-(void)spawnInputThread;
-(void)enterRunloop;
-(void)readListCommand:(HapticCommand)arg1 client:(id)arg2 renderTime:(double)arg3 ;
-(void)setActiveEvents:(BOOL)arg1 ;
-(BOOL)activeEvents;
-(BOOL)readClientDataForStartTime:(double)arg1 endTime:(double)arg2 ;
-(BOOL)playersHaveImpendingCommandsForStartTime:(double)arg1 endTime:(double)arg2 ;
-(void)processScheduledCommandsForStartTime:(double)arg1 endTime:(double)arg2 ;
-(void)processActiveEventsForStartTime:(double)arg1 endTime:(double)arg2 ;
-(void)identifyCompletedClients;
-(void)readParamCurveListCommand:(HapticCommand)arg1 client:(id)arg2 ;
-(BOOL)acceptNewConnection:(id)arg1 fromHapticsEnabledApp:(id)arg2 ;
-(void)hapticClientProxyInitialized:(id)arg1 ;
-(id)__onqueue_reserveChannels:(unsigned long long)arg1 forClient:(id)arg2 ;
-(NSObject*<OS_dispatch_queue>)runloopQueue;
@end


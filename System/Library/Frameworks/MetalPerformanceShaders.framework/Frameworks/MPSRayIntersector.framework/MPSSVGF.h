/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:53:27 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSRayIntersector.framework/MPSRayIntersector
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MPSRayIntersector/MPSRayIntersector-Structs.h>
#import <MPSCore/MPSKernel.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/NSCopying.h>

@interface MPSSVGF : MPSKernel <NSSecureCoding, NSCopying> {

	float _variancePrefilterSigma;
	float _bilateralFilterSigma;
	unsigned long long _temporalWeighting;
	float _temporalReprojectionBlendFactor;
	float _depthWeight;
	float _normalWeight;
	float _luminanceWeight;
	float _reprojectionThreshold;
	float _varianceEstimationSigma;
	unsigned long long _channelCount;
	unsigned long long _channelCount2;
	unsigned long long _minimumFramesForVarianceEstimation;
	unsigned long long _varianceEstimationRadius;
	unsigned long long _variancePrefilterRadius;
	unsigned long long _bilateralFilterRadius;

}

@property (assign,nonatomic) float depthWeight; 
@property (assign,nonatomic) float normalWeight; 
@property (assign,nonatomic) float luminanceWeight; 
@property (assign,nonatomic) unsigned long long temporalWeighting; 
@property (assign,nonatomic) float temporalReprojectionBlendFactor; 
@property (assign,nonatomic) float reprojectionThreshold; 
@property (assign,nonatomic) unsigned long long minimumFramesForVarianceEstimation;              //@synthesize minimumFramesForVarianceEstimation=_minimumFramesForVarianceEstimation - In the implementation block
@property (assign,nonatomic) unsigned long long varianceEstimationRadius;                        //@synthesize varianceEstimationRadius=_varianceEstimationRadius - In the implementation block
@property (assign,nonatomic) float varianceEstimationSigma; 
@property (assign,nonatomic) float variancePrefilterSigma; 
@property (assign,nonatomic) unsigned long long variancePrefilterRadius;                         //@synthesize variancePrefilterRadius=_variancePrefilterRadius - In the implementation block
@property (assign,nonatomic) float bilateralFilterSigma; 
@property (assign,nonatomic) unsigned long long bilateralFilterRadius;                           //@synthesize bilateralFilterRadius=_bilateralFilterRadius - In the implementation block
@property (assign,nonatomic) unsigned long long channelCount; 
@property (assign,nonatomic) unsigned long long channelCount2; 
+(BOOL)supportsSecureCoding;
+(const MPSLibraryInfo*)libraryInfo:(MPSDevice*)arg1 ;
-(unsigned long long)channelCount;
-(MPSSVGFParams)params;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 device:(id)arg2 ;
-(id)copyWithZone:(NSZone*)arg1 device:(id)arg2 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithDevice:(id)arg1 ;
-(id)description;
-(MPSSVGFFunctionHash)getHashForKernelID:(unsigned long long)arg1 haveMotionVectorTexture:(BOOL)arg2 haveDepthNormalTexture:(BOOL)arg3 haveSecondTexture:(BOOL)arg4 ;
-(void)encodeReprojectionToCommandBuffer:(id)arg1 sourceTexture:(id)arg2 previousTexture:(id)arg3 destinationTexture:(id)arg4 previousLuminanceMomentsTexture:(id)arg5 destinationLuminanceMomentsTexture:(id)arg6 sourceTexture2:(id)arg7 previousTexture2:(id)arg8 destinationTexture2:(id)arg9 previousLuminanceMomentsTexture2:(id)arg10 destinationLuminanceMomentsTexture2:(id)arg11 previousFrameCountTexture:(id)arg12 destinationFrameCountTexture:(id)arg13 motionVectorTexture:(id)arg14 depthNormalTexture:(id)arg15 previousDepthNormalTexture:(id)arg16 ;
-(unsigned long long)channelCount:(id)arg1 ;
-(id)getPipelineForFunctionName:(id)arg1 kernelID:(unsigned long long)arg2 haveMotionVectorTexture:(BOOL)arg3 haveDepthNormalTexture:(BOOL)arg4 haveSecondTexture:(BOOL)arg5 ;
-(void)encodeVarianceEstimationToCommandBuffer:(id)arg1 sourceTexture:(id)arg2 luminanceMomentsTexture:(id)arg3 destinationTexture:(id)arg4 sourceTexture2:(id)arg5 luminanceMomentsTexture2:(id)arg6 destinationTexture2:(id)arg7 frameCountTexture:(id)arg8 depthNormalTexture:(id)arg9 ;
-(void)encodeBilateralFilterToCommandBuffer:(id)arg1 stepDistance:(unsigned long long)arg2 sourceTexture:(id)arg3 destinationTexture:(id)arg4 sourceTexture2:(id)arg5 destinationTexture2:(id)arg6 depthNormalTexture:(id)arg7 ;
-(float)variancePrefilterSigma;
-(void)setVariancePrefilterSigma:(float)arg1 ;
-(float)bilateralFilterSigma;
-(void)setBilateralFilterSigma:(float)arg1 ;
-(unsigned long long)temporalWeighting;
-(void)setTemporalWeighting:(unsigned long long)arg1 ;
-(float)temporalReprojectionBlendFactor;
-(void)setTemporalReprojectionBlendFactor:(float)arg1 ;
-(float)depthWeight;
-(void)setDepthWeight:(float)arg1 ;
-(float)normalWeight;
-(void)setNormalWeight:(float)arg1 ;
-(float)luminanceWeight;
-(void)setLuminanceWeight:(float)arg1 ;
-(float)reprojectionThreshold;
-(void)setReprojectionThreshold:(float)arg1 ;
-(float)varianceEstimationSigma;
-(void)setVarianceEstimationSigma:(float)arg1 ;
-(void)setChannelCount:(unsigned long long)arg1 ;
-(unsigned long long)channelCount2;
-(void)setChannelCount2:(unsigned long long)arg1 ;
-(void)encodeReprojectionToCommandBuffer:(id)arg1 sourceTexture:(id)arg2 previousTexture:(id)arg3 destinationTexture:(id)arg4 previousLuminanceMomentsTexture:(id)arg5 destinationLuminanceMomentsTexture:(id)arg6 previousFrameCountTexture:(id)arg7 destinationFrameCountTexture:(id)arg8 motionVectorTexture:(id)arg9 depthNormalTexture:(id)arg10 previousDepthNormalTexture:(id)arg11 ;
-(void)encodeVarianceEstimationToCommandBuffer:(id)arg1 sourceTexture:(id)arg2 luminanceMomentsTexture:(id)arg3 destinationTexture:(id)arg4 frameCountTexture:(id)arg5 depthNormalTexture:(id)arg6 ;
-(void)encodeBilateralFilterToCommandBuffer:(id)arg1 stepDistance:(unsigned long long)arg2 sourceTexture:(id)arg3 destinationTexture:(id)arg4 depthNormalTexture:(id)arg5 ;
-(unsigned long long)minimumFramesForVarianceEstimation;
-(void)setMinimumFramesForVarianceEstimation:(unsigned long long)arg1 ;
-(unsigned long long)varianceEstimationRadius;
-(void)setVarianceEstimationRadius:(unsigned long long)arg1 ;
-(unsigned long long)variancePrefilterRadius;
-(void)setVariancePrefilterRadius:(unsigned long long)arg1 ;
-(unsigned long long)bilateralFilterRadius;
-(void)setBilateralFilterRadius:(unsigned long long)arg1 ;
@end


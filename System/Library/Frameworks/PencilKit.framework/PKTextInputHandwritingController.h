/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:43:42 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/PencilKit.framework/PencilKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PencilKit/PencilKit-Structs.h>
#import <libobjc.A.dylib/PKTextInputHandwritingShotDelegate.h>
#import <libobjc.A.dylib/PKTextInputResultCommandDelegate.h>
#import <libobjc.A.dylib/PKTextInputCanvasControllerChangeObserver.h>
#import <libobjc.A.dylib/PKTextInputDebugStateReporting.h>

@protocol PKTextInputHandwritingControllerDelegate;
@class PKTextInputCanvasController, PKTextInputElementsController, PKTextInputFeedbackController, PKTextInputReserveSpaceController, PKTextInputDebugLogController, PKTextInputCursorController, PKTextInputRecognitionManager, PKTextInputWritingSession, PKTextInputHandwritingShot, PKTextInputResultCommand, NSMutableArray, NSUUID, PKDrawing, PKTextInputTargetState, NSString;

@interface PKTextInputHandwritingController : NSObject <PKTextInputHandwritingShotDelegate, PKTextInputResultCommandDelegate, PKTextInputCanvasControllerChangeObserver, PKTextInputDebugStateReporting> {

	id<PKTextInputHandwritingControllerDelegate> _delegate;
	PKTextInputCanvasController* _canvasController;
	PKTextInputElementsController* _elementsController;
	PKTextInputFeedbackController* _feedbackController;
	PKTextInputReserveSpaceController* _reserveSpaceController;
	PKTextInputDebugLogController* _debugLogController;
	PKTextInputCursorController* _cursorController;
	double _strokeAlphaOverride;
	PKTextInputRecognitionManager* __recognitionManager;
	PKTextInputWritingSession* __writingSession;
	PKTextInputHandwritingShot* __activeHandwritingShot;
	PKTextInputHandwritingShot* __possibleHandwritingShot;
	PKTextInputResultCommand* __activeResultCommand;
	NSMutableArray* __resultCommandsQueue;
	double __lastInProgressStrokeUpdateTime;
	NSUUID* __lastInProgressStrokeUUID;
	PKDrawing* __lastKnownDrawing;
	PKTextInputTargetState* __activeInputTargetState;
	double __floatingBackgroundLastUpdateTime;

}

@property (nonatomic,readonly) PKTextInputRecognitionManager * debugRecognitionManager; 
@property (nonatomic,readonly) PKTextInputTargetState * debugActiveInputTargetState; 
@property (nonatomic,retain) PKTextInputRecognitionManager * _recognitionManager;                                                    //@synthesize _recognitionManager=__recognitionManager - In the implementation block
@property (setter=_setWritingSession:,nonatomic,retain) PKTextInputWritingSession * _writingSession;                                 //@synthesize _writingSession=__writingSession - In the implementation block
@property (setter=_setActiveHandwritingShot:,nonatomic,retain) PKTextInputHandwritingShot * _activeHandwritingShot;                  //@synthesize _activeHandwritingShot=__activeHandwritingShot - In the implementation block
@property (setter=_setPossibleHandwritingShot:,nonatomic,retain) PKTextInputHandwritingShot * _possibleHandwritingShot;              //@synthesize _possibleHandwritingShot=__possibleHandwritingShot - In the implementation block
@property (setter=_setActiveResultCommand:,nonatomic,retain) PKTextInputResultCommand * _activeResultCommand;                        //@synthesize _activeResultCommand=__activeResultCommand - In the implementation block
@property (nonatomic,readonly) NSMutableArray * _resultCommandsQueue;                                                                //@synthesize _resultCommandsQueue=__resultCommandsQueue - In the implementation block
@property (assign,nonatomic) double _lastInProgressStrokeUpdateTime;                                                                 //@synthesize _lastInProgressStrokeUpdateTime=__lastInProgressStrokeUpdateTime - In the implementation block
@property (nonatomic,copy) NSUUID * _lastInProgressStrokeUUID;                                                                       //@synthesize _lastInProgressStrokeUUID=__lastInProgressStrokeUUID - In the implementation block
@property (setter=_setLastKnownDrawing:,nonatomic,copy) PKDrawing * _lastKnownDrawing;                                               //@synthesize _lastKnownDrawing=__lastKnownDrawing - In the implementation block
@property (setter=_setActiveInputTargetState:,nonatomic,retain) PKTextInputTargetState * _activeInputTargetState;                    //@synthesize _activeInputTargetState=__activeInputTargetState - In the implementation block
@property (assign,nonatomic) double _floatingBackgroundLastUpdateTime;                                                               //@synthesize _floatingBackgroundLastUpdateTime=__floatingBackgroundLastUpdateTime - In the implementation block
@property (assign,nonatomic,__weak) id<PKTextInputHandwritingControllerDelegate> delegate;                                           //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) PKTextInputCanvasController * canvasController;                                                       //@synthesize canvasController=_canvasController - In the implementation block
@property (nonatomic,readonly) PKTextInputElementsController * elementsController;                                                   //@synthesize elementsController=_elementsController - In the implementation block
@property (nonatomic,readonly) PKTextInputFeedbackController * feedbackController;                                                   //@synthesize feedbackController=_feedbackController - In the implementation block
@property (nonatomic,readonly) PKTextInputReserveSpaceController * reserveSpaceController;                                           //@synthesize reserveSpaceController=_reserveSpaceController - In the implementation block
@property (nonatomic,readonly) PKTextInputDebugLogController * debugLogController;                                                   //@synthesize debugLogController=_debugLogController - In the implementation block
@property (nonatomic,readonly) PKTextInputCursorController * cursorController;                                                       //@synthesize cursorController=_cursorController - In the implementation block
@property (nonatomic,readonly) long long writingState; 
@property (nonatomic,readonly) double strokeAlphaOverride;                                                                           //@synthesize strokeAlphaOverride=_strokeAlphaOverride - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)_isCorrectionResultGesture:(id)arg1 ;
-(PKTextInputFeedbackController *)feedbackController;
-(void)setDelegate:(id<PKTextInputHandwritingControllerDelegate>)arg1 ;
-(id<PKTextInputHandwritingControllerDelegate>)delegate;
-(PKTextInputCanvasController *)canvasController;
-(void)reportDebugStateDescription:(/*^block*/id)arg1 ;
-(PKTextInputRecognitionManager *)_recognitionManager;
-(long long)writingState;
-(PKTextInputReserveSpaceController *)reserveSpaceController;
-(id)initWithCanvasController:(id)arg1 elementsController:(id)arg2 feedbackController:(id)arg3 reserveSpaceController:(id)arg4 debugLogController:(id)arg5 cursorController:(id)arg6 ;
-(PKTextInputElementsController *)elementsController;
-(PKTextInputDebugLogController *)debugLogController;
-(void)canvasControllerDidEndDrawing:(id)arg1 ;
-(void)canvasControllerInProgressStrokeDidChange:(id)arg1 ;
-(void)canvasControllerDidCancelStroke:(id)arg1 strokeAcceptanceState:(long long)arg2 ;
-(void)canvasControllerEndedStroke:(id)arg1 ;
-(void)canvasController:(id)arg1 drawingDidChange:(id)arg2 ;
-(double)strokeAlphaOverride;
-(void)reserveSpaceControllerIsActiveChanged;
-(PKTextInputCursorController *)cursorController;
-(void)reserveSpaceControllerWillFocusElement:(id)arg1 ;
-(void)canvasControllerDidBeginDrawing:(id)arg1 ;
-(void)cleanUpFromCancelledReplay;
-(void)handwritingShotDidChangeState:(id)arg1 ;
-(void)handwritingShot:(id)arg1 willFocusAndLoadDataForTargetElement:(id)arg2 ;
-(void)handwritingShotDidOverrideStrongCursor:(id)arg1 ;
-(id)handwritingShotStrokeIdentifiersToExcludeFromRecognition:(id)arg1 ;
-(id)handwritingShot:(id)arg1 preferredTargetElementForQueryItemStableIdentifier:(id)arg2 simultaneousItemStableIdentifiers:(id)arg3 proposedTargetElement:(id)arg4 ;
-(NSRange)handwritingShot:(id)arg1 inProgressGestureInitialSelectedRangeForElementRecognitionIdentifier:(id)arg2 ;
-(long long)handwritingShot:(id)arg1 lastCharacterLevelPositionForElementRecognitionIdentifier:(id)arg2 ;
-(BOOL)handwritingShot:(id)arg1 hasCommittedResultsInSessionToElementRecognitionIdentifier:(id)arg2 ;
-(NSRange)handwritingShot:(id)arg1 activePreviewRangeForElementRecognitionIdentifier:(id)arg2 queryItemStableIdentifier:(id)arg3 ;
-(BOOL)handwritingShot:(id)arg1 shouldSuppressGesturesForStrokesBounds:(CGRect)arg2 coordinateSpace:(id)arg3 ;
-(void)_updateFloatingBackground;
-(PKTextInputTargetState *)debugActiveInputTargetState;
-(PKTextInputRecognitionManager *)debugRecognitionManager;
-(id)resultCommandSupportedElementDelegate:(id)arg1 ;
-(id)resultCommandCanvasController:(id)arg1 ;
-(id)resultCommandCursorController:(id)arg1 ;
-(id)resultCommandFeedbackController:(id)arg1 ;
-(void)resultCommandStateDidChange:(id)arg1 ;
-(PKTextInputWritingSession *)_writingSession;
-(PKTextInputResultCommand *)_activeResultCommand;
-(NSMutableArray *)_resultCommandsQueue;
-(void)_updateWritingSession;
-(void)_notifyDelegateOfResultCommandState;
-(void)_updateStrokeAlphaOverride;
-(PKTextInputHandwritingShot *)_activeHandwritingShot;
-(PKTextInputHandwritingShot *)_possibleHandwritingShot;
-(PKTextInputTargetState *)_activeInputTargetState;
-(void)_setWritingSession:(id)arg1 ;
-(void)set_recognitionManager:(PKTextInputRecognitionManager *)arg1 ;
-(void)_setActiveResultCommand:(id)arg1 ;
-(void)_setActiveInputTargetState:(id)arg1 ;
-(void)_scheduleCommitForResultCommandIfNeeded:(id)arg1 ;
-(void)_evaluateAndProcessResultCommandsQueue;
-(void)_processPossibleShotIfReady;
-(id)_pendingResultCommand;
-(void)_handleResultCommandFinished:(id)arg1 ;
-(void)_setPossibleHandwritingShot:(id)arg1 ;
-(void)_setActiveHandwritingShot:(id)arg1 ;
-(void)_updateRecognitionManager;
-(void)_cancelPendingResultCommand;
-(id)_resultCommandToProcessQueryItem:(id)arg1 handwritingShot:(id)arg2 ;
-(PKDrawing *)_lastKnownDrawing;
-(long long)_immediateCommitTypeForQueryItem:(id)arg1 handwritingShot:(id)arg2 ;
-(void)_handleActiveHandwritingShotRecognitionFinished;
-(BOOL)_wantsFloatingBackground;
-(void)_createPossibleHandwritingShotIfNeeded;
-(double)_lastInProgressStrokeUpdateTime;
-(double)_continuousRecognitionInterval;
-(NSUUID *)_lastInProgressStrokeUUID;
-(void)set_lastInProgressStrokeUpdateTime:(double)arg1 ;
-(void)set_lastInProgressStrokeUUID:(NSUUID *)arg1 ;
-(double)_floatingBackgroundLastUpdateTime;
-(void)_cancelInProgressStrokeFromHandwritingShots;
-(void)_setLastKnownDrawing:(id)arg1 ;
-(void)set_floatingBackgroundLastUpdateTime:(double)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:43:40 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/PencilKit.framework/PencilKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PencilKit/PencilKit-Structs.h>
#import <QuartzCore/CALayer.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@class PKRulerController, CALayer, NSTimer, CATextLayer, NSString;

@interface PKRulerLayer : CALayer <UIGestureRecognizerDelegate> {

	BOOL _isInlineResizing;
	BOOL _isExpandedInline;
	BOOL _isRulerDrawingMovingToEndOfRuler;
	BOOL _zooming;
	PKRulerController* _rulerController;
	double _rulerAlpha;
	CALayer* _rulerAngleMarker;
	NSTimer* _imageTransformTimer;
	double _initialDrawingBoundsYOrigin;
	CALayer* _rulerLayer;
	CALayer* _rulerAngleTick;
	CATextLayer* _rulerAngleText;
	CALayer* _rulerDistanceHUD;
	CATextLayer* _rulerDistanceText;
	double _currentTValueForSnappedDrawing;
	double _minTValueForSnappedDrawing;
	double _maxTValueForSnappedDrawing;
	double _originTValueForSnappedDrawing;
	double _rulerZoomStartCenterTValueOnScreen;
	double _rulerZoomStartScale;
	CGAffineTransform _previousRulerTransform;
	CGAffineTransform _rulerZoomStartTransform;

}

@property (nonatomic,retain) NSTimer * imageTransformTimer;                           //@synthesize imageTransformTimer=_imageTransformTimer - In the implementation block
@property (assign,nonatomic) double initialDrawingBoundsYOrigin;                      //@synthesize initialDrawingBoundsYOrigin=_initialDrawingBoundsYOrigin - In the implementation block
@property (assign,nonatomic) BOOL isInlineResizing;                                   //@synthesize isInlineResizing=_isInlineResizing - In the implementation block
@property (assign,nonatomic) BOOL isExpandedInline;                                   //@synthesize isExpandedInline=_isExpandedInline - In the implementation block
@property (nonatomic,retain) CALayer * rulerLayer;                                    //@synthesize rulerLayer=_rulerLayer - In the implementation block
@property (assign,nonatomic) CGAffineTransform rulerTransform; 
@property (assign,nonatomic) CGAffineTransform previousRulerTransform;                //@synthesize previousRulerTransform=_previousRulerTransform - In the implementation block
@property (nonatomic,retain) CALayer * rulerAngleTick;                                //@synthesize rulerAngleTick=_rulerAngleTick - In the implementation block
@property (nonatomic,retain) CATextLayer * rulerAngleText;                            //@synthesize rulerAngleText=_rulerAngleText - In the implementation block
@property (nonatomic,retain) CALayer * rulerDistanceHUD;                              //@synthesize rulerDistanceHUD=_rulerDistanceHUD - In the implementation block
@property (nonatomic,retain) CATextLayer * rulerDistanceText;                         //@synthesize rulerDistanceText=_rulerDistanceText - In the implementation block
@property (assign,nonatomic) BOOL isRulerDrawingMovingToEndOfRuler;                   //@synthesize isRulerDrawingMovingToEndOfRuler=_isRulerDrawingMovingToEndOfRuler - In the implementation block
@property (assign,nonatomic) double currentTValueForSnappedDrawing;                   //@synthesize currentTValueForSnappedDrawing=_currentTValueForSnappedDrawing - In the implementation block
@property (assign,nonatomic) double minTValueForSnappedDrawing;                       //@synthesize minTValueForSnappedDrawing=_minTValueForSnappedDrawing - In the implementation block
@property (assign,nonatomic) double maxTValueForSnappedDrawing;                       //@synthesize maxTValueForSnappedDrawing=_maxTValueForSnappedDrawing - In the implementation block
@property (assign,nonatomic) double originTValueForSnappedDrawing;                    //@synthesize originTValueForSnappedDrawing=_originTValueForSnappedDrawing - In the implementation block
@property (assign,nonatomic) double rulerZoomStartCenterTValueOnScreen;               //@synthesize rulerZoomStartCenterTValueOnScreen=_rulerZoomStartCenterTValueOnScreen - In the implementation block
@property (assign,nonatomic) double rulerZoomStartScale;                              //@synthesize rulerZoomStartScale=_rulerZoomStartScale - In the implementation block
@property (assign,nonatomic) CGAffineTransform rulerZoomStartTransform;               //@synthesize rulerZoomStartTransform=_rulerZoomStartTransform - In the implementation block
@property (assign,nonatomic) BOOL zooming;                                            //@synthesize zooming=_zooming - In the implementation block
@property (assign,nonatomic,__weak) PKRulerController * rulerController;              //@synthesize rulerController=_rulerController - In the implementation block
@property (assign,nonatomic) double rulerAlpha;                                       //@synthesize rulerAlpha=_rulerAlpha - In the implementation block
@property (nonatomic,retain) CALayer * rulerAngleMarker;                              //@synthesize rulerAngleMarker=_rulerAngleMarker - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)animationDidStop:(id)arg1 finished:(BOOL)arg2 ;
-(long long)currentAngle;
-(BOOL)zooming;
-(void)setRulerController:(PKRulerController *)arg1 ;
-(void)showRuler;
-(PKRulerController *)rulerController;
-(BOOL)compactRuler;
-(id)_rulerImage;
-(void)updateRulerAlpha:(double)arg1 ;
-(CALayer *)rulerLayer;
-(CALayer *)rulerAngleMarker;
-(CALayer *)rulerAngleTick;
-(CATextLayer *)rulerAngleText;
-(double)rulerWidth;
-(double)rulerZoomStartCenterTValueOnScreen;
-(double)rulerZoomStartScale;
-(CGAffineTransform)rulerZoomStartTransform;
-(CGAffineTransform)previousRulerTransform;
-(void)setRulerLayer:(CALayer *)arg1 ;
-(void)updateRulerTickMarkImage;
-(void)setRulerAlpha:(double)arg1 ;
-(id)addOpacityAnimationOnLayer:(id)arg1 delegate:(id)arg2 toOpacity:(double)arg3 ;
-(void)removeRulerMarkers;
-(CALayer *)rulerDistanceHUD;
-(void)setPreviousRulerTransform:(CGAffineTransform)arg1 ;
-(void)setRulerAngleMarker:(CALayer *)arg1 ;
-(BOOL)shouldUseLargestRulerTextFontSize;
-(id)rulerDialImage;
-(void)setRulerAngleTick:(CALayer *)arg1 ;
-(id)rulerDialLevelImage;
-(void)setRulerAngleText:(CATextLayer *)arg1 ;
-(long long)userAngle;
-(CGAffineTransform)rulerTransform;
-(double)_distanceMarkerFontSize;
-(double)_fontSizeForRulerTextHUD:(id)arg1 ;
-(double)maxTValueForSnappedDrawing;
-(double)minTValueForSnappedDrawing;
-(CATextLayer *)rulerDistanceText;
-(double)originTValueForSnappedDrawing;
-(void)setIsRulerDrawingMovingToEndOfRuler:(BOOL)arg1 ;
-(void)setRulerDistanceHUD:(CALayer *)arg1 ;
-(void)setRulerDistanceText:(CATextLayer *)arg1 ;
-(void)addScaleAndOpacityAnimationOnLayer:(id)arg1 delegate:(id)arg2 fromScale:(double)arg3 toScale:(double)arg4 fromAlpha:(double)arg5 toAlpha:(double)arg6 ;
-(double)currentTValueForSnappedDrawing;
-(id)_textForRulerHUD:(double)arg1 ;
-(CGPoint)getRulerCenterLineOriginAndTangent:(CGPoint*)arg1 ;
-(void)setCurrentTValueForSnappedDrawing:(double)arg1 ;
-(void)setMinTValueForSnappedDrawing:(double)arg1 ;
-(void)setMaxTValueForSnappedDrawing:(double)arg1 ;
-(void)setOriginTValueForSnappedDrawing:(double)arg1 ;
-(void)updateDistanceMarkerWithSpacing:(double)arg1 ;
-(id)initWithRulerController:(id)arg1 ;
-(double)rulerTickMarkInset;
-(double)rulerAlignInset;
-(void)setRulerTransform:(CGAffineTransform)arg1 ;
-(id)addScaleAnimationOnLayer:(id)arg1 delegate:(id)arg2 fromScale:(double)arg3 toScale:(double)arg4 ;
-(void)hideRulerAnimated:(BOOL)arg1 ;
-(void)updateAngleWithAngleMarkerPosition:(CGPoint)arg1 ;
-(void)hideRulerAngleMarker;
-(BOOL)viewPointInRuler:(CGPoint)arg1 ;
-(void)updateRulerMarkerForLocation:(CGPoint)arg1 firstTouch:(BOOL)arg2 ;
-(void)updateImageTransform:(id)arg1 ;
-(void)setImageTransformFrom:(CGAffineTransform)arg1 toTransform:(CGAffineTransform)arg2 animated:(BOOL)arg3 duration:(double)arg4 ;
-(double)rulerAlpha;
-(NSTimer *)imageTransformTimer;
-(void)setImageTransformTimer:(NSTimer *)arg1 ;
-(double)initialDrawingBoundsYOrigin;
-(void)setInitialDrawingBoundsYOrigin:(double)arg1 ;
-(BOOL)isInlineResizing;
-(void)setIsInlineResizing:(BOOL)arg1 ;
-(BOOL)isExpandedInline;
-(void)setIsExpandedInline:(BOOL)arg1 ;
-(BOOL)isRulerDrawingMovingToEndOfRuler;
-(void)setRulerZoomStartCenterTValueOnScreen:(double)arg1 ;
-(void)setRulerZoomStartScale:(double)arg1 ;
-(void)setRulerZoomStartTransform:(CGAffineTransform)arg1 ;
-(void)setZooming:(BOOL)arg1 ;
@end


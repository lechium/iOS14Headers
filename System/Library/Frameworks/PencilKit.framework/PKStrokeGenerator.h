/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:43:41 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/PencilKit.framework/PencilKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PencilKit/PencilKit-Structs.h>
#import <libobjc.A.dylib/PKInputProvider.h>

@protocol OS_dispatch_queue, OS_dispatch_semaphore;
@class NSObject, PKStroke;

@interface PKStrokeGenerator : NSObject <PKInputProvider> {

	double _latestNonPredictedTimestamp;
	vector<PKInputPoint, std::__1::allocator<PKInputPoint> >* _drawPoints;
	vector<_PKStrokePoint, std::__1::allocator<_PKStrokePoint> >* _outputPoints;
	long long _outputImmutableCount;
	BOOL _inputHasChanged;
	PKStrokePoint _baseValues;
	NSObject*<OS_dispatch_queue> _inputQueue;
	PKStroke* _currentStroke;
	long long _currentInputType;
	unsigned long long _currentActiveInputProperties;
	long long _immutableCount;
	long long _missedUpdates;
	vector<PKInputPoint, std::__1::allocator<PKInputPoint> >* _updatedDrawPoints;
	BOOL _drawingEndedButNotFinished;
	NSObject*<OS_dispatch_semaphore> _drawingWaitForFinishSemaphore;
	BOOL _useRuler;
	BOOL _isSnappedToRulerTopSide;
	BOOL _canSnapToRuler;
	BOOL _isSnappedToRuler;
	double _rulerWidth;
	double _strokeMaxForce;
	NSObject*<OS_dispatch_queue> _outputQueue;
	double _touchSensitivity;
	PKInputProviderInitial* _inputProvider;
	PKPixelSmoothingFilter* _pixelSmoothingFilter;
	PKPointReductionFilter* _pointReductionFilter;
	PKStartHookFilter* _startHookFilter;
	PKEndHookFilter* _endHookFilter;
	PKVelocityCalculationFilter* _velocityFilter;
	PKInputSmoother* _inputSmoother;
	PKInputToOutputFilter* _inputToOutputFilter;
	PKStartCapsFilter* _startCapFilter;
	PKAzimuthFilter* _azimuthFilter;
	PKEndCapsFilter* _endCapFilter;
	PKRulerExtremaFilter* _rulerExtremaFilter;
	PKEstimatedAltitudeAndAzimuthFilter* _estimatedAltitudeAndAzimuthFilter;
	PKCompressionFilter* _compressionFilter;
	PKDecompressionFilter* _decompressionFilter;
	double _eraserIndicatorAlpha;
	double _inputScale;
	CGPoint _lastPoint;
	CGAffineTransform _rulerTransform;

}

@property (assign,nonatomic) CGAffineTransform rulerTransform;                                                    //@synthesize rulerTransform=_rulerTransform - In the implementation block
@property (assign,nonatomic) BOOL useRuler;                                                                       //@synthesize useRuler=_useRuler - In the implementation block
@property (assign,nonatomic) double rulerWidth;                                                                   //@synthesize rulerWidth=_rulerWidth - In the implementation block
@property (assign,nonatomic) BOOL isSnappedToRulerTopSide;                                                        //@synthesize isSnappedToRulerTopSide=_isSnappedToRulerTopSide - In the implementation block
@property (assign,nonatomic) BOOL canSnapToRuler;                                                                 //@synthesize canSnapToRuler=_canSnapToRuler - In the implementation block
@property (assign,nonatomic) double strokeMaxForce;                                                               //@synthesize strokeMaxForce=_strokeMaxForce - In the implementation block
@property (assign) CGPoint lastPoint;                                                                             //@synthesize lastPoint=_lastPoint - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> outputQueue;                                            //@synthesize outputQueue=_outputQueue - In the implementation block
@property (assign,nonatomic) double touchSensitivity;                                                             //@synthesize touchSensitivity=_touchSensitivity - In the implementation block
@property (assign,nonatomic) PKInputProviderInitial* inputProvider;                                               //@synthesize inputProvider=_inputProvider - In the implementation block
@property (assign,nonatomic) PKPixelSmoothingFilter* pixelSmoothingFilter;                                        //@synthesize pixelSmoothingFilter=_pixelSmoothingFilter - In the implementation block
@property (assign,nonatomic) PKPointReductionFilter* pointReductionFilter;                                        //@synthesize pointReductionFilter=_pointReductionFilter - In the implementation block
@property (assign,nonatomic) PKStartHookFilter* startHookFilter;                                                  //@synthesize startHookFilter=_startHookFilter - In the implementation block
@property (assign,nonatomic) PKEndHookFilter* endHookFilter;                                                      //@synthesize endHookFilter=_endHookFilter - In the implementation block
@property (assign,nonatomic) PKVelocityCalculationFilter* velocityFilter;                                         //@synthesize velocityFilter=_velocityFilter - In the implementation block
@property (assign,nonatomic) PKInputSmoother* inputSmoother;                                                      //@synthesize inputSmoother=_inputSmoother - In the implementation block
@property (assign,nonatomic) PKInputToOutputFilter* inputToOutputFilter;                                          //@synthesize inputToOutputFilter=_inputToOutputFilter - In the implementation block
@property (assign,nonatomic) PKStartCapsFilter* startCapFilter;                                                   //@synthesize startCapFilter=_startCapFilter - In the implementation block
@property (assign,nonatomic) PKAzimuthFilter* azimuthFilter;                                                      //@synthesize azimuthFilter=_azimuthFilter - In the implementation block
@property (assign,nonatomic) PKEndCapsFilter* endCapFilter;                                                       //@synthesize endCapFilter=_endCapFilter - In the implementation block
@property (assign,nonatomic) PKRulerExtremaFilter* rulerExtremaFilter;                                            //@synthesize rulerExtremaFilter=_rulerExtremaFilter - In the implementation block
@property (assign,nonatomic) PKEstimatedAltitudeAndAzimuthFilter* estimatedAltitudeAndAzimuthFilter;              //@synthesize estimatedAltitudeAndAzimuthFilter=_estimatedAltitudeAndAzimuthFilter - In the implementation block
@property (assign,nonatomic) PKCompressionFilter* compressionFilter;                                              //@synthesize compressionFilter=_compressionFilter - In the implementation block
@property (assign,nonatomic) PKDecompressionFilter* decompressionFilter;                                          //@synthesize decompressionFilter=_decompressionFilter - In the implementation block
@property (assign) BOOL isSnappedToRuler;                                                                         //@synthesize isSnappedToRuler=_isSnappedToRuler - In the implementation block
@property (readonly) BOOL lastPointIsMasked; 
@property (assign) double eraserIndicatorAlpha;                                                                   //@synthesize eraserIndicatorAlpha=_eraserIndicatorAlpha - In the implementation block
@property (assign,nonatomic) double inputScale;                                                                   //@synthesize inputScale=_inputScale - In the implementation block
@property (nonatomic,readonly) long long inputType; 
@property (nonatomic,readonly) unsigned long long activeInputProperties; 
+(void)initialize;
+(vector<PKInputPoint, std::__1::allocator<PKInputPoint> >*)inputPointsFromPoints:(const vector<CGPoint, std::__1::allocator<CGPoint> >*)arg1 velocityForDistanceFunction:(/*^block*/id)arg2 ;
+(vector<PKInputPoint, std::__1::allocator<PKInputPoint> >*)inputPointsFromPath:(CGPathRef)arg1 maxSegmentLength:(double)arg2 velocityForDistanceFunction:(/*^block*/id)arg3 ;
-(void)dealloc;
-(void)reset;
-(id)init;
-(CGPoint)lastPoint;
-(long long)inputType;
-(void)addPoint:(SCD_Struct_PK6)arg1 ;
-(double)inputScale;
-(void)setInputScale:(double)arg1 ;
-(BOOL)useRuler;
-(void)setLastPoint:(CGPoint)arg1 ;
-(void)addPoints:(vector<PKInputPoint, std::__1::allocator<PKInputPoint> >*)arg1 ;
-(id)newStrokeWithCurrentData;
-(id)newStrokeWithCurrentDataCopy;
-(unsigned long long)activeInputProperties;
-(void)drawingBeganWithStroke:(id)arg1 inputType:(long long)arg2 activeInputProperties:(unsigned long long)arg3 inputScale:(double)arg4 start:(/*^block*/id)arg5 ;
-(void)drawingUpdatePoint:(SCD_Struct_PK6)arg1 ;
-(void)drawingEndedWithCompletion:(/*^block*/id)arg1 ;
-(void)drawingCancelledWithCompletion:(/*^block*/id)arg1 ;
-(BOOL)isSnappedToRuler;
-(double)eraserIndicatorAlpha;
-(void)setEraserIndicatorAlpha:(double)arg1 ;
-(double)latestTimestamp;
-(double)latestNonPredictedTimestamp;
-(double)rulerWidth;
-(CGAffineTransform)rulerTransform;
-(void)setRulerTransform:(CGAffineTransform)arg1 ;
-(id)strokeFromPath:(CGPathRef)arg1 ink:(id)arg2 inputScale:(double)arg3 maxSegmentLength:(double)arg4 velocityForDistanceFunction:(/*^block*/id)arg5 ;
-(BOOL)lastPointIsMasked;
-(void)allowSnappingToRuler:(CGAffineTransform)arg1 width:(double)arg2 ;
-(long long)fetchFilteredPointsFromIndex:(long long)arg1 accessBlock:(/*^block*/id)arg2 ;
-(id)strokeFromPoints:(const vector<CGPoint, std::__1::allocator<CGPoint> >*)arg1 sourceStroke:(id)arg2 inputScale:(double)arg3 averageInputPoint:(SCD_Struct_PK6)arg4 ;
-(void)setUseRuler:(BOOL)arg1 ;
-(void)setCanSnapToRuler:(BOOL)arg1 ;
-(void)setIsSnappedToRuler:(BOOL)arg1 ;
-(void)setStrokeMaxForce:(double)arg1 ;
-(void)setTouchSensitivity:(double)arg1 ;
-(PKInputProvider<_PKStrokePoint>*)outputFilter;
-(void)setRulerWidth:(double)arg1 ;
-(BOOL)isSnappedToRulerTopSide;
-(double)distanceToRulerCenter:(CGPoint)arg1 ;
-(PKStrokePoint)outputCurrentStrokePoint:(SCD_Struct_PK6)arg1 ;
-(void)setIsSnappedToRulerTopSide:(BOOL)arg1 ;
-(CGPoint)snapPointToRuler:(CGPoint)arg1 ;
-(CGPoint)getRulerSnapLineOriginAndTangent:(CGPoint*)arg1 andNormal:(CGPoint*)arg2 ;
-(BOOL)canSnapToRuler;
-(BOOL)shouldSnapPointToRuler:(CGPoint)arg1 ;
-(void)snapToRuler;
-(void)maskToRuler;
-(PKDecompressionFilter*)decompressionFilter;
-(unsigned long long)copyInputUpdatedRangeFromIndex:(unsigned long long)arg1 into:(vector<PKInputPoint, std::__1::allocator<PKInputPoint> >*)arg2 ;
-(PKStrokePoint)outputPoint:(SCD_Struct_PK6)arg1 baseValues:(PKStrokePoint)arg2 ;
-(id)_newStrokeWithCurrentDataAndStrokeDataUUID:(id)arg1 ;
-(PKCompressionFilter*)compressionFilter;
-(void)drawingUpdateAllPoints;
-(void)drawingUpdateAllPointsDidTimeoutWithStrokeUUID:(id)arg1 ;
-(void)updateImmutableCount;
-(void)_drawingAddPoint:(SCD_Struct_PK6)arg1 ;
-(void)removePredictedTouches;
-(void)updateRulerSnapping;
-(id)strokeFromInputPoints:(vector<PKInputPoint, std::__1::allocator<PKInputPoint> >*)arg1 inputType:(long long)arg2 ink:(id)arg3 inputScale:(double)arg4 ;
-(id)strokeFromPoints:(CGPoint*)arg1 count:(unsigned long long)arg2 ink:(id)arg3 inputScale:(double)arg4 ;
-(vector<_PKStrokePoint, std::__1::allocator<_PKStrokePoint> >*)getUpdatedRangeFromIndex:(inout unsigned long long*)arg1 ;
-(vector<PKInputPoint, std::__1::allocator<PKInputPoint> >*)getInputUpdatedRangeFromIndex:(inout unsigned long long*)arg1 ;
-(void)closeStroke;
-(id)strokeFromLineSegments:(const vector<CGPoint, std::__1::allocator<CGPoint> >*)arg1 maxSegmentLength:(double)arg2 ink:(id)arg3 inputScale:(double)arg4 ;
-(double)strokeMaxForce;
-(NSObject*<OS_dispatch_queue>)outputQueue;
-(void)setOutputQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(double)touchSensitivity;
-(PKInputProviderInitial*)inputProvider;
-(void)setInputProvider:(PKInputProviderInitial*)arg1 ;
-(PKPixelSmoothingFilter*)pixelSmoothingFilter;
-(void)setPixelSmoothingFilter:(PKPixelSmoothingFilter*)arg1 ;
-(PKPointReductionFilter*)pointReductionFilter;
-(void)setPointReductionFilter:(PKPointReductionFilter*)arg1 ;
-(PKStartHookFilter*)startHookFilter;
-(void)setStartHookFilter:(PKStartHookFilter*)arg1 ;
-(PKEndHookFilter*)endHookFilter;
-(void)setEndHookFilter:(PKEndHookFilter*)arg1 ;
-(PKVelocityCalculationFilter*)velocityFilter;
-(void)setVelocityFilter:(PKVelocityCalculationFilter*)arg1 ;
-(PKInputSmoother*)inputSmoother;
-(void)setInputSmoother:(PKInputSmoother*)arg1 ;
-(PKInputToOutputFilter*)inputToOutputFilter;
-(void)setInputToOutputFilter:(PKInputToOutputFilter*)arg1 ;
-(PKStartCapsFilter*)startCapFilter;
-(void)setStartCapFilter:(PKStartCapsFilter*)arg1 ;
-(PKAzimuthFilter*)azimuthFilter;
-(void)setAzimuthFilter:(PKAzimuthFilter*)arg1 ;
-(PKEndCapsFilter*)endCapFilter;
-(void)setEndCapFilter:(PKEndCapsFilter*)arg1 ;
-(PKRulerExtremaFilter*)rulerExtremaFilter;
-(void)setRulerExtremaFilter:(PKRulerExtremaFilter*)arg1 ;
-(PKEstimatedAltitudeAndAzimuthFilter*)estimatedAltitudeAndAzimuthFilter;
-(void)setEstimatedAltitudeAndAzimuthFilter:(PKEstimatedAltitudeAndAzimuthFilter*)arg1 ;
-(void)setCompressionFilter:(PKCompressionFilter*)arg1 ;
-(void)setDecompressionFilter:(PKDecompressionFilter*)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:53:37 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/NanoTimeKit/ComplicationBundles/WorldClockComplications.bundle/WorldClockComplications
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ClockComplications/CLKCComplicationBundleDataSource.h>

@class NSString, CLLocation, NSTimer, NWCComplicationTimelineEntryModelCache;

@interface NWCSunriseComplicationBundleDataSource : CLKCComplicationBundleDataSource {

	BOOL _waitingForGeocodeRequest;
	NSString* _token;
	CLLocation* _delayedLocation;
	NSTimer* _geocodeRequestDelayTimer;
	NWCComplicationTimelineEntryModelCache* _cache;
	CLLocation* _displayedLocation;
	NSString* _locationName;

}

@property (nonatomic,retain) NSString * token;                                                             //@synthesize token=_token - In the implementation block
@property (nonatomic,retain) CLLocation * delayedLocation;                                                 //@synthesize delayedLocation=_delayedLocation - In the implementation block
@property (nonatomic,retain) NSTimer * geocodeRequestDelayTimer;                                           //@synthesize geocodeRequestDelayTimer=_geocodeRequestDelayTimer - In the implementation block
@property (nonatomic,retain) NWCComplicationTimelineEntryModelCache * cache;                               //@synthesize cache=_cache - In the implementation block
@property (nonatomic,retain) CLLocation * displayedLocation;                                               //@synthesize displayedLocation=_displayedLocation - In the implementation block
@property (nonatomic,retain) NSString * locationName;                                                      //@synthesize locationName=_locationName - In the implementation block
@property (assign,getter=isWaitingForGeocodeRequest,nonatomic) BOOL waitingForGeocodeRequest;              //@synthesize waitingForGeocodeRequest=_waitingForGeocodeRequest - In the implementation block
+(id)bundleIdentifier;
+(id)appIdentifier;
+(id)localizedAppName;
+(BOOL)acceptsComplicationFamily:(long long)arg1 forDevice:(id)arg2 ;
+(id)legacyNTKComplicationType;
-(void)setLocationName:(NSString *)arg1 ;
-(void)becomeActive;
-(void)setCache:(NWCComplicationTimelineEntryModelCache *)arg1 ;
-(NWCComplicationTimelineEntryModelCache *)cache;
-(NSString *)locationName;
-(void)setToken:(NSString *)arg1 ;
-(void)dealloc;
-(void)_invalidate;
-(NSString *)token;
-(void)_stopObserving;
-(void)_startObserving;
-(void)getTimelineEndDateWithHandler:(/*^block*/id)arg1 ;
-(void)getCurrentTimelineEntryWithHandler:(/*^block*/id)arg1 ;
-(void)getTimelineEntriesAfterDate:(id)arg1 limit:(unsigned long long)arg2 withHandler:(/*^block*/id)arg3 ;
-(id)initWithComplication:(id)arg1 family:(long long)arg2 forDevice:(id)arg3 ;
-(id)currentSwitcherTemplate;
-(BOOL)supportsTapAction;
-(void)getLaunchURLForTimelineEntryDate:(id)arg1 timeTravelDate:(id)arg2 withHandler:(/*^block*/id)arg3 ;
-(unsigned long long)timelineAnimationBehavior;
-(void)becomeInactive;
-(void)getSupportedTimeTravelDirectionsWithHandler:(/*^block*/id)arg1 ;
-(void)_handleLocation:(id)arg1 error:(id)arg2 ;
-(void)setDelayedLocation:(CLLocation *)arg1 ;
-(NSTimer *)geocodeRequestDelayTimer;
-(void)setGeocodeRequestDelayTimer:(NSTimer *)arg1 ;
-(void)setWaitingForGeocodeRequest:(BOOL)arg1 ;
-(id)_currentEntry:(BOOL)arg1 ;
-(CLLocation *)displayedLocation;
-(id)_timelineEntryFromEntry:(id)arg1 ;
-(id)_animationGroupForDate:(id)arg1 showingSunrise:(BOOL)arg2 constantSun:(long long)arg3 haveLocation:(BOOL)arg4 ;
-(BOOL)isWaitingForGeocodeRequest;
-(CLLocation *)delayedLocation;
-(void)_scheduleReverseGeocodeTimer:(double)arg1 ;
-(void)setDisplayedLocation:(CLLocation *)arg1 ;
-(BOOL)_needsToSendGeocodingRequest;
-(void)_geocodeRequestDelayTimerTriggerred;
-(id)_animationGroupForDate:(id)arg1 showingSunrise:(BOOL)arg2 constantSun:(long long)arg3 ;
-(BOOL)_needsCurrentEventEntry;
-(id)_animationGroupForNoLocation;
-(id)_entryModelsForDate:(id)arg1 nextEvaluationDate:(id*)arg2 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:44:23 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/RenderBox.framework/RenderBox
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <RenderBox/RenderBox-Structs.h>
@class RBDisplayList;

@interface RBSurface : NSObject {

	objc_ptr<RBDisplayList *> _displayList;
	unique_ptr<RB::Drawable, std::__1::default_delete<RB::Drawable> >* _drawable;
	objc_ptr<id<MTLDevice> > _device;
	refcounted_ptr<RB::Texture>* _texture;
	void* _lastItem;
	Bounds _dirty;
	BOOL _clearsBackground;
	BOOL _opaque;
	int _colorMode;
	double _scale;
	CGSize _size;
	SCD_Struct_RB31 _clearColor;

}

@property (assign,nonatomic) CGSize size;                              //@synthesize size=_size - In the implementation block
@property (assign,nonatomic) double scale;                             //@synthesize scale=_scale - In the implementation block
@property (assign,nonatomic) int colorMode;                            //@synthesize colorMode=_colorMode - In the implementation block
@property (assign,nonatomic) BOOL clearsBackground;                    //@synthesize clearsBackground=_clearsBackground - In the implementation block
@property (assign,nonatomic) SCD_Struct_RB31 clearColor;               //@synthesize clearColor=_clearColor - In the implementation block
@property (assign,getter=isOpaque,nonatomic) BOOL opaque;              //@synthesize opaque=_opaque - In the implementation block
@property (nonatomic,retain) RBDisplayList * displayList; 
-(BOOL)isOpaque;
-(int)colorMode;
-(void)setColorMode:(int)arg1 ;
-(void)invalidate;
-(SCD_Struct_RB31)clearColor;
-(double)scale;
-(void)setScale:(double)arg1 ;
-(void)setSize:(CGSize)arg1 ;
-(void)setClearColor:(SCD_Struct_RB31)arg1 ;
-(id)init;
-(CGSize)size;
-(void)setOpaque:(BOOL)arg1 ;
-(RBDisplayList *)displayList;
-(BOOL)clearsBackground;
-(void)setClearsBackground:(BOOL)arg1 ;
-(void)invalidateInRect:(Rect)arg1 ;
-(BOOL)_updateWithDevice:(Device*)arg1 frame:(RenderFrame*)arg2 synchronized:(BOOL)arg3 ;
-(void)setDisplayList:(RBDisplayList *)arg1 ;
-(void)setDisplayList:(id)arg1 dirtyRect:(CGRect)arg2 ;
-(CGImageRef)copyCGImageUsingDevice:(id)arg1 ;
-(void)updateUsingDevice:(id)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:53:07 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AvatarKit/AvatarKit-Structs.h>
#import <AvatarKit/AVTAvatar.h>

@class AVTAssetResourceCache, UIColor, SCNNode, SCNMaterial, NSDictionary, AVTComponent, AVTPreset, AVTColorPreset, AVTCompositor, NSString, AVTComponentInstance;

@interface AVTMemoji : AVTAvatar {

	unsigned long long _usageIntent;
	AVTAssetResourceCache* _resourceCache;
	UIColor* _backgroundColor;
	BOOL _needsUpdate;
	SCNNode* _componentContainer;
	unsigned long long _componentDirtyMask;
	SCNNode* _headNode;
	SCNNode* _avatarNode;
	SCNNode* _eyelashes;
	SCNNode* _eyesAndMouth;
	SCNMaterial* _eyeMaterial;
	NSDictionary* _eyesAndMouthSpecializationSettings;
	AVTComponent* _components[34];
	AVTPreset* _presets[33];
	AVTPreset* _resolvedPresets[33];
	AVTPreset* _currentPresetsForVariants[33];
	BOOL _hasPresetDependency[33];
	AVTColorPreset* _colorPresets[33][3];
	CGImageRef _combinedAOImage;
	BOOL _aoValid;
	AVTCompositor* _compositor;
	unsigned long long _compositorComponentDirtyMask;
	BOOL _hairPhysicsShouldIgnoreUpperNodes;
	NSString* _currentHatVariant;
	SCNNode* _skeletonRootNode;
	AVTComponentInstance* _componentInstances[34];
	NSDictionary* _specializationSettings;

}
+(float)rnd;
+(BOOL)supportsSecureCoding;
+(id)memoji;
+(unsigned char)classIdentifier;
+(id)neutralMemojiPresetsIdentifiersPerCategory;
+(id)neutralMemojiDataRepresentation;
+(id)neutralMemojiDataDictionary;
+(id)presetsDictionaryFromRecipe:(id)arg1 ;
+(id)memojiWithContentsOfURL:(id)arg1 usageIntent:(unsigned long long)arg2 error:(id*)arg3 ;
+(id)colorPresetFromColorData:(id)arg1 forCategory:(long long)arg2 colorIndex:(unsigned long long)arg3 version:(unsigned short)arg4 ;
+(float)rndRange:(float)arg1 :(float)arg2 ;
+(unsigned long long)rndIndex:(unsigned long long)arg1 ;
+(id)neutralMemoji;
+(id)memojiWithContentsOfURL:(id)arg1 error:(id*)arg2 ;
+(id)rndColor;
-(void)addComponent:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)invalidate;
-(id)components;
-(void)dealloc;
-(void)resetToDefault;
-(id)colorPresetForCategory:(long long)arg1 ;
-(id)backgroundColor;
-(void)update;
-(id)init;
-(id)colorPresetForCategory:(long long)arg1 colorIndex:(unsigned long long)arg2 ;
-(void)setColorPreset:(id)arg1 forCategory:(long long)arg2 colorIndex:(unsigned long long)arg3 ;
-(id)presetForCategory:(long long)arg1 ;
-(void)setPreset:(id)arg1 forCategory:(long long)arg2 ;
-(float)arScale;
-(id)componentWithType:(long long)arg1 ;
-(id)skinColor;
-(id)headNode;
-(void)setBackgroundColor:(id)arg1 ;
-(void)_update;
-(void)removeAllComponents;
-(void)_removeComponent:(id)arg1 ;
-(unsigned long long)usageIntent;
-(id)allBuiltinAssetNodes;
-(id)componentForType:(long long)arg1 ;
-(id)assetResourceCache;
-(id)resolvedPresetForCategory:(long long)arg1 ;
-(id)builtinAssetNodeForComponentType:(long long)arg1 ;
-(id)componentInstanceForType:(long long)arg1 ;
-(double)skinTextureSize;
-(id)specializationSettings;
-(id)avatarNode;
-(void)_encode:(id)arg1 ;
-(id)stickerPhysicsStateIdentifier;
-(id)initWithDictionaryRepresentation:(id)arg1 usageIntent:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)copyWithUsageIntent:(unsigned long long)arg1 ;
-(void)updateStickerMorphVariantsInNodeHierarchy:(id)arg1 ;
-(1)arOffset;
-(BOOL)usesSkinningForEyeOrientation;
-(void)setColorPreset:(id)arg1 forCategory:(long long)arg2 ;
-(void)morphTo:(id)arg1 ;
-(void)rebuildSpecializationSettings;
-(void)removeComponentWithType:(long long)arg1 ;
-(void)__decode:(id)arg1 isResettingToDefault:(BOOL)arg2 ;
-(void)setInstance:(id)arg1 forComponentType:(long long)arg2 ;
-(id)secondaryColorPresetForCategory:(long long)arg1 ;
-(void)componentMaterialDidUpdate:(id)arg1 ;
-(void)_applyColorPreset:(long long)arg1 ;
-(void)_applySecondaryColorPreset:(long long)arg1 colorIndex:(unsigned long long)arg2 ;
-(void)componentDidChangeForType:(long long)arg1 ;
-(unsigned long long)unapplyPresetDependenciesForPreset:(id)arg1 ;
-(unsigned long long)applyPresetDependenciesForPreset:(id)arg1 ;
-(void)_applyAllColorPresets:(long long)arg1 ;
-(void)_updateAO;
-(id)facialhairColor;
-(id)hairColor;
-(id)lipsColor;
-(id)eyebrowsColor;
-(CGImageRef)createSkinAO;
-(void)removeComponentAssetNodeFromParentNode:(id)arg1 ;
-(void)_invalidateAOImage;
-(void)addComponentAssetNode:(id)arg1 toNode:(id)arg2 ;
-(void)updateEyeLashes;
-(void)unapplyVariantDependenciesForPreset:(id)arg1 dirtyComponents:(unsigned long long)arg2 ;
-(void)applyVariantDependenciesForPreset:(id)arg1 dirtyComponents:(unsigned long long)arg2 ;
-(void)updateHighlightsForComponentType:(long long)arg1 ;
-(void)updateSkinMaterial:(id)arg1 ;
-(void)updateMorphVariantsInNodeHierarchy:(id)arg1 componentType:(long long)arg2 variant:(id)arg3 weight:(float)arg4 ;
-(id)_componentInstanceAssetNodeForDependencyOfType:(long long)arg1 isAssetSpecific:(BOOL)arg2 ;
-(void)_setMorphWeight:(float)arg1 forDependencyVariant:(id)arg2 ofType:(long long)arg3 isAssetSpecific:(BOOL)arg4 ;
-(void)_setVariantDependenciesEnabled:(BOOL)arg1 forPreset:(id)arg2 dirtyComponents:(unsigned long long)arg3 ;
-(void)_setAssetSpecificVariantDependenciesEnabled:(BOOL)arg1 forPreset:(id)arg2 dirtyComponents:(unsigned long long)arg3 ;
-(void)setSecondaryColorPreset:(id)arg1 forCategory:(long long)arg2 ;
-(void)randomize;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:43:44 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/CoreSpeech.framework/CoreSpeech
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/CSAudioRecorderDelegate.h>
#import <libobjc.A.dylib/CSAudioServerCrashMonitorDelegate.h>
#import <libobjc.A.dylib/CSAudioPreprocessorDelegate.h>
#import <libobjc.A.dylib/CSAudioStreamProviding.h>
#import <libobjc.A.dylib/CSAudioSessionProviding.h>
#import <libobjc.A.dylib/CSAudioMetricProviding.h>
#import <libobjc.A.dylib/CSAudioAlertProviding.h>
#import <libobjc.A.dylib/CSAudioMeterProviding.h>
#import <libobjc.A.dylib/CSTriggerInfoProviding.h>

@protocol OS_dispatch_queue, CSAudioProviderDelegate, CSAudioSessionProvidingDelegate, CSAudioAlertProvidingDelegate, OS_dispatch_group;
@class NSString, NSObject, CSAudioRecorder, NSHashTable, NSMutableArray, NSMutableDictionary, CSAudioCircularBuffer, CSAudioRecordContext, CSAudioPreprocessor, CSOSTransaction, NSUUID;

@interface CSAudioProvider : NSObject <CSAudioRecorderDelegate, CSAudioServerCrashMonitorDelegate, CSAudioPreprocessorDelegate, CSAudioStreamProviding, CSAudioSessionProviding, CSAudioMetricProviding, CSAudioAlertProviding, CSAudioMeterProviding, CSTriggerInfoProviding> {

	BOOL _audioSystemRecovering;
	BOOL _waitingForAlertFinish;
	NSString* _UUID;
	NSObject*<OS_dispatch_queue> _recordQueue;
	NSObject*<OS_dispatch_queue> _loggingQueue;
	CSAudioRecorder* _audioRecorder;
	unsigned long long _streamState;
	NSHashTable* _startPendingStreams;
	NSHashTable* _startPendingOnStoppingStreams;
	NSHashTable* _alertPlaybackFinishWaitingStreams;
	NSHashTable* _streams;
	NSHashTable* _stopPendingStreams;
	NSMutableArray* _pendingStartCompletions;
	NSMutableArray* _alertPlaybackFinishWaitingCompletions;
	NSMutableArray* _pendingStopCompletions;
	NSMutableDictionary* _startPendingOnStoppingStreamToCompletionDict;
	id<CSAudioProviderDelegate> _providerDelegate;
	id<CSAudioSessionProvidingDelegate> _sessionDelegate;
	NSMutableArray* _streamHolders;
	NSHashTable* _historicalBufferRequestStreams;
	CSAudioCircularBuffer* _circularBuffer;
	id<CSAudioAlertProvidingDelegate> _alertDelegate;
	CSAudioRecordContext* _lastAudioRecorderContext;
	CSAudioPreprocessor* _audioPreprocessor;
	CSOSTransaction* _recordingTransaction;
	NSObject*<OS_dispatch_group> _recordingWillStartGroup;
	unsigned long long _audioStreamHandleId;
	NSUUID* _alertPlaybackFinishTimeoutToken;
	NSUUID* _startRecordingWatchDogToken;
	NSUUID* _stopRecordingWatchDogToken;
	unsigned long long _circularBufferStartHostTime;
	unsigned long long _circularBufferStartSampleCount;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> recordQueue;                                        //@synthesize recordQueue=_recordQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> loggingQueue;                                       //@synthesize loggingQueue=_loggingQueue - In the implementation block
@property (nonatomic,retain) CSAudioRecorder * audioRecorder;                                                 //@synthesize audioRecorder=_audioRecorder - In the implementation block
@property (assign,nonatomic) unsigned long long streamState;                                                  //@synthesize streamState=_streamState - In the implementation block
@property (nonatomic,retain) NSHashTable * startPendingStreams;                                               //@synthesize startPendingStreams=_startPendingStreams - In the implementation block
@property (nonatomic,retain) NSHashTable * startPendingOnStoppingStreams;                                     //@synthesize startPendingOnStoppingStreams=_startPendingOnStoppingStreams - In the implementation block
@property (nonatomic,retain) NSHashTable * alertPlaybackFinishWaitingStreams;                                 //@synthesize alertPlaybackFinishWaitingStreams=_alertPlaybackFinishWaitingStreams - In the implementation block
@property (nonatomic,retain) NSHashTable * streams;                                                           //@synthesize streams=_streams - In the implementation block
@property (nonatomic,retain) NSHashTable * stopPendingStreams;                                                //@synthesize stopPendingStreams=_stopPendingStreams - In the implementation block
@property (nonatomic,retain) NSMutableArray * pendingStartCompletions;                                        //@synthesize pendingStartCompletions=_pendingStartCompletions - In the implementation block
@property (nonatomic,retain) NSMutableArray * alertPlaybackFinishWaitingCompletions;                          //@synthesize alertPlaybackFinishWaitingCompletions=_alertPlaybackFinishWaitingCompletions - In the implementation block
@property (nonatomic,retain) NSMutableArray * pendingStopCompletions;                                         //@synthesize pendingStopCompletions=_pendingStopCompletions - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * startPendingOnStoppingStreamToCompletionDict;              //@synthesize startPendingOnStoppingStreamToCompletionDict=_startPendingOnStoppingStreamToCompletionDict - In the implementation block
@property (assign,nonatomic,__weak) id<CSAudioProviderDelegate> providerDelegate;                             //@synthesize providerDelegate=_providerDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<CSAudioSessionProvidingDelegate> sessionDelegate;                      //@synthesize sessionDelegate=_sessionDelegate - In the implementation block
@property (nonatomic,retain) NSMutableArray * streamHolders;                                                  //@synthesize streamHolders=_streamHolders - In the implementation block
@property (nonatomic,retain) NSHashTable * historicalBufferRequestStreams;                                    //@synthesize historicalBufferRequestStreams=_historicalBufferRequestStreams - In the implementation block
@property (nonatomic,retain) CSAudioCircularBuffer * circularBuffer;                                          //@synthesize circularBuffer=_circularBuffer - In the implementation block
@property (assign,nonatomic,__weak) id<CSAudioAlertProvidingDelegate> alertDelegate;                          //@synthesize alertDelegate=_alertDelegate - In the implementation block
@property (nonatomic,retain) CSAudioRecordContext * lastAudioRecorderContext;                                 //@synthesize lastAudioRecorderContext=_lastAudioRecorderContext - In the implementation block
@property (assign,nonatomic) BOOL audioSystemRecovering;                                                      //@synthesize audioSystemRecovering=_audioSystemRecovering - In the implementation block
@property (nonatomic,retain) CSAudioPreprocessor * audioPreprocessor;                                         //@synthesize audioPreprocessor=_audioPreprocessor - In the implementation block
@property (nonatomic,retain) CSOSTransaction * recordingTransaction;                                          //@synthesize recordingTransaction=_recordingTransaction - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_group> recordingWillStartGroup;                            //@synthesize recordingWillStartGroup=_recordingWillStartGroup - In the implementation block
@property (assign,nonatomic) BOOL waitingForAlertFinish;                                                      //@synthesize waitingForAlertFinish=_waitingForAlertFinish - In the implementation block
@property (assign,nonatomic) unsigned long long audioStreamHandleId;                                          //@synthesize audioStreamHandleId=_audioStreamHandleId - In the implementation block
@property (nonatomic,retain) NSUUID * alertPlaybackFinishTimeoutToken;                                        //@synthesize alertPlaybackFinishTimeoutToken=_alertPlaybackFinishTimeoutToken - In the implementation block
@property (nonatomic,retain) NSUUID * startRecordingWatchDogToken;                                            //@synthesize startRecordingWatchDogToken=_startRecordingWatchDogToken - In the implementation block
@property (nonatomic,retain) NSUUID * stopRecordingWatchDogToken;                                             //@synthesize stopRecordingWatchDogToken=_stopRecordingWatchDogToken - In the implementation block
@property (assign,nonatomic) unsigned long long circularBufferStartHostTime;                                  //@synthesize circularBufferStartHostTime=_circularBufferStartHostTime - In the implementation block
@property (assign,nonatomic) unsigned long long circularBufferStartSampleCount;                               //@synthesize circularBufferStartSampleCount=_circularBufferStartSampleCount - In the implementation block
@property (nonatomic,readonly) NSString * UUID;                                                               //@synthesize UUID=_UUID - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id<CSAudioAlertProvidingDelegate>)alertDelegate;
-(void)setSessionDelegate:(id<CSAudioSessionProvidingDelegate>)arg1 ;
-(BOOL)playAlertSoundForType:(long long)arg1 ;
-(NSObject*<OS_dispatch_queue>)loggingQueue;
-(void)audioRecorderBufferAvailable:(id)arg1 audioStreamHandleId:(unsigned long long)arg2 buffer:(id)arg3 remoteVAD:(id)arg4 atTime:(unsigned long long)arg5 ;
-(NSHashTable *)streams;
-(id)holdAudioStreamWithDescription:(id)arg1 timeout:(double)arg2 ;
-(void)audioStreamWithRequest:(id)arg1 streamName:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)saveRecordingBufferToEndFrom:(unsigned long long)arg1 toURL:(id)arg2 ;
-(void)configureAlertBehavior:(id)arg1 ;
-(void)setDuckOthersOption:(BOOL)arg1 ;
-(float)averagePowerForChannel:(unsigned long long)arg1 ;
-(unsigned long long)streamState;
-(void)setStreamState:(unsigned long long)arg1 ;
-(id<CSAudioProviderDelegate>)providerDelegate;
-(BOOL)setCurrentContext:(id)arg1 error:(id*)arg2 ;
-(void)setProviderDelegate:(id<CSAudioProviderDelegate>)arg1 ;
-(NSString *)UUID;
-(void)audioRecorderWillBeDestroyed:(id)arg1 ;
-(id<CSAudioSessionProvidingDelegate>)sessionDelegate;
-(void)dealloc;
-(void)setAudioAlertDelegate:(id)arg1 ;
-(BOOL)playRecordStartingAlertAndResetEndpointer;
-(void)setRecordQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)audioRecorderBufferAvailable:(id)arg1 audioStreamHandleId:(unsigned long long)arg2 buffer:(id)arg3 ;
-(void)updateMeters;
-(id)recordDeviceInfo;
-(void)start;
-(BOOL)activateAudioSessionWithReason:(unsigned long long)arg1 dynamicAttribute:(unsigned long long)arg2 bundleID:(id)arg3 error:(id*)arg4 ;
-(id)audioMetric;
-(void)enableMiniDucking:(BOOL)arg1 ;
-(BOOL)duckOthersOption;
-(void)setAlertDelegate:(id<CSAudioAlertProvidingDelegate>)arg1 ;
-(BOOL)setAlertSoundFromURL:(id)arg1 forType:(long long)arg2 ;
-(void)enableSmartRoutingConsideration:(BOOL)arg1 ;
-(BOOL)prepareAudioStreamSync:(id)arg1 request:(id)arg2 error:(id*)arg3 ;
-(BOOL)prewarmAudioSessionWithError:(id*)arg1 ;
-(id)recordRoute;
-(NSObject*<OS_dispatch_group>)recordingWillStartGroup;
-(void)triggerInfoForContext:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)audioChunkToEndFrom:(unsigned long long)arg1 ;
-(CSAudioRecorder *)audioRecorder;
-(unsigned long long)alertStartTime;
-(float)peakPowerForChannel:(unsigned long long)arg1 ;
-(BOOL)isRecording;
-(void)setAudioRecorder:(CSAudioRecorder *)arg1 ;
-(void)stopAudioStream:(id)arg1 option:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)playbackRoute;
-(id)audioStreamWithRequest:(id)arg1 streamName:(id)arg2 error:(id*)arg3 ;
-(void)CSAudioServerCrashMonitorDidReceiveServerRestart:(id)arg1 ;
-(id)recordSettings;
-(void)startAudioStream:(id)arg1 option:(id)arg2 completion:(/*^block*/id)arg3 ;
-(NSObject*<OS_dispatch_queue>)recordQueue;
-(BOOL)isNarrowBand;
-(void)saveRecordingBufferFrom:(unsigned long long)arg1 to:(unsigned long long)arg2 toURL:(id)arg3 ;
-(BOOL)deactivateAudioSession:(unsigned long long)arg1 error:(id*)arg2 ;
-(void)setRecordingWillStartGroup:(NSObject*<OS_dispatch_group>)arg1 ;
-(void)prepareAudioStream:(id)arg1 request:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)cancelAudioStreamHold:(id)arg1 ;
-(void)setAudioSessionDelegate:(id)arg1 ;
-(void)setMeteringEnabled:(BOOL)arg1 ;
-(void)CSAudioServerCrashMonitorDidReceiveServerCrash:(id)arg1 ;
-(id)audioChunkFrom:(unsigned long long)arg1 to:(unsigned long long)arg2 ;
-(unsigned long long)audioStreamHandleId;
-(CSAudioCircularBuffer *)circularBuffer;
-(void)setCircularBuffer:(CSAudioCircularBuffer *)arg1 ;
-(void)audioPreprocessor:(id)arg1 hasAvailableBuffer:(id)arg2 atTime:(unsigned long long)arg3 ;
-(void)audioRecorderStreamHandleIdInvalidated:(unsigned long long)arg1 ;
-(void)audioRecorderDidStartRecord:(id)arg1 audioStreamHandleId:(unsigned long long)arg2 successfully:(BOOL)arg3 error:(id)arg4 ;
-(void)audioRecorderDidStopRecord:(id)arg1 audioStreamHandleId:(unsigned long long)arg2 reason:(long long)arg3 ;
-(id)initWithAudioStreamHandleId:(unsigned long long)arg1 audioRecorder:(id)arg2 ;
-(void)setAudioProviderDelegate:(id)arg1 ;
-(void)audioRecorderRecordHardwareConfigurationDidChange:(id)arg1 toConfiguration:(long long)arg2 ;
-(void)audioRecorderDidFinishAlertPlayback:(id)arg1 ofType:(long long)arg2 error:(id)arg3 ;
-(void)audioRecorderBeginRecordInterruption:(id)arg1 ;
-(void)audioRecorderBeginRecordInterruption:(id)arg1 withContext:(id)arg2 ;
-(void)audioRecorderEndRecordInterruption:(id)arg1 ;
-(void)audioRecorder:(id)arg1 willSetAudioSessionActive:(BOOL)arg2 ;
-(void)audioRecorder:(id)arg1 didSetAudioSessionActive:(BOOL)arg2 ;
-(void)audioRecorderDisconnected:(id)arg1 ;
-(void)audioRecorderBuiltInAudioStreamInvalidated:(id)arg1 error:(id)arg2 ;
-(BOOL)_activateAudioSessionWithReason:(unsigned long long)arg1 error:(id*)arg2 ;
-(void)setAudioStreamHandleId:(unsigned long long)arg1 ;
-(void)notifyProviderContextChanged;
-(void)_holdRecordingExceptionIfNeeded:(BOOL)arg1 ;
-(id)_streamStateName:(unsigned long long)arg1 ;
-(BOOL)_prepareAudioStreamSync:(id)arg1 request:(id)arg2 error:(id*)arg3 ;
-(NSHashTable *)historicalBufferRequestStreams;
-(void)_createCircularBufferIfNeeded;
-(id)_audioStreamWithRequest:(id)arg1 streamName:(id)arg2 error:(id*)arg3 ;
-(void)_handleAudioSystemFailure;
-(void)_startAudioStream:(id)arg1 option:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_prepareAudioStream:(id)arg1 request:(id)arg2 completion:(/*^block*/id)arg3 ;
-(NSHashTable *)startPendingOnStoppingStreams;
-(NSMutableDictionary *)startPendingOnStoppingStreamToCompletionDict;
-(BOOL)_didPlayStartAlertSoundForSiri:(id)arg1 audioStream:(id)arg2 ;
-(NSHashTable *)alertPlaybackFinishWaitingStreams;
-(NSMutableArray *)alertPlaybackFinishWaitingCompletions;
-(void)_scheduleAlertFinishTimeout:(double)arg1 ;
-(void)_switchToRecordingMode;
-(unsigned long long)circularBufferStartHostTime;
-(unsigned long long)circularBufferStartSampleCount;
-(NSHashTable *)startPendingStreams;
-(NSMutableArray *)pendingStartCompletions;
-(void)_holdRecordingTransactionIfNeeded;
-(void)_scheduleDidStartRecordingDelegateWatchDog;
-(void)_resetCircularBufferStartTime;
-(void)setCircularBufferStartHostTime:(unsigned long long)arg1 ;
-(void)setCircularBufferStartSampleCount:(unsigned long long)arg1 ;
-(void)_clearDidStartRecordingDelegateWatchDog;
-(void)_releaseRecordingTransactionIfNeeded;
-(void)_clearDidStopRecordingDelegateWatchDog;
-(void)_preEpilogueAudioStream;
-(NSHashTable *)stopPendingStreams;
-(NSMutableArray *)pendingStopCompletions;
-(void)_postEpilogueAudioStream;
-(BOOL)_shouldHandleStartPendingOnStopping:(unsigned long long)arg1 withStopReason:(long long)arg2 ;
-(void)_stopAudioStream:(id)arg1 option:(id)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)_shouldStopRecording;
-(void)_scheduleDidStopRecordingDelegateWatchDog;
-(void)_switchToListeningMode;
-(id)_audioChunkFrom:(unsigned long long)arg1 to:(unsigned long long)arg2 ;
-(void)_saveRecordingBufferFrom:(unsigned long long)arg1 to:(unsigned long long)arg2 toURL:(id)arg3 ;
-(NSMutableArray *)streamHolders;
-(BOOL)_deactivateAudioSession:(unsigned long long)arg1 error:(id*)arg2 ;
-(BOOL)_isVoiceTriggerInfoAvailableLocally:(id)arg1 ;
-(void)_processAudioBuffer:(id)arg1 remoteVAD:(id)arg2 atTime:(unsigned long long)arg3 ;
-(void)_handleDidStartAudioStreamWithResult:(BOOL)arg1 error:(id)arg2 ;
-(void)_handleDidStopAudioStreamWithReason:(long long)arg1 ;
-(void)_fetchHistoricalAudioAndForwardToStream:(id)arg1 remoteVAD:(id)arg2 ;
-(void)_didReceiveFinishStartAlertPlaybackAt:(unsigned long long)arg1 ;
-(void)_schduleDidStartRecordingDelegateWatchDogWithToken:(id)arg1 ;
-(void)_scheduleDidStopRecordingDelegateWatchDog:(id)arg1 ;
-(void)_tearDownCircularBufferIfNeeded;
-(void)setLoggingQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setStartPendingStreams:(NSHashTable *)arg1 ;
-(void)setStartPendingOnStoppingStreams:(NSHashTable *)arg1 ;
-(void)setAlertPlaybackFinishWaitingStreams:(NSHashTable *)arg1 ;
-(void)setStreams:(NSHashTable *)arg1 ;
-(void)setStopPendingStreams:(NSHashTable *)arg1 ;
-(void)setPendingStartCompletions:(NSMutableArray *)arg1 ;
-(void)setAlertPlaybackFinishWaitingCompletions:(NSMutableArray *)arg1 ;
-(void)setPendingStopCompletions:(NSMutableArray *)arg1 ;
-(void)setStartPendingOnStoppingStreamToCompletionDict:(NSMutableDictionary *)arg1 ;
-(void)setStreamHolders:(NSMutableArray *)arg1 ;
-(void)setHistoricalBufferRequestStreams:(NSHashTable *)arg1 ;
-(CSAudioRecordContext *)lastAudioRecorderContext;
-(void)setLastAudioRecorderContext:(CSAudioRecordContext *)arg1 ;
-(BOOL)audioSystemRecovering;
-(void)setAudioSystemRecovering:(BOOL)arg1 ;
-(CSAudioPreprocessor *)audioPreprocessor;
-(void)setAudioPreprocessor:(CSAudioPreprocessor *)arg1 ;
-(CSOSTransaction *)recordingTransaction;
-(void)setRecordingTransaction:(CSOSTransaction *)arg1 ;
-(BOOL)waitingForAlertFinish;
-(void)setWaitingForAlertFinish:(BOOL)arg1 ;
-(NSUUID *)alertPlaybackFinishTimeoutToken;
-(void)setAlertPlaybackFinishTimeoutToken:(NSUUID *)arg1 ;
-(NSUUID *)startRecordingWatchDogToken;
-(void)setStartRecordingWatchDogToken:(NSUUID *)arg1 ;
-(NSUUID *)stopRecordingWatchDogToken;
-(void)setStopRecordingWatchDogToken:(NSUUID *)arg1 ;
@end


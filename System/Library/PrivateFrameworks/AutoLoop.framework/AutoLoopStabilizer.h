/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:53:55 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/AutoLoop.framework/AutoLoop
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AutoLoop/AutoLoop-Structs.h>
#import <libobjc.A.dylib/ICFlowControl.h>

@class AVAsset, NSURL, NSString, NSDictionary, NSArray;

@interface AutoLoopStabilizer : NSObject <ICFlowControl> {

	BOOL drawFeaturesFlag;
	BOOL onlyProcessForHighQualityTripod;
	BOOL doLoopClosureCorrection;
	BOOL _useLimitedTime;
	BOOL _disableGPUStabilization;
	BOOL _optimizeProcessingForMemory;
	BOOL _didDrop;
	float progressValue;
	int canceledAnalysis;
	float necessaryCropGainFractionPerDroppedFrame;
	float minConfidenceForTripodAccept;
	float confidenceHighQualityThreshold;
	float minimumHighQualityConfidenceValue;
	float cropRatioMinimum;
	float alwaysAcceptedTripodCropRatio;
	float _minAllowedRemainingTripodCrop;
	int _naturalTimeScale;
	int _analysisResult;
	int _lastStabilizationResult;
	float _lastTripodQuality;
	AVAsset* movieAssetIn;
	NSURL* statsFileOutURL;
	unsigned long long frameSearchLength;
	NSString* currentStatusString;
	long long droppedStartFrameCount;
	long long droppedEndFrameCount;
	void* icCorrectionResultRef;
	NSDictionary* featuresDictionary;
	/*^block*/id _statusUpdateBlock;
	NSArray* _presentationTimesOfFramesToSkip;
	NSArray* _skipFrameTimes;
	CGSize inputMovieDimensions;
	SCD_Struct_Au1 refFrameTime;
	SCD_Struct_Au1 _trimStart;
	SCD_Struct_Au1 _trimLength;
	SCD_Struct_Au1 _minimumFrameDuration;
	SCD_Struct_Au1 _maxAllowedTrimTime;
	SCD_Struct_Au1 _firstFrameTimeAfterDrop;
	SCD_Struct_Au1 _lastFrameTimeAfterDrop;
	CGRect cropRect;

}

@property (assign,nonatomic) BOOL didDrop;                                                //@synthesize didDrop=_didDrop - In the implementation block
@property (assign,nonatomic) SCD_Struct_Au1 firstFrameTimeAfterDrop;                      //@synthesize firstFrameTimeAfterDrop=_firstFrameTimeAfterDrop - In the implementation block
@property (assign,nonatomic) SCD_Struct_Au1 lastFrameTimeAfterDrop;                       //@synthesize lastFrameTimeAfterDrop=_lastFrameTimeAfterDrop - In the implementation block
@property (assign) int canceledAnalysis; 
@property (assign) float progressValue; 
@property (assign,nonatomic) long long droppedStartFrameCount; 
@property (assign,nonatomic) long long droppedEndFrameCount; 
@property (readonly) float lastTripodQuality;                                             //@synthesize lastTripodQuality=_lastTripodQuality - In the implementation block
@property (retain) NSString * currentStatusString; 
@property (nonatomic,retain) AVAsset * movieAssetIn; 
@property (nonatomic,retain) NSURL * statsFileOutURL; 
@property (assign,nonatomic) unsigned long long frameSearchLength; 
@property (assign,nonatomic) float minAllowedRemainingTripodCrop;                         //@synthesize minAllowedRemainingTripodCrop=_minAllowedRemainingTripodCrop - In the implementation block
@property (nonatomic,copy) id statusUpdateBlock;                                          //@synthesize statusUpdateBlock=_statusUpdateBlock - In the implementation block
@property (assign,nonatomic) BOOL drawFeaturesFlag; 
@property (assign) BOOL doLoopClosureCorrection; 
@property (assign,nonatomic) BOOL useLimitedTime;                                         //@synthesize useLimitedTime=_useLimitedTime - In the implementation block
@property (assign,nonatomic) SCD_Struct_Au1 trimStart;                                    //@synthesize trimStart=_trimStart - In the implementation block
@property (assign,nonatomic) SCD_Struct_Au1 trimLength;                                   //@synthesize trimLength=_trimLength - In the implementation block
@property (assign,nonatomic) int naturalTimeScale;                                        //@synthesize naturalTimeScale=_naturalTimeScale - In the implementation block
@property (assign,nonatomic) SCD_Struct_Au1 minimumFrameDuration;                         //@synthesize minimumFrameDuration=_minimumFrameDuration - In the implementation block
@property (assign,nonatomic) SCD_Struct_Au1 maxAllowedTrimTime;                           //@synthesize maxAllowedTrimTime=_maxAllowedTrimTime - In the implementation block
@property (retain) NSArray * presentationTimesOfFramesToSkip;                             //@synthesize presentationTimesOfFramesToSkip=_presentationTimesOfFramesToSkip - In the implementation block
@property (nonatomic,readonly) CGSize inputMovieDimensions; 
@property (nonatomic,readonly) void* icCorrectionResultRef; 
@property (nonatomic,readonly) int analysisResult;                                        //@synthesize analysisResult=_analysisResult - In the implementation block
@property (nonatomic,readonly) int lastStabilizationResult;                               //@synthesize lastStabilizationResult=_lastStabilizationResult - In the implementation block
@property (nonatomic,readonly) CGRect cropRect; 
@property (assign,nonatomic) SCD_Struct_Au1 refFrameTime; 
@property (nonatomic,retain) NSArray * skipFrameTimes;                                    //@synthesize skipFrameTimes=_skipFrameTimes - In the implementation block
@property (assign,nonatomic) float necessaryCropGainFractionPerDroppedFrame; 
@property (assign,nonatomic) float alwaysAcceptedTripodCropRatio; 
@property (assign,nonatomic) float minConfidenceForTripodAccept; 
@property (assign,nonatomic) float confidenceHighQualityThreshold; 
@property (assign,nonatomic) float minimumHighQualityConfidenceValue; 
@property (assign,nonatomic) float cropRatioMinimum; 
@property (retain) NSDictionary * featuresDictionary; 
@property (assign,nonatomic) BOOL onlyProcessForHighQualityTripod; 
@property (assign,nonatomic) BOOL disableGPUStabilization;                                //@synthesize disableGPUStabilization=_disableGPUStabilization - In the implementation block
@property (assign,nonatomic) BOOL optimizeProcessingForMemory;                            //@synthesize optimizeProcessingForMemory=_optimizeProcessingForMemory - In the implementation block
-(CGRect)cropRect;
-(BOOL)didDrop;
-(SCD_Struct_Au1)minimumFrameDuration;
-(float)progressValue;
-(int)analysisResult;
-(void)setProgressValue:(float)arg1 ;
-(void)dealloc;
-(id)init;
-(void)setDidDrop:(BOOL)arg1 ;
-(int)naturalTimeScale;
-(void)setNaturalTimeScale:(int)arg1 ;
-(void)setRefFrameTime:(SCD_Struct_Au1)arg1 ;
-(void)setMinimumFrameDuration:(SCD_Struct_Au1)arg1 ;
-(void)setMaxAllowedTrimTime:(SCD_Struct_Au1)arg1 ;
-(void)setUseLimitedTime:(BOOL)arg1 ;
-(void)setTrimStart:(SCD_Struct_Au1)arg1 ;
-(void)setTrimLength:(SCD_Struct_Au1)arg1 ;
-(void)setDisableGPUStabilization:(BOOL)arg1 ;
-(void)setOptimizeProcessingForMemory:(BOOL)arg1 ;
-(unsigned long long)FindFrameIndexForReferenceTimeInHomographies:(const vector<CMTime, std::__1::allocator<CMTime> >*)arg1 ;
-(AVAsset *)movieAssetIn;
-(id)getVideoTrack;
-(BOOL)useLimitedTime;
-(SCD_Struct_Au1)trimStart;
-(SCD_Struct_Au1)trimLength;
-(SCD_Struct_Au1)maxAllowedTrimTime;
-(BOOL)CheckForTripodOKInHomographies:(const void*)arg1 firstIndex:(unsigned long long)arg2 lastIndex:(unsigned long long)arg3 refIndex:(unsigned long long)arg4 cropRectOut:(CGRect*)arg5 minConfidence:(float)arg6 confidenceOut:(float*)arg7 ;
-(float)CropRatio:(const CGRect*)arg1 ;
-(void)setFirstFrameTimeAfterDrop:(SCD_Struct_Au1)arg1 ;
-(void)setLastFrameTimeAfterDrop:(SCD_Struct_Au1)arg1 ;
-(BOOL)updateStabilizerStatus;
-(NSURL *)statsFileOutURL;
-(BOOL)getNaturalTimeScaleForVideoTrackInAsset;
-(SCD_Struct_Au4)determinePreciseTimeRange;
-(BOOL)disableGPUStabilization;
-(BOOL)optimizeProcessingForMemory;
-(BOOL)tripodOKWithTrimming:(const void*)arg1 frameTimes:(const vector<CMTime, std::__1::allocator<CMTime> >*)arg2 minConfidence:(float)arg3 ;
-(int)FindAcceptableTripodSegmentForInput:(const void*)arg1 frameTimes:(const vector<CMTime, std::__1::allocator<CMTime> >*)arg2 ;
-(BOOL)CropRectValid:(const CGRect*)arg1 ;
-(BOOL)ICShouldBeCanceled;
-(void)ICReportProgress:(float)arg1 ;
-(SCD_Struct_Au1)GetPreciseReferenceTimeFromHomographies:(const vector<CMTime, std::__1::allocator<CMTime> >*)arg1 ;
-(int)analyzeForAutoloopWithDirect:(BOOL)arg1 toAnalysisOutput:(void*)arg2 ;
-(int)processStabilizationAnalysis:(void*)arg1 forcePassThru:(BOOL)arg2 forceSmoothing:(BOOL)arg3 forceSequentialTripod:(BOOL)arg4 ;
-(int)processStabilizationAnalysisForCinematicL1:(void*)arg1 ;
-(void)setMovieAssetIn:(AVAsset *)arg1 ;
-(void)setStatsFileOutURL:(NSURL *)arg1 ;
-(unsigned long long)frameSearchLength;
-(void)setFrameSearchLength:(unsigned long long)arg1 ;
-(NSString *)currentStatusString;
-(void)setCurrentStatusString:(NSString *)arg1 ;
-(BOOL)drawFeaturesFlag;
-(void)setDrawFeaturesFlag:(BOOL)arg1 ;
-(long long)droppedStartFrameCount;
-(void)setDroppedStartFrameCount:(long long)arg1 ;
-(long long)droppedEndFrameCount;
-(void)setDroppedEndFrameCount:(long long)arg1 ;
-(void*)icCorrectionResultRef;
-(CGSize)inputMovieDimensions;
-(SCD_Struct_Au1)refFrameTime;
-(int)canceledAnalysis;
-(void)setCanceledAnalysis:(int)arg1 ;
-(float)necessaryCropGainFractionPerDroppedFrame;
-(void)setNecessaryCropGainFractionPerDroppedFrame:(float)arg1 ;
-(float)minConfidenceForTripodAccept;
-(void)setMinConfidenceForTripodAccept:(float)arg1 ;
-(float)confidenceHighQualityThreshold;
-(void)setConfidenceHighQualityThreshold:(float)arg1 ;
-(float)minimumHighQualityConfidenceValue;
-(void)setMinimumHighQualityConfidenceValue:(float)arg1 ;
-(float)cropRatioMinimum;
-(void)setCropRatioMinimum:(float)arg1 ;
-(BOOL)onlyProcessForHighQualityTripod;
-(void)setOnlyProcessForHighQualityTripod:(BOOL)arg1 ;
-(float)alwaysAcceptedTripodCropRatio;
-(void)setAlwaysAcceptedTripodCropRatio:(float)arg1 ;
-(BOOL)doLoopClosureCorrection;
-(void)setDoLoopClosureCorrection:(BOOL)arg1 ;
-(NSDictionary *)featuresDictionary;
-(void)setFeaturesDictionary:(NSDictionary *)arg1 ;
-(float)minAllowedRemainingTripodCrop;
-(void)setMinAllowedRemainingTripodCrop:(float)arg1 ;
-(id)statusUpdateBlock;
-(void)setStatusUpdateBlock:(id)arg1 ;
-(NSArray *)presentationTimesOfFramesToSkip;
-(void)setPresentationTimesOfFramesToSkip:(NSArray *)arg1 ;
-(int)lastStabilizationResult;
-(NSArray *)skipFrameTimes;
-(void)setSkipFrameTimes:(NSArray *)arg1 ;
-(SCD_Struct_Au1)firstFrameTimeAfterDrop;
-(SCD_Struct_Au1)lastFrameTimeAfterDrop;
-(float)lastTripodQuality;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:26:11 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/SMBClientEngine.framework/SMBClientEngine
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_nw_endpoint, OS_dispatch_semaphore, OS_dispatch_queue, OS_dispatch_source, OS_nw_connection;
#import <SMBClientEngine/SMBClientEngine-Structs.h>
@class SMBPiston, NSObject, NSMutableArray, NSString;

@interface SMBSocket : NSObject {

	SMBPiston* pd;
	unsigned long long state;
	NSObject*<OS_nw_endpoint> endpoint;
	NSObject*<OS_nw_endpoint> remote_endpoint;
	NSObject*<OS_dispatch_semaphore> event_semaphore;
	int nw_conn_state;
	NSObject*<OS_dispatch_queue> nw_conn_queue;
	unsigned is_NetBIOS;
	unsigned char ipv4v6DotName[46];
	const sockaddr* server_addr;
	opaque_pthread_mutex_t io_rqlock;
	NSMutableArray* io_rqlist;
	NSObject*<OS_dispatch_queue> send_queue;
	opaque_pthread_mutex_t skt_lock;
	NSObject*<OS_dispatch_queue> timer_queue;
	NSObject*<OS_dispatch_source> timer;
	unsigned timer_running;
	NSObject*<OS_dispatch_semaphore> timer_semaphore;
	/*^block*/id event_handler_callback;
	unsigned short _port;
	unsigned _connectTimeOut;
	NSObject*<OS_nw_connection> _connection;
	NSObject*<OS_dispatch_queue> _recv_queue;
	NSObject*<OS_dispatch_queue> _signing_queue;
	NSString* _netBiosName;
	NSString* _serverName;
	timespec _last_recv;
	timespec _last_echo;

}

@property (retain) NSObject*<OS_nw_connection> connection;                  //@synthesize connection=_connection - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> recv_queue;                 //@synthesize recv_queue=_recv_queue - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> signing_queue;              //@synthesize signing_queue=_signing_queue - In the implementation block
@property (retain) NSString * netBiosName;                                  //@synthesize netBiosName=_netBiosName - In the implementation block
@property (retain) NSString * serverName;                                   //@synthesize serverName=_serverName - In the implementation block
@property (assign) unsigned short port;                                     //@synthesize port=_port - In the implementation block
@property (assign) unsigned connectTimeOut;                                 //@synthesize connectTimeOut=_connectTimeOut - In the implementation block
@property (assign) timespec last_recv;                                      //@synthesize last_recv=_last_recv - In the implementation block
@property (assign) timespec last_echo;                                      //@synthesize last_echo=_last_echo - In the implementation block
-(unsigned short)port;
-(NSObject*<OS_nw_connection>)connection;
-(void)setEventHandler:(/*^block*/id)arg1 ;
-(void)readData:(const void*)arg1 ;
-(void)setPort:(unsigned short)arg1 ;
-(NSString *)serverName;
-(void)setServerName:(NSString *)arg1 ;
-(int)send:(id)arg1 ;
-(int)sendRequest:(id)arg1 ;
-(unsigned)isPerAppVPN;
-(void)setConnection:(NSObject*<OS_nw_connection>)arg1 ;
-(int)writeEnabled;
-(NSObject*<OS_dispatch_queue>)signing_queue;
-(char*)getIPv4IPv6DotName;
-(const sockaddr*)getServerAddress;
-(unsigned)getIPv4IPv6DotNameMaxLength;
-(void)closeSocket;
-(/*^block*/id)getEventHandler;
-(NSObject*<OS_dispatch_queue>)recv_queue;
-(void)callEventHandler:(unsigned)arg1 contextPtr:(id)arg2 returnValue:(unsigned)arg3 ;
-(void)setLast_echo:(timespec)arg1 ;
-(void)timeOutCheck;
-(void)readNBHeader;
-(int)processReply:(void*)arg1 ;
-(void)setNetBIOSHeader:(unsigned*)arg1 nbType:(unsigned char)arg2 length:(unsigned)arg3 ;
-(int)openSocket:(id)arg1 ;
-(int)connectSocket;
-(void)setRecv_queue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setSigning_queue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSString *)netBiosName;
-(void)setNetBiosName:(NSString *)arg1 ;
-(unsigned)connectTimeOut;
-(void)setConnectTimeOut:(unsigned)arg1 ;
-(timespec)last_recv;
-(void)setLast_recv:(timespec)arg1 ;
-(timespec)last_echo;
@end


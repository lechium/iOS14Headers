/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:26:54 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/VisualAlert.framework/VisualAlert
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/DNDStateUpdateListener.h>

@class AXDispatchTimer, NSDictionary, NSArray, VISAXNotificationHandler, NSMutableArray, AXCameraTorchManagerBackgroundAdapter, DNDStateService, NSString;

@interface AXVisualAlertManager : NSObject <DNDStateUpdateListener> {

	unsigned long long _alertTypes;
	AXDispatchTimer* _timer;
	AXDispatchTimer* _torchForceShutdownTimer;
	NSDictionary* _patterns;
	NSDictionary* _activePattern;
	unsigned long long _activePatternCursor;
	BOOL _shouldRepeatPattern;
	NSDictionary* _patternToUseForVisualAlertAfterCaptureSessionStopsRunning;
	NSArray* _notificationHandlers;
	VISAXNotificationHandler* _deviceLockStateChangedNotificationHandler;
	VISAXNotificationHandler* _torchInControlCenterWasEnabledNotificationHandler;
	BOOL _torchDeviceOpen;
	BOOL _torchDeviceOn;
	BOOL _isDeviceLocked;
	BOOL _isQuietModeEnabled;
	BOOL _isRingerSwitchSilent;
	BOOL _isTorchEnabledInControlCenter;
	BOOL _captureSessionRunning;
	BOOL _videoConferenceCallRinging;
	BOOL _skipAutomaticStopOnUserInteraction;
	NSMutableArray* _bulletins;
	int _ringerStateNotifyToken;
	unsigned long long _typeToUseForVisualAlertAfterCaptureSessionStopsRunning;
	AXCameraTorchManagerBackgroundAdapter* _asyncManagerAdapter;
	DNDStateService* disturbanceService;

}

@property (nonatomic,readonly) NSDictionary * _patterns; 
@property (setter=_setActivePattern:,nonatomic,retain) NSDictionary * _activePattern;                                                                                                    //@synthesize activePattern=_activePattern - In the implementation block
@property (assign,setter=_setTypeToUseForVisualAlertAfterCaptureSessionStopsRunning:,nonatomic) unsigned long long _typeToUseForVisualAlertAfterCaptureSessionStopsRunning;              //@synthesize typeToUseForVisualAlertAfterCaptureSessionStopsRunning=_typeToUseForVisualAlertAfterCaptureSessionStopsRunning - In the implementation block
@property (getter=_isTorchDeviceOpen,nonatomic,readonly) BOOL _torchDeviceOpen;                                                                                                          //@synthesize torchDeviceOpen=_torchDeviceOpen - In the implementation block
@property (getter=_isTorchDeviceOn,nonatomic,readonly) BOOL _torchDeviceOn;                                                                                                              //@synthesize torchDeviceOn=_torchDeviceOn - In the implementation block
@property (nonatomic,readonly) AXCameraTorchManagerBackgroundAdapter * _asyncManagerAdapter;                                                                                             //@synthesize asyncManagerAdapter=_asyncManagerAdapter - In the implementation block
@property (nonatomic,retain) DNDStateService * disturbanceService; 
@property (assign,nonatomic) int ringerStateNotifyToken;                                                                                                                                 //@synthesize ringerStateNotifyToken=_ringerStateNotifyToken - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
+(id)sharedVisualAlertManager;
-(int)ringerStateNotifyToken;
-(void)setRingerStateNotifyToken:(int)arg1 ;
-(NSDictionary *)_patterns;
-(void)dealloc;
-(void)_stop;
-(id)init;
-(void)stateService:(id)arg1 didReceiveDoNotDisturbStateUpdate:(id)arg2 ;
-(void)stop;
-(NSString *)description;
-(void)startForAlertTypes:(unsigned long long)arg1 cameraTorchManager:(id)arg2 ;
-(id)existingBulletinForBulletin:(id)arg1 ;
-(void)removeBulletin:(id)arg1 ;
-(void)_handleVisualAlertForIncomingMessage;
-(void)_handleBeginVisualAlertForAlarmWithSound:(BOOL)arg1 ;
-(void)_handleVisualAlertForRegularNotification:(id)arg1 ;
-(void)_handleEndVisualAlertForAlarm;
-(void)addBulletin:(id)arg1 ;
-(void)_insertCustomLogicForSystemWideServer;
-(void)_handleBeginVisualAlertForIncomingCall;
-(void)_handleBeginVisualAlertForIncomingVideoConferenceCall;
-(void)_handleEndVisualAlertForIncomingCall;
-(void)_handleEndVisualAlertForIncomingVideoConferenceCall;
-(void)_handleVisualAlertForExternalApplication;
-(void)_springBoardLockButtonPress:(id)arg1 ;
-(void)_springBoardVolumeChange:(id)arg1 ;
-(void)_springBoardLockStateChange:(id)arg1 ;
-(void)_handleLockButtonPressed;
-(void)_handleVolumeChanged;
-(void)_handleDeviceWasLocked;
-(void)_handleDeviceWasUnlocked;
-(void)_handleQuietModeWasEnabled;
-(void)_handleQuietModeWasDisabled;
-(void)_handleTorchInControlCenterWasEnabled;
-(void)_handleTorchInControlCenterWasDisabled;
-(void)_handleCaptureSessionDidStartRunning;
-(void)_handleCaptureSessionDidStopRunning;
-(void)_handleSecondaryVisualAlertManagerDidStart;
-(void)setDisturbanceService:(DNDStateService *)arg1 ;
-(DNDStateService *)disturbanceService;
-(BOOL)_hasVideoConferenceCameraTorchManager;
-(void)_handleVideoConferenceCallRinging;
-(void)_handleRingerSwitchToggled;
-(void)_endVisualAlert;
-(void)_startForAlertTypes:(unsigned long long)arg1 cameraTorchManager:(id)arg2 ;
-(void)_beginVisualAlertForType:(unsigned long long)arg1 repeat:(BOOL)arg2 skipAutomaticStopOnUserInteraction:(BOOL)arg3 bundleId:(id)arg4 ;
-(void)_setTypeToUseForVisualAlertAfterCaptureSessionStopsRunning:(unsigned long long)arg1 ;
-(BOOL)_isTorchDeviceOpen;
-(BOOL)_isTorchDeviceOn;
-(id)_normalizedStrobePatternForOriginalPattern:(id)arg1 ;
-(void)_setActivePattern:(id)arg1 ;
-(void)_setTorchDeviceOpen:(BOOL)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)_processNextVisualAlertComponent;
-(void)_setTorchDeviceOn:(BOOL)arg1 withCompletion:(/*^block*/id)arg2 ;
-(NSDictionary *)_activePattern;
-(void)_beginVisualAlertForType:(unsigned long long)arg1 repeat:(BOOL)arg2 ;
-(BOOL)_shouldHandleVisualAlertsForVideoConferenceCallsInConferenceFramework;
-(unsigned long long)_typeToUseForVisualAlertAfterCaptureSessionStopsRunning;
-(BOOL)_supportsVisualAlertsForVideoConferenceCalls;
-(BOOL)_isTorchEnabledInControlCenter;
-(AXCameraTorchManagerBackgroundAdapter *)_asyncManagerAdapter;
@end


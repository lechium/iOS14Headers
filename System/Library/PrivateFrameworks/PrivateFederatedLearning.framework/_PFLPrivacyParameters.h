/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:26:01 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/PrivateFederatedLearning.framework/PrivateFederatedLearning
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString;

@interface _PFLPrivacyParameters : NSObject {

	NSString* _identifier;
	BOOL _shouldUseCustomEpsilon;
	double _rho;
	double _precision;
	double _minCDProduct;
	long long _maxRejection;
	double _normmax;
	unsigned long long _dimension;
	double _reconstructionProbability;
	double _epsilon;

}

@property (assign,nonatomic) double rho;                                    //@synthesize rho=_rho - In the implementation block
@property (assign,nonatomic) double precision;                              //@synthesize precision=_precision - In the implementation block
@property (assign,nonatomic) double minCDProduct;                           //@synthesize minCDProduct=_minCDProduct - In the implementation block
@property (assign,nonatomic) long long maxRejection;                        //@synthesize maxRejection=_maxRejection - In the implementation block
@property (assign,nonatomic) double normmax;                                //@synthesize normmax=_normmax - In the implementation block
@property (assign,nonatomic) unsigned long long dimension;                  //@synthesize dimension=_dimension - In the implementation block
@property (assign,nonatomic) double reconstructionProbability;              //@synthesize reconstructionProbability=_reconstructionProbability - In the implementation block
@property (assign,nonatomic) double epsilon;                                //@synthesize epsilon=_epsilon - In the implementation block
@property (assign,nonatomic) BOOL shouldUseCustomEpsilon;                   //@synthesize shouldUseCustomEpsilon=_shouldUseCustomEpsilon - In the implementation block
-(id)initWithIdentifier:(id)arg1 ;
-(double)precision;
-(double)rho;
-(void)setEpsilon:(double)arg1 ;
-(double)epsilon;
-(unsigned long long)dimension;
-(void)setPrecision:(double)arg1 ;
-(void)setDimension:(unsigned long long)arg1 ;
-(double)normmax;
-(void)setRho:(double)arg1 ;
-(BOOL)populateFromDefaultFile;
-(BOOL)shouldUseCustomEpsilon;
-(double)minCDProduct;
-(long long)maxRejection;
-(double)reconstructionProbability;
-(BOOL)populateFromFile:(id)arg1 ;
-(void)setNormmax:(double)arg1 ;
-(void)setMaxRejection:(long long)arg1 ;
-(void)setMinCDProduct:(double)arg1 ;
-(void)setReconstructionProbability:(double)arg1 ;
-(void)setShouldUseCustomEpsilon:(BOOL)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:51:58 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HMFoundation/HMFObject.h>
#import <libobjc.A.dylib/HAPAccessoryServerBrowserDelegate.h>
#import <libobjc.A.dylib/HAPAccessoryServerDelegate.h>
#import <libobjc.A.dylib/HMFMessageReceiver.h>
#import <libobjc.A.dylib/HMFTimerDelegate.h>
#import <libobjc.A.dylib/HMDMediaBrowserDelegate.h>
#import <libobjc.A.dylib/HMDWACBrowserDelegate.h>
#import <libobjc.A.dylib/HMDWACAccessoryConfigurationDelegate.h>
#import <libobjc.A.dylib/HMDWatchSystemStateDelegate.h>
#import <libobjc.A.dylib/HMDAuthServerDelegate.h>
#import <libobjc.A.dylib/HMFLogging.h>
#import <libobjc.A.dylib/HMDAccessoryBrowserProtocol.h>
#import <libobjc.A.dylib/HMDAccessoryBrowserHapProtocol.h>

@protocol HMDAccessoryBrowserManagerDelegate, OS_dispatch_queue, OS_dispatch_source;
@class NSArray, HAPAccessoryServerBrowserRelay, HMDMediaBrowser, HMFUnfairLock, NSMutableSet, NSHashTable, HMDUnassociatedWACAccessory, NSObject, NSUUID, HMFMessageDispatcher, HMDHomeManager, NSMutableArray, HAPAccessoryServerBrowserIP, HAPAccessoryServerBrowserBTLE, HAPWACAccessoryBrowser, HAPAccessoryServerBrowser, HMDHAP2Storage, HMDWACBrowser, HMDAuthServer, HMDDAccessoryServerBrowserDemo, HMFTimer, NSString, NSData;

@interface HMDAccessoryBrowser : HMFObject <HAPAccessoryServerBrowserDelegate, HAPAccessoryServerDelegate, HMFMessageReceiver, HMFTimerDelegate, HMDMediaBrowserDelegate, HMDWACBrowserDelegate, HMDWACAccessoryConfigurationDelegate, HMDWatchSystemStateDelegate, HMDAuthServerDelegate, HMFLogging, HMDAccessoryBrowserProtocol, HMDAccessoryBrowserHapProtocol> {

	HMFUnfairLock* _lock;
	NSMutableSet* _unpairedHAPAccessories;
	NSMutableSet* _unassociatedMediaAccessories;
	NSMutableSet* _deviceSetupMediaAccessories;
	NSMutableSet* _unassociatedWACAccessories;
	NSMutableSet* _mediaAccessoryControlConnections;
	NSMutableSet* _browsingConnections;
	NSHashTable* _activeAssertions;
	BOOL _btlePowerState;
	BOOL _internalDiscoveryRequest;
	BOOL _active;
	HMDUnassociatedWACAccessory* _accessoryPerformingWAC;
	HAPAccessoryServerBrowserRelay* _relayAccessoryServerBrowser;
	id<HMDAccessoryBrowserManagerDelegate> _managerDelegate;
	NSObject*<OS_dispatch_queue> _workQueue;
	NSUUID* _uuid;
	HMFMessageDispatcher* _messageDispatcher;
	unsigned long long _generationCounter;
	HMDHomeManager* _homeManager;
	NSMutableArray* _accessoryServerBrowsers;
	HAPAccessoryServerBrowserIP* _ipAccessoryServerBrowser;
	HAPAccessoryServerBrowserBTLE* _btleAccessoryServerBrowser;
	HAPWACAccessoryBrowser* _wacAccessoryBrowser;
	HAPAccessoryServerBrowser* _hap2AccessoryServerBrowser;
	HMDHAP2Storage* _hap2Storage;
	HMDMediaBrowser* _mediaBrowser;
	HMDWACBrowser* _wacBrowser;
	HMDAuthServer* _authServer;
	HMDDAccessoryServerBrowserDemo* _demoAccessoryServerBrowser;
	HMFTimer* _stopReprovisioningTimer;
	HMFTimer* _stopBrowsingAccessoriesNeedingReprovisioningTimer;
	NSString* _identifierOfAccessoryBeingReprovisioned;
	NSData* _wiFiPSKForAccessoryReprovisioning;
	NSString* _countrycodeForAccessoryReprovisioning;
	NSMutableArray* _pairedAccessories;
	NSObject*<OS_dispatch_source> _reachabilityTimerForBTLE;
	NSMutableArray* _currentlyPairingAccessories;
	NSMutableArray* _currentlyPairingProgressHandlers;
	NSHashTable* _tombstonedHAPAccessoryServers;
	NSHashTable* _discoveringBLEAccessoryServerIdentifiers;
	NSMutableSet* _discoveredAccessoryServerIdentifiers;

}

@property (assign) BOOL internalDiscoveryRequest;                                                                                                      //@synthesize internalDiscoveryRequest=_internalDiscoveryRequest - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> workQueue;                                                                                   //@synthesize workQueue=_workQueue - In the implementation block
@property (nonatomic,retain) NSUUID * uuid;                                                                                                            //@synthesize uuid=_uuid - In the implementation block
@property (nonatomic,retain) HMFMessageDispatcher * messageDispatcher;                                                                                 //@synthesize messageDispatcher=_messageDispatcher - In the implementation block
@property (assign,nonatomic) unsigned long long generationCounter;                                                                                     //@synthesize generationCounter=_generationCounter - In the implementation block
@property (assign,nonatomic,__weak) HMDHomeManager * homeManager;                                                                                      //@synthesize homeManager=_homeManager - In the implementation block
@property (assign,nonatomic,__weak) id<HMDAccessoryBrowserManagerDelegate> managerDelegate;                                                            //@synthesize managerDelegate=_managerDelegate - In the implementation block
@property (nonatomic,retain) NSMutableArray * accessoryServerBrowsers;                                                                                 //@synthesize accessoryServerBrowsers=_accessoryServerBrowsers - In the implementation block
@property (nonatomic,retain) HAPAccessoryServerBrowserIP * ipAccessoryServerBrowser;                                                                   //@synthesize ipAccessoryServerBrowser=_ipAccessoryServerBrowser - In the implementation block
@property (nonatomic,retain) HAPAccessoryServerBrowserBTLE * btleAccessoryServerBrowser;                                                               //@synthesize btleAccessoryServerBrowser=_btleAccessoryServerBrowser - In the implementation block
@property (nonatomic,retain) HAPWACAccessoryBrowser * wacAccessoryBrowser;                                                                             //@synthesize wacAccessoryBrowser=_wacAccessoryBrowser - In the implementation block
@property (nonatomic,retain) HAPAccessoryServerBrowser * hap2AccessoryServerBrowser;                                                                   //@synthesize hap2AccessoryServerBrowser=_hap2AccessoryServerBrowser - In the implementation block
@property (nonatomic,retain) HMDHAP2Storage * hap2Storage;                                                                                             //@synthesize hap2Storage=_hap2Storage - In the implementation block
@property (nonatomic,retain) HMDMediaBrowser * mediaBrowser;                                                                                           //@synthesize mediaBrowser=_mediaBrowser - In the implementation block
@property (nonatomic,retain) HMDWACBrowser * wacBrowser;                                                                                               //@synthesize wacBrowser=_wacBrowser - In the implementation block
@property (setter=setActiveWACSession:,getter=getActiveWACSession,nonatomic,retain) HMDUnassociatedWACAccessory * accessoryPerformingWAC;              //@synthesize accessoryPerformingWAC=_accessoryPerformingWAC - In the implementation block
@property (nonatomic,retain) HMDAuthServer * authServer;                                                                                               //@synthesize authServer=_authServer - In the implementation block
@property (nonatomic,retain) HMDDAccessoryServerBrowserDemo * demoAccessoryServerBrowser;                                                              //@synthesize demoAccessoryServerBrowser=_demoAccessoryServerBrowser - In the implementation block
@property (nonatomic,retain) HMFTimer * stopReprovisioningTimer;                                                                                       //@synthesize stopReprovisioningTimer=_stopReprovisioningTimer - In the implementation block
@property (nonatomic,retain) HMFTimer * stopBrowsingAccessoriesNeedingReprovisioningTimer;                                                             //@synthesize stopBrowsingAccessoriesNeedingReprovisioningTimer=_stopBrowsingAccessoriesNeedingReprovisioningTimer - In the implementation block
@property (nonatomic,retain) NSString * identifierOfAccessoryBeingReprovisioned;                                                                       //@synthesize identifierOfAccessoryBeingReprovisioned=_identifierOfAccessoryBeingReprovisioned - In the implementation block
@property (nonatomic,retain) NSData * wiFiPSKForAccessoryReprovisioning;                                                                               //@synthesize wiFiPSKForAccessoryReprovisioning=_wiFiPSKForAccessoryReprovisioning - In the implementation block
@property (nonatomic,retain) NSString * countrycodeForAccessoryReprovisioning;                                                                         //@synthesize countrycodeForAccessoryReprovisioning=_countrycodeForAccessoryReprovisioning - In the implementation block
@property (assign,nonatomic) BOOL active;                                                                                                              //@synthesize active=_active - In the implementation block
@property (nonatomic,retain) NSMutableArray * pairedAccessories;                                                                                       //@synthesize pairedAccessories=_pairedAccessories - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_source> reachabilityTimerForBTLE;                                                                   //@synthesize reachabilityTimerForBTLE=_reachabilityTimerForBTLE - In the implementation block
@property (nonatomic,readonly) NSArray * unpairedHAPAccessories; 
@property (nonatomic,readonly) NSArray * unassociatedMediaAccessories; 
@property (nonatomic,readonly) NSArray * deviceSetupMediaAccessories; 
@property (nonatomic,retain) NSMutableArray * currentlyPairingAccessories;                                                                             //@synthesize currentlyPairingAccessories=_currentlyPairingAccessories - In the implementation block
@property (nonatomic,retain) NSMutableArray * currentlyPairingProgressHandlers;                                                                        //@synthesize currentlyPairingProgressHandlers=_currentlyPairingProgressHandlers - In the implementation block
@property (nonatomic,readonly) NSHashTable * tombstonedHAPAccessoryServers;                                                                            //@synthesize tombstonedHAPAccessoryServers=_tombstonedHAPAccessoryServers - In the implementation block
@property (nonatomic,readonly) NSHashTable * discoveringBLEAccessoryServerIdentifiers;                                                                 //@synthesize discoveringBLEAccessoryServerIdentifiers=_discoveringBLEAccessoryServerIdentifiers - In the implementation block
@property (nonatomic,retain) NSMutableSet * discoveredAccessoryServerIdentifiers;                                                                      //@synthesize discoveredAccessoryServerIdentifiers=_discoveredAccessoryServerIdentifiers - In the implementation block
@property (assign,nonatomic) BOOL btlePowerState;                                                                                                      //@synthesize btlePowerState=_btlePowerState - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSUUID * messageTargetUUID; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> messageReceiveQueue; 
@property (copy,readonly) NSArray * unassociatedAccessories; 
@property (nonatomic,readonly) HAPAccessoryServerBrowserRelay * relayAccessoryServerBrowser;                                                           //@synthesize relayAccessoryServerBrowser=_relayAccessoryServerBrowser - In the implementation block
+(id)logCategory;
-(BOOL)active;
-(void)_registerForNotifications;
-(void)setActive:(BOOL)arg1 ;
-(id)discoveredAccessoryServers;
-(void)setWorkQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)timerDidFire:(id)arg1 ;
-(HMDWACBrowser *)wacBrowser;
-(NSUUID *)messageTargetUUID;
-(void)updateBroadcastKeyForIdentifer:(id)arg1 key:(id)arg2 keyUpdatedStateNumber:(id)arg3 keyUpdatedTime:(double)arg4 ;
-(void)dealloc;
-(HMDHomeManager *)homeManager;
-(NSObject*<OS_dispatch_queue>)workQueue;
-(void)_registerForMessages;
-(void)setHomeManager:(HMDHomeManager *)arg1 ;
-(unsigned long long)generationCounter;
-(void)updateStateForIdentifier:(id)arg1 stateNumber:(id)arg2 ;
-(void)stopTrackingBTLEAccessoriesWithIdentifiers:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)messageReceiveQueue;
-(void)setUuid:(NSUUID *)arg1 ;
-(void)activate:(BOOL)arg1 ;
-(HMFMessageDispatcher *)messageDispatcher;
-(NSUUID *)uuid;
-(void)setQOS:(long long)arg1 ;
-(void)setPairedAccessories:(NSMutableArray *)arg1 ;
-(NSMutableArray *)pairedAccessories;
-(void)setGenerationCounter:(unsigned long long)arg1 ;
-(void)resetPairedAccessories;
-(void)retrieveCurrentStateForIdentifer:(id)arg1 onQueue:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(id)messageDestination;
-(void)setMessageDispatcher:(HMFMessageDispatcher *)arg1 ;
-(void)handleXPCConnectionInvalidated:(id)arg1 ;
-(id)initWithMessageDispatcher:(id)arg1 ;
-(void)configureDemoBrowserWithDemoAccessories:(id)arg1 finalized:(BOOL)arg2 ;
-(void)configureWithHomeManager:(id)arg1 ;
-(void)endActiveAssertion:(id)arg1 ;
-(void)__handleProcessStateChange:(id)arg1 ;
-(NSArray *)unassociatedAccessories;
-(void)registerProgressHandler:(/*^block*/id)arg1 unpairedAccessoryUUID:(id)arg2 ;
-(void)pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)unpairedHAPAccessoryWithAccessoryDescription:(id)arg1 ;
-(void)pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(/*^block*/id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)didReceiveUserConsentResponseForSetupAccessoryDetail:(id)arg1 consent:(BOOL)arg2 ;
-(void)handleNewlyPairedAccessory:(id)arg1 linkType:(long long)arg2 ;
-(void)startDiscoveringPairedAccessories;
-(void)removeUnassociatedAccessoryWithIdentifier:(id)arg1 ;
-(void)handleAddedAccessory:(id)arg1 ;
-(void)registerPairedAccessory:(id)arg1 transports:(unsigned long long)arg2 setupHash:(id)arg3 delegate:(id)arg4 ;
-(HMDMediaBrowser *)mediaBrowser;
-(void)handleRemovedAccessory:(id)arg1 ;
-(void)deregisterPairedAccessory:(id)arg1 ;
-(void)addUnpairedAccessoryServer:(id)arg1 identifier:(id)arg2 ;
-(void)btleAccessoryReachabilityProbeTimer:(BOOL)arg1 ;
-(id)acessoryBrowserHapProtocol;
-(void)cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2 ;
-(id)unpairedAccessoryWithUUID:(id)arg1 ;
-(void)cancelPairingWithAccessory:(id)arg1 error:(id)arg2 ;
-(void)handleSetupCodeAvailable:(id)arg1 ;
-(BOOL)isBrowsingAllowed;
-(void)discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(/*^block*/id)arg3 ;
-(void)discoverAccessories:(id)arg1 ;
-(void)probeReachabilityForBTLEAccessoryServersWithIdentifiers:(id)arg1 onQueue:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)tombstoneAccessoryServer:(id)arg1 ;
-(void)resurrectAccessoryServer:(id)arg1 ;
-(void)resetConfiguration;
-(void)removePairingInformationForAccessoryServer:(id)arg1 ;
-(void)accessoryServerBrowser:(id)arg1 didStartDiscoveringWithError:(id)arg2 ;
-(void)accessoryServerBrowser:(id)arg1 didFindAccessoryServer:(id)arg2 stateChanged:(BOOL)arg3 stateNumber:(id)arg4 ;
-(void)accessoryServerBrowser:(id)arg1 didRemoveAccessoryServer:(id)arg2 error:(id)arg3 ;
-(void)accessoryServerBrowser:(id)arg1 didFailToDiscoverAccessoryServerWithIdentifier:(id)arg2 ;
-(void)addUnassociatedAccessory:(id)arg1 forDeviceSetup:(BOOL)arg2 ;
-(void)configureAccessory:(id)arg1 trackState:(BOOL)arg2 connectionPriority:(BOOL)arg3 ;
-(void)requestPermissionToAssociateWACAccessory:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)unassociatedWACAccessoryDidStartAssociation:(id)arg1 ;
-(void)unassociatedWACAccessoryDidFinishAssociation:(id)arg1 withError:(id)arg2 ;
-(void)handlePPIDInfoResponse:(id)arg1 context:(id)arg2 error:(id)arg3 ;
-(void)handleActivationResponse:(id)arg1 context:(id)arg2 ;
-(void)didFinishActivation:(id)arg1 context:(id)arg2 ;
-(void)startDiscoveringAccessoriesNeedingReprovisioning;
-(void)stopDiscoveringAccessories;
-(void)reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(/*^block*/id)arg4 ;
-(void)accessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4 ;
-(void)accessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(BOOL)arg4 ;
-(void)accessoryServer:(id)arg1 didStopPairingWithError:(id)arg2 ;
-(HAPAccessoryServerBrowserRelay *)relayAccessoryServerBrowser;
-(void)addUnassociatedWACAccessory:(id)arg1 ;
-(void)updateUnassociatedWACAccessory:(id)arg1 ;
-(void)removeUnassociatedWACAccessory:(id)arg1 ;
-(id)beginActiveAssertionWithReason:(id)arg1 ;
-(id)initWithMessageDispatcher:(id)arg1 workQueue:(id)arg2 injectedSettings:(id)arg3 ;
-(HMDHAP2Storage *)hap2Storage;
-(HMDDAccessoryServerBrowserDemo *)demoAccessoryServerBrowser;
-(void)setDemoAccessoryServerBrowser:(HMDDAccessoryServerBrowserDemo *)arg1 ;
-(NSMutableArray *)accessoryServerBrowsers;
-(void)setMediaBrowser:(HMDMediaBrowser *)arg1 ;
-(id)identifiersOfAssociatedMediaAccessories;
-(HAPAccessoryServerBrowserBTLE *)btleAccessoryServerBrowser;
-(void)addUnassociatedMediaAccessory:(id)arg1 forDeviceSetup:(BOOL)arg2 ;
-(void)addUnpairedHAPAccessory:(id)arg1 ;
-(void)removeUnassociatedAccessory:(id)arg1 ;
-(void)removeUnassociatedMediaAccessory:(id)arg1 ;
-(void)removeUnpairedHAPAccessory:(id)arg1 ;
-(NSArray *)unassociatedMediaAccessories;
-(void)_handleAddedAccessory:(id)arg1 ;
-(void)_sendNewAccessoryData:(id)arg1 messageName:(id)arg2 ;
-(void)_notifyManagerOfNewAccessory;
-(void)_handleRemovedAccessory:(id)arg1 ;
-(BOOL)__isAccessoryBrowsingRequested;
-(id)mediaAccessoryControlConnections;
-(id)browsingConnections;
-(void)__removeMediaAccessoryControlObserver:(id)arg1 ;
-(void)_stopDiscoveringAccessoriesWithForce:(BOOL)arg1 error:(id)arg2 ;
-(void)_stopDiscoveringMediaAccessories;
-(void)__removeBrowsingObserver:(id)arg1 error:(id)arg2 ;
-(void)_startDiscoveringAccessories;
-(void)_startDiscoveringMediaAccessories;
-(id)__identifiersOfPairedAccessoriesWithTransports:(unsigned long long)arg1 ;
-(id)identifiersOfPairedBTLEAccessories;
-(void)_startOrStopAccessoryDiscovery;
-(BOOL)areThereAnyPairedBTLEAccessories;
-(HAPAccessoryServerBrowser *)hap2AccessoryServerBrowser;
-(HAPAccessoryServerBrowserIP *)ipAccessoryServerBrowser;
-(id)pairedAccessoryInformationWithIdentifier:(id)arg1 ;
-(BOOL)__isMediaAccessoryBrowsingRequested;
-(void)_associate:(BOOL)arg1 hapAccessoryWithAdvertisement:(id)arg2 ;
-(void)_notifyDelegateOfReachabilityChange:(BOOL)arg1 forAccessoryWithIdentifier:(id)arg2 ;
-(id)_unassociatedMediaAccessoryWithIdentifier:(id)arg1 ;
-(id)getActiveWACSession;
-(void)setActiveWACSession:(id)arg1 ;
-(void)_cancelCurrentlyPairingAccessories:(long long)arg1 ;
-(NSArray *)unpairedHAPAccessories;
-(void)_startDiscoveringPairedAccessories;
-(BOOL)_isBrowsingAllowed;
-(void)_btleAccessoryReachabilityProbeTimer:(BOOL)arg1 ;
-(void)_discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(/*^block*/id)arg3 ;
-(void)homeLocationChangeNotification:(id)arg1 ;
-(void)handleConnectionDeactivation:(id)arg1 ;
-(void)_setBTLEPowerChangeCompletionHandler;
-(void)_reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(/*^block*/id)arg4 ;
-(NSString *)identifierOfAccessoryBeingReprovisioned;
-(NSMutableArray *)currentlyPairingAccessories;
-(void)setIdentifierOfAccessoryBeingReprovisioned:(NSString *)arg1 ;
-(void)setWiFiPSKForAccessoryReprovisioning:(NSData *)arg1 ;
-(void)setCountrycodeForAccessoryReprovisioning:(NSString *)arg1 ;
-(HMFTimer *)stopReprovisioningTimer;
-(void)_removeBrowsingConnection:(id)arg1 error:(id)arg2 ;
-(void)_removeMediaAccessoryControlObserverMatchingConnection:(id)arg1 ;
-(id)unpairedAccessoryWithServerIdentifier:(id)arg1 ;
-(void)_discoverAccessories:(id)arg1 ;
-(NSMutableArray *)currentlyPairingProgressHandlers;
-(void)_handleRemovedUnpairedHAPAccessory:(id)arg1 ;
-(void)_removePairingInformationForUnpairedAccessory:(id)arg1 ;
-(id)_pairingInformationForUnpairedAccessory:(id)arg1 ;
-(id)_progressHandlerForUnpairedAccessory:(id)arg1 ;
-(void)_associateMediaAccessoryForServer:(id)arg1 ;
-(void)_handleWACAccessoryFound;
-(void)addPairedAccessory:(id)arg1 ;
-(void)removePairedAccessoryInfoWithIdentifier:(id)arg1 ;
-(id)_tombstonedAccessoryServerWithServerIdentifier:(id)arg1 ;
-(BOOL)_isAccessoryServerTombstoned:(id)arg1 ;
-(BOOL)_shouldAccessoryServerBeTombstoned:(id)arg1 ;
-(void)_resurrectAccessoryServer:(id)arg1 ;
-(void)_addUnpairedAccessoryForServer:(id)arg1 ;
-(NSMutableSet *)discoveredAccessoryServerIdentifiers;
-(void)_pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(/*^block*/id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)findAccessoryServerForAccessoryDescription:(id)arg1 ;
-(id)unpairedAccessoryForServer:(id)arg1 ;
-(void)_continueAfterPPIDValidation:(BOOL)arg1 server:(id)arg2 ;
-(void)_handleSetupCodeAvailable:(id)arg1 ;
-(void)_cancelPairingWithAccessory:(id)arg1 error:(id)arg2 ;
-(NSObject*<OS_dispatch_source>)reachabilityTimerForBTLE;
-(void)setReachabilityTimerForBTLE:(NSObject*<OS_dispatch_source>)arg1 ;
-(void)_notifyDelegateOfReachabilityChangeChange:(BOOL)arg1 forBTLEAccessories:(id)arg2 ;
-(void)_notifyDelegateOfWACCompletionForAccessoryServerWithIdentifier:(id)arg1 error:(id)arg2 ;
-(void)_stopReprovisioningTimerHandler;
-(HMFTimer *)stopBrowsingAccessoriesNeedingReprovisioningTimer;
-(id)_unpairedAccessoryMatchingPairingInfo:(id)arg1 ;
-(void)_handlePairingInterruptedTimeout:(id)arg1 error:(id)arg2 ;
-(void)_promptForPairingPasswordForServer:(id)arg1 reason:(id)arg2 ;
-(NSHashTable *)discoveringBLEAccessoryServerIdentifiers;
-(BOOL)areThereAnyPairedAccessories;
-(void)__addMediaAccessoryControlObserver:(id)arg1 ;
-(HAPWACAccessoryBrowser *)wacAccessoryBrowser;
-(void)__resetBrowsingConnections;
-(void)_startDiscoveringAccessoriesNeedingReprovisioning;
-(void)_tombstoneAccessoryServer:(id)arg1 ;
-(void)_handleRequestFetchNewAccessories:(id)arg1 ;
-(void)_handleRequestSearchForNewAccessories:(id)arg1 ;
-(void)_removePairingInformation:(id)arg1 error:(id)arg2 ;
-(id)unassociatedAccessoriesForClientRequest:(id)arg1 ;
-(void)__addBrowsingConnection:(id)arg1 ;
-(void)setBtlePowerState:(BOOL)arg1 ;
-(id<HMDAccessoryBrowserManagerDelegate>)managerDelegate;
-(NSHashTable *)tombstonedHAPAccessoryServers;
-(id)pairedAccessoryInformationWithSetupID:(id)arg1 ;
-(void)_sendPairingCompletionStatusForServer:(id)arg1 error:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_notifyDelegateOfTombstonedAccessoryServer:(id)arg1 ;
-(void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(BOOL)arg4 ;
-(void)_checkIfPairingWithPairedAccessoryServer:(id)arg1 errorCode:(long long)arg2 ;
-(void)_notifyDelegateOfNewPairedAccessoryServer:(id)arg1 stateChanged:(BOOL)arg2 stateNumber:(id)arg3 ;
-(void)_notifyDelegateOfDiscoveryFailure:(id)arg1 accessoryServer:(id)arg2 linkType:(long long)arg3 ;
-(NSString *)countrycodeForAccessoryReprovisioning;
-(NSData *)wiFiPSKForAccessoryReprovisioning;
-(void)_notifyDelegateOfAccessoryServerNeedingReprovisioning:(id)arg1 error:(id)arg2 ;
-(void)_notifyDelegateOfRemovedAccessoryServer:(id)arg1 error:(id)arg2 ;
-(void)_stopReconfirmTimer:(id)arg1 ;
-(void)_startPairingInterruptionTimer:(id)arg1 ;
-(id)_pairingInformationForAccessoryIdentifier:(id)arg1 ;
-(void)saveAccessoryCache:(id)arg1 forIdentifier:(id)arg2 ;
-(void)removeAccessoryCacheForIdentifier:(id)arg1 ;
-(void)accessoryServerBrowser:(id)arg1 saveCache:(id)arg2 serverIdentifier:(id)arg3 ;
-(void)accessoryServerBrowser:(id)arg1 getCacheForAccessoryWithIdentifier:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)accessoryServerBrowser:(id)arg1 removeCacheForAccessoryWithIdentifier:(id)arg2 ;
-(void)vendorModel:(id*)arg1 vendorManufacturer:(id*)arg2 accessoryInfo:(id)arg3 ;
-(void)_callProgressOrErrorOut:(id)arg1 pairingInfo:(id)arg2 accessoryInfo:(id)arg3 unpairedAccessory:(id)arg4 progress:(long long)arg5 certStatus:(unsigned long long)arg6 ;
-(void)accessoryServer:(id)arg1 promtDialog:(id)arg2 forNotCertifiedAccessory:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_updatePairingRetryTimerForAccessory:(id)arg1 delay:(long long)arg2 ;
-(void)_addReconfirmTimer:(id)arg1 accessoryServer:(id)arg2 ;
-(void)_notifyDelegateOfAccessoryServer:(id)arg1 didStopPairingWithError:(id)arg2 ;
-(void)_notifyDelegateOfAccessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4 ;
-(void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateHasPairings:(BOOL)arg2 ;
-(void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateCategory:(id)arg2 ;
-(void)continueAddingAccessoryToHomeAfterUserConfirmation:(id)arg1 withError:(id)arg2 ;
-(void)accessoryServer:(id)arg1 updatePairingProgress:(long long)arg2 ;
-(HMDAuthServer *)authServer;
-(void)_handleAddedAccessoryAdvertisements:(id)arg1 ;
-(void)_handleRemovedAccessoryAdvertisements:(id)arg1 ;
-(void)accessoryServer:(id)arg1 didFinishAuth:(id)arg2 ;
-(void)accessoryServer:(id)arg1 didUpdateName:(id)arg2 ;
-(void)accessoryServer:(id)arg1 requestUserPermission:(long long)arg2 accessoryInfo:(id)arg3 error:(id)arg4 ;
-(void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerForReprovisioning:(id)arg2 ;
-(void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerNeedingReprovisioning:(id)arg2 error:(id)arg3 ;
-(void)accessoryServerBrowser:(id)arg1 didFinishWACForAccessoryWithIdentifier:(id)arg2 error:(id)arg3 ;
-(void)accessoryServerBrowser:(id)arg1 didStopDiscoveringWithError:(id)arg2 ;
-(void)accessoryServerBrowser:(id)arg1 didChangeReachability:(BOOL)arg2 forAccessoryServerWithIdentifier:(id)arg3 ;
-(void)accessoryServerBrowser:(id)arg1 accessoryServer:(id)arg2 didUpdateValuesForCharacteristics:(id)arg3 stateNumber:(id)arg4 broadcast:(BOOL)arg5 ;
-(void)accessoryServer:(id)arg1 promptUserForPasswordWithType:(unsigned long long)arg2 ;
-(void)accessoryServer:(id)arg1 didReceiveBadPasswordThrottleAttemptsWithDelay:(long long)arg2 ;
-(void)accessoryServer:(id)arg1 isBlockedWithCompletionHandler:(/*^block*/id)arg2 ;
-(void)accessoryServer:(id)arg1 didUpdateHasPairings:(BOOL)arg2 ;
-(void)accessoryServerDidUpdateStateNumber:(id)arg1 ;
-(void)accessoryServer:(id)arg1 didUpdateCategory:(id)arg2 ;
-(void)accessoryServer:(id)arg1 validateUUID:(id)arg2 token:(id)arg3 model:(id)arg4 ;
-(void)accessoryServer:(id)arg1 validateCert:(id)arg2 model:(id)arg3 ;
-(void)accessoryServer:(id)arg1 authenticateUUID:(id)arg2 token:(id)arg3 ;
-(void)accessoryServer:(id)arg1 confirmUUID:(id)arg2 token:(id)arg3 ;
-(void)accessoryServerNeedsOwnershipToken:(id)arg1 ;
-(BOOL)shouldEnableReachabilityForAccessoryServer:(id)arg1 ;
-(void)browser:(id)arg1 didAddAdvertisements:(id)arg2 ;
-(void)browser:(id)arg1 didRemoveAdvertisements:(id)arg2 ;
-(void)browser:(id)arg1 didRemoveSessions:(id)arg2 ;
-(void)browser:(id)arg1 didUpdateEndpoints:(id)arg2 ;
-(void)startDiscoveringAccessories;
-(id)dumpUnassociatedAccessories;
-(id)dumpRegisteredPairedAccessories;
-(id)dumpBrowsingConnections;
-(BOOL)hasClientRequestedMediaAccessoryControl:(id)arg1 ;
-(void)handleStartDiscoveringAssociatedMediaAccessories:(BOOL)arg1 forTransport:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)configureDemoBrowserWithTestAccessories:(id)arg1 ;
-(NSArray *)deviceSetupMediaAccessories;
-(void)resetMediaAccessoryControlConnections;
-(BOOL)internalDiscoveryRequest;
-(void)setInternalDiscoveryRequest:(BOOL)arg1 ;
-(void)removePairedAccessory:(id)arg1 ;
-(BOOL)areThereAnyAssociatedAirPlayAccessories;
-(unsigned long long)numPairedIPAccessories;
-(void)__activate;
-(void)__inactivate;
-(void)startDiscoveringMediaAccessories;
-(void)stopDiscoveringMediaAccessories;
-(BOOL)__isCurrentDevicePrimaryResident;
-(void)_stopBtleAccessoryReachabilityProbeTimer;
-(void)setManagerDelegate:(id<HMDAccessoryBrowserManagerDelegate>)arg1 ;
-(void)fetchAccessoryCacheForIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)btlePowerState;
-(void)setAccessoryServerBrowsers:(NSMutableArray *)arg1 ;
-(void)setIpAccessoryServerBrowser:(HAPAccessoryServerBrowserIP *)arg1 ;
-(void)setBtleAccessoryServerBrowser:(HAPAccessoryServerBrowserBTLE *)arg1 ;
-(void)setWacAccessoryBrowser:(HAPWACAccessoryBrowser *)arg1 ;
-(void)setHap2AccessoryServerBrowser:(HAPAccessoryServerBrowser *)arg1 ;
-(void)setHap2Storage:(HMDHAP2Storage *)arg1 ;
-(void)setWacBrowser:(HMDWACBrowser *)arg1 ;
-(void)setAuthServer:(HMDAuthServer *)arg1 ;
-(void)setStopReprovisioningTimer:(HMFTimer *)arg1 ;
-(void)setStopBrowsingAccessoriesNeedingReprovisioningTimer:(HMFTimer *)arg1 ;
-(void)setCurrentlyPairingAccessories:(NSMutableArray *)arg1 ;
-(void)setCurrentlyPairingProgressHandlers:(NSMutableArray *)arg1 ;
-(void)setDiscoveredAccessoryServerIdentifiers:(NSMutableSet *)arg1 ;
@end


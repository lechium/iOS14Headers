/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:52:42 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreHandwriting/CoreHandwriting-Structs.h>
#import <libobjc.A.dylib/CHRecognitionSessionTextInputTaskDelegate.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@protocol CHStrokeProvider, CHRecognitionSessionDataSource, OS_dispatch_queue;
@class CHRecognitionSessionResult, NSOrderedSet, CHTextInputQuery, CHRecognitionSessionVersion, NSArray, NSMutableDictionary, NSMutableArray, NSObject, CHStrokeClassificationModel, NSData, NSString;

@interface CHRecognitionSession : NSObject <CHRecognitionSessionTextInputTaskDelegate, NSSecureCoding> {

	CHRecognitionSessionResult* _lastRecognitionResult;
	long long _status;
	id<CHStrokeProvider> _latestStrokeProvider;
	NSOrderedSet* _latestStrokeProviderVisibleStrokes;
	CHTextInputQuery* _activeTextInputQuery;
	BOOL _strokeGroupingOnly;
	CHRecognitionSessionResult* _cachedFastGroupingRecognitionResult;
	CHRecognitionSessionResult* _partialRecognitionResult;
	int _autoCapitalizationMode;
	CHRecognitionSessionVersion* _version;
	BOOL __hasUnprocessedChanges;
	BOOL __shouldForceFastGrouping;
	unsigned __taskQueueQoSClass;
	long long _mode;
	NSArray* _preferredLocales;
	id<CHRecognitionSessionDataSource> _dataSource;
	long long _recognitionEnvironment;
	long long _priority;
	NSArray* __textRecognitionLocales;
	NSMutableDictionary* __recognizersByLocaleID;
	NSArray* __latestTextInputTargets;
	NSMutableDictionary* __correctionRecognizersByLocaleID;
	unsigned long long __changeCoalescingIndex;
	NSMutableArray* __changeObservers;
	NSMutableArray* __inputDrawingClients;
	NSObject*<OS_dispatch_queue> __tasksWorkQueue;
	NSObject*<OS_dispatch_queue> __sessionQueue;
	NSObject*<OS_dispatch_queue> __highResponsivenessQueue;
	NSMutableArray* __activeTasks;
	CHStrokeClassificationModel* _strokeClassificationModel;

}

@property (assign,nonatomic) BOOL strokeGroupingOnly; 
@property (assign,nonatomic) int autoCapitalizationMode; 
@property (retain,readonly) CHRecognitionSessionVersion * sessionVersion; 
@property (retain,readonly) CHRecognitionSessionResult * lastRecognitionResult; 
@property (nonatomic,readonly) long long status; 
@property (retain,readonly) id<CHStrokeProvider> latestStrokeProvider; 
@property (assign,nonatomic) CHTextInputQuery * activeTextInputQuery; 
@property (assign,nonatomic) BOOL shouldForceFastGrouping; 
@property (setter=_setTextRecognitionLocales:,nonatomic,copy) NSArray * _textRecognitionLocales;                      //@synthesize _textRecognitionLocales=__textRecognitionLocales - In the implementation block
@property (setter=_setLastRecognitionResult:,retain) CHRecognitionSessionResult * lastRecognitionResult; 
@property (assign,setter=_setStatus:,nonatomic) long long status; 
@property (setter=_setLatestStrokeProvider:,retain) id<CHStrokeProvider> latestStrokeProvider; 
@property (assign,setter=_setHasUnprocessedChanges:,nonatomic) BOOL _hasUnprocessedChanges;                           //@synthesize _hasUnprocessedChanges=__hasUnprocessedChanges - In the implementation block
@property (nonatomic,retain,readonly) NSMutableDictionary * _recognizersByLocaleID;                                   //@synthesize _recognizersByLocaleID=__recognizersByLocaleID - In the implementation block
@property (setter=_setLatestTextInputTargets:,retain) NSArray * _latestTextInputTargets;                              //@synthesize _latestTextInputTargets=__latestTextInputTargets - In the implementation block
@property (nonatomic,retain,readonly) NSMutableDictionary * _correctionRecognizersByLocaleID;                         //@synthesize _correctionRecognizersByLocaleID=__correctionRecognizersByLocaleID - In the implementation block
@property (assign,nonatomic) unsigned long long _changeCoalescingIndex;                                               //@synthesize _changeCoalescingIndex=__changeCoalescingIndex - In the implementation block
@property (nonatomic,retain,readonly) NSMutableArray * _changeObservers;                                              //@synthesize _changeObservers=__changeObservers - In the implementation block
@property (nonatomic,retain,readonly) NSMutableArray * _inputDrawingClients;                                          //@synthesize _inputDrawingClients=__inputDrawingClients - In the implementation block
@property (nonatomic,retain,readonly) NSObject*<OS_dispatch_queue> _tasksWorkQueue;                                   //@synthesize _tasksWorkQueue=__tasksWorkQueue - In the implementation block
@property (nonatomic,retain,readonly) NSObject*<OS_dispatch_queue> _sessionQueue;                                     //@synthesize _sessionQueue=__sessionQueue - In the implementation block
@property (nonatomic,retain,readonly) NSObject*<OS_dispatch_queue> _highResponsivenessQueue;                          //@synthesize _highResponsivenessQueue=__highResponsivenessQueue - In the implementation block
@property (nonatomic,readonly) unsigned _taskQueueQoSClass;                                                           //@synthesize _taskQueueQoSClass=__taskQueueQoSClass - In the implementation block
@property (nonatomic,retain,readonly) NSMutableArray * _activeTasks;                                                  //@synthesize _activeTasks=__activeTasks - In the implementation block
@property (nonatomic,retain,readonly) CHStrokeClassificationModel * strokeClassificationModel;                        //@synthesize strokeClassificationModel=_strokeClassificationModel - In the implementation block
@property (setter=_setShouldForceFastGrouping:) BOOL _shouldForceFastGrouping;                                        //@synthesize _shouldForceFastGrouping=__shouldForceFastGrouping - In the implementation block
@property (nonatomic,readonly) long long mode;                                                                        //@synthesize mode=_mode - In the implementation block
@property (nonatomic,copy) NSArray * preferredLocales;                                                                //@synthesize preferredLocales=_preferredLocales - In the implementation block
@property (nonatomic,copy) NSArray * locales; 
@property (assign,nonatomic) id<CHRecognitionSessionDataSource> dataSource;                                           //@synthesize dataSource=_dataSource - In the implementation block
@property (assign,nonatomic) long long recognitionEnvironment;                                                        //@synthesize recognitionEnvironment=_recognitionEnvironment - In the implementation block
@property (assign,nonatomic) long long priority;                                                                      //@synthesize priority=_priority - In the implementation block
@property (nonatomic,readonly) NSData * sessionData; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)supportsSecureCoding;
+(BOOL)_isLocaleSupported:(id)arg1 ;
+(id)effectiveLocalesFromLocales:(id)arg1 ;
+(id)createRecognizerForLocale:(id)arg1 sessionMode:(long long)arg2 remote:(BOOL)arg3 priority:(long long)arg4 ;
+(id)strokeIdentifiersInProximalGroupsForStrokeIdentifiers:(id)arg1 sortedStrokeGroups:(id)arg2 clusteredStrokeGroups:(id)arg3 unusedStrokeIdentifiers:(id*)arg4 ;
+(id)_strokeGroupsInProximityOfSubjectStrokeGroups:(id)arg1 clusteredStrokeGroups:(id)arg2 ;
-(void)_notifyObserversWithBlock:(/*^block*/id)arg1 ;
-(void)registerChangeObserver:(id)arg1 ;
-(void)unregisterChangeObserver:(id)arg1 ;
-(long long)mode;
-(void)setDataSource:(id<CHRecognitionSessionDataSource>)arg1 ;
-(void)setPriority:(long long)arg1 ;
-(void)dealloc;
-(long long)status;
-(void)_setStatus:(long long)arg1 ;
-(id)init;
-(NSArray *)locales;
-(id<CHRecognitionSessionDataSource>)dataSource;
-(id)initWithCoder:(id)arg1 ;
-(NSData *)sessionData;
-(void)encodeWithCoder:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)_sessionQueue;
-(id)initWithMode:(long long)arg1 ;
-(long long)priority;
-(void)setLocales:(NSArray *)arg1 ;
-(NSMutableArray *)_changeObservers;
-(NSMutableArray *)_activeTasks;
-(void)setShouldForceFastGrouping:(BOOL)arg1 ;
-(NSArray *)preferredLocales;
-(void)setAutoCapitalizationMode:(int)arg1 ;
-(void)setNeedsRecognitionUpdate;
-(void)setPreferredLocales:(NSArray *)arg1 ;
-(void)cancelOngoingRequests;
-(id)indexableContent;
-(void)setRecognitionEnvironment:(long long)arg1 ;
-(id)contextualTextResultsForContextStrokes:(id)arg1 completion:(/*^block*/id)arg2 shouldCancel:(/*^block*/id)arg3 ;
-(int)autoCapitalizationMode;
-(id<CHStrokeProvider>)latestStrokeProvider;
-(id)tokenStrokeIdentifiersForContextStrokes:(id)arg1 point:(CGPoint)arg2 tokenizationLevel:(long long)arg3 completion:(/*^block*/id)arg4 shouldCancel:(/*^block*/id)arg5 ;
-(long long)recognitionEnvironment;
-(CHTextInputQuery *)activeTextInputQuery;
-(id)textCorrectionRecognizerForLocale:(id)arg1 ;
-(void)setActiveTextInputQuery:(CHTextInputQuery *)arg1 ;
-(CHStrokeClassificationModel *)strokeClassificationModel;
-(BOOL)strokeGroupingOnly;
-(id)recognizerForLocale:(id)arg1 ;
-(void)setStrokeGroupingOnly:(BOOL)arg1 ;
-(CHRecognitionSessionResult *)lastRecognitionResult;
-(void)registerInputDrawingClient:(id)arg1 ;
-(void)unregisterInputDrawingClient:(id)arg1 ;
-(void)waitForPendingRecognitionTasks;
-(CHRecognitionSessionVersion *)sessionVersion;
-(void)_setupExecutionQueuesForMode:(long long)arg1 ;
-(void)_setLatestStrokeProvider:(id)arg1 ;
-(void)_updateLatestStrokeProviderVisibleStrokes;
-(void)_invalidateCachedResults;
-(void)_setTextRecognitionLocales:(id)arg1 ;
-(void)_cleanupCachedRecognizers;
-(BOOL)_isReadyToProcessChanges;
-(void)rebuildRecognitionResults;
-(void)_setCachedFastGroupingRecognitionResult:(id)arg1 ;
-(void)_setPartialRecognitionResult:(id)arg1 ;
-(BOOL)_hasPendingRecognitionTasks;
-(BOOL)_hasUnprocessedChanges;
-(void)_setLatestTextInputTargets:(id)arg1 ;
-(void)_setHasUnprocessedChanges:(BOOL)arg1 ;
-(void)_scheduleProcessStrokeProviderChangesImmediately:(BOOL)arg1 ;
-(void)_updateRecognitionSessionStatus;
-(void)_cancelOngoingRequests;
-(unsigned long long)_changeCoalescingIndex;
-(void)set_changeCoalescingIndex:(unsigned long long)arg1 ;
-(void)_setLastRecognitionResult:(id)arg1 ;
-(void)_processPendingStrokeChangesIfAvailable;
-(double)_preferredCoalescingInterval;
-(id)_newRecognitionSessionTaskWithStrokeGroupingRequirement:(long long)arg1 isHighResponsivenessTask:(BOOL)arg2 strokeGroupingOnly:(BOOL)arg3 subjectStrokeIdentifiers:(id)arg4 partialResultBlock:(/*^block*/id)arg5 ;
-(NSObject*<OS_dispatch_queue>)_tasksWorkQueue;
-(NSMutableArray *)_inputDrawingClients;
-(NSMutableDictionary *)_recognizersByLocaleID;
-(BOOL)_shouldRunRecognitionLocally;
-(NSMutableDictionary *)_correctionRecognizersByLocaleID;
-(id)initWithMode:(long long)arg1 withVersion:(id)arg2 ;
-(id)initWithMode:(long long)arg1 recognitionSessionResult:(id)arg2 dataSource:(id)arg3 ;
-(BOOL)_validateLastRecognitionResult:(id)arg1 visibleStrokeIdentifiers:(id)arg2 ;
-(id)_cachedFastGroupingResult;
-(id)_cachedClutterFilter;
-(void)_cancelAllHighResponsivenessTasks;
-(BOOL)loadSessionData:(id)arg1 error:(id*)arg2 ;
-(NSArray *)_textRecognitionLocales;
-(NSArray *)_latestTextInputTargets;
-(NSObject*<OS_dispatch_queue>)_highResponsivenessQueue;
-(unsigned)_taskQueueQoSClass;
-(BOOL)_shouldForceFastGrouping;
-(void)_setShouldForceFastGrouping:(BOOL)arg1 ;
-(id)recognizableDrawingForStrokeGroupQueryItem:(id)arg1 ;
-(id)_strokeIdentifiersFromCachedResultUsingContextStrokes:(id)arg1 tokenizationLevel:(long long)arg2 ;
-(BOOL)shouldForceFastGrouping;
-(id)_strokeGroupsContainingStrokeIdentifiers:(id)arg1 ;
-(id)_strokeIdentifiersInWordsContainingStrokeIdentifiers:(id)arg1 ;
-(id)_strokeIdentifiersInGroupsContainingStrokeIdentifiers:(id)arg1 ;
-(id)_strokeIdentifiersInProximalGroupsForStrokeIdentifiers:(id)arg1 ;
-(CGSize)_drawingCanvasSizeForLatestStrokeProviderSnapshot;
-(id)_recognitionSessionResultOnDemandUsingContextStrokes:(id)arg1 shouldCancel:(/*^block*/id)arg2 ;
-(id)_contextualTextResultsFromCachedResultUsingContextStrokes:(id)arg1 shouldCancel:(/*^block*/id)arg2 ;
-(id)lastRecognitionResultWaitingForPendingTasks;
@end


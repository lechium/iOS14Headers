/*
                       * This header is generated by classdump-dyld 1.0
                       * on Monday, September 28, 2020 at 5:54:58 PM Mountain Standard Time
                       * Operating System: Version 14.0 (Build 18A373)
                       * Image Source: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
                       */


@protocol MTLDevice, MTLTexture;
@interface PXGCornerRadiusMask : NSObject {

	id<MTLDevice> _device;
	long long _texturePixelSide;
	double _screenScale;
	double _maxCornerRadius;
	long long _numberOfSlices;
	long long _byteSize;
	id<MTLTexture> _atomicTexture;

}

@property (retain) id<MTLTexture> atomicTexture;                        //@synthesize atomicTexture=_atomicTexture - In the implementation block
@property (nonatomic,readonly) id<MTLTexture> texture; 
@property (nonatomic,readonly) long long texturePixelSide;              //@synthesize texturePixelSide=_texturePixelSide - In the implementation block
@property (nonatomic,readonly) double screenScale;                      //@synthesize screenScale=_screenScale - In the implementation block
@property (nonatomic,readonly) double maxCornerRadius;                  //@synthesize maxCornerRadius=_maxCornerRadius - In the implementation block
@property (nonatomic,readonly) long long numberOfSlices;                //@synthesize numberOfSlices=_numberOfSlices - In the implementation block
@property (nonatomic,readonly) long long byteSize;                      //@synthesize byteSize=_byteSize - In the implementation block
+(id)cornerRadiusMaskForDevice:(id)arg1 maxCornerRadius:(double)arg2 screenScale:(double)arg3 ;
+(id)_loadQueue;
-(id<MTLTexture>)texture;
-(double)maxCornerRadius;
-(long long)byteSize;
-(id)initWithDevice:(id)arg1 maxCornerRadius:(double)arg2 screenScale:(double)arg3 ;
-(long long)texturePixelSide;
-(void)_loadCornerRadiusTexture;
-(id<MTLTexture>)atomicTexture;
-(void)setAtomicTexture:(id<MTLTexture>)arg1 ;
-(double)screenScale;
-(id)init;
-(long long)numberOfSlices;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:52:15 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/CAMNebulaDaemonClientProtocol.h>
#import <libobjc.A.dylib/CAMNebulaDaemonProtocol.h>

@protocol CAMNebulaDaemonTimelapseClientProtocol, CAMNebulaDaemonIrisClientProtocol, OS_dispatch_queue;
@class NSObject, NSXPCConnection, NSString;

@interface CAMNebulaDaemonProxyManager : NSObject <CAMNebulaDaemonClientProtocol, CAMNebulaDaemonProtocol> {

	id<CAMNebulaDaemonTimelapseClientProtocol> _timelapseClientDelegate;
	id<CAMNebulaDaemonIrisClientProtocol> _irisClientDelegate;
	NSObject*<OS_dispatch_queue> __queue;
	NSXPCConnection* __connection;
	long long __connectionCount;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> _queue;                                                  //@synthesize _queue=__queue - In the implementation block
@property (nonatomic,readonly) NSXPCConnection * _connection;                                                        //@synthesize _connection=__connection - In the implementation block
@property (nonatomic,readonly) long long _connectionCount;                                                           //@synthesize _connectionCount=__connectionCount - In the implementation block
@property (assign,nonatomic,__weak) id<CAMNebulaDaemonTimelapseClientProtocol> timelapseClientDelegate;              //@synthesize timelapseClientDelegate=_timelapseClientDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<CAMNebulaDaemonIrisClientProtocol> irisClientDelegate;                        //@synthesize irisClientDelegate=_irisClientDelegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_daemonProtocolInterface;
+(id)_clientProtocolInterface;
-(void)resumeTimelapseWithUUID:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)_queue;
-(void)updatePendingWorkFromDiskForceEndLastSession:(BOOL)arg1 ;
-(void)finishCaptureForTimelapseWithUUID:(id)arg1 ;
-(void)setTimelapseClientDelegate:(id<CAMNebulaDaemonTimelapseClientProtocol>)arg1 ;
-(void)startTimelapseWithUUID:(id)arg1 ;
-(void)_ensureConnectionToDaemon;
-(long long)_connectionCount;
-(id)init;
-(void)performIrisCrashRecovery;
-(NSXPCConnection *)_connection;
-(id<CAMNebulaDaemonTimelapseClientProtocol>)timelapseClientDelegate;
-(void)enqueueIrisVideoJobs:(id)arg1 ;
-(void)_getProxyForExecutingBlock:(/*^block*/id)arg1 ;
-(void)closeConnectionToDaemon;
-(id<CAMNebulaDaemonIrisClientProtocol>)irisClientDelegate;
-(void)pingAfterInterruption;
-(void)updateTimelapseWithUUID:(id)arg1 ;
-(void)_closeConnectionToDaemon;
-(void)stopTimelapseWithUUID:(id)arg1 ;
-(void)nebulaDaemonDidCompleteLocalVideoPersistenceWithResult:(id)arg1 ;
-(void)ensureConnectionToDaemon;
-(void)setIrisClientDelegate:(id<CAMNebulaDaemonIrisClientProtocol>)arg1 ;
-(void)performCrashRecoveryIfNeededForceEndLastTimelapseSession:(BOOL)arg1 ;
-(void)forceStopTimelapseCaptureWithReasons:(long long)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:52:12 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CameraUI/CameraUI-Structs.h>
#import <UIKitCore/UIControl.h>
#import <libobjc.A.dylib/CAMZoomButtonDelegate.h>

@protocol CAMZoomControlDelegate;
@class NSString, CAMZoomButton, CAMZoomDial, UIView, CAMZoomControlButtonMaskView, CAMZoomButtonPlatter, NSArray, NSTimer, NSDate, CAMFeedbackController, NSSet;

@interface CAMZoomControl : UIControl <CAMZoomButtonDelegate> {

	struct {
		BOOL respondsToDidChangeZoomFactor;
		BOOL respondsToCanToggleBetweenZoomFactors;
		BOOL respondsToToggleBetweenZoomFactors;
		BOOL respondsToCanPlayHaptics;
	}  _delegateFlags;
	BOOL __zoomDialEnabled;
	BOOL __shouldShowZoomDial;
	BOOL __eligibleForSwipeDownToDismiss;
	BOOL __eligibleForZoomFactorLabelTaps;
	id<CAMZoomControlDelegate> _delegate;
	long long _layoutStyle;
	double _zoomFactor;
	double _minAvailableZoomFactor;
	double _maxAvailableZoomFactor;
	long long _orientation;
	NSString* _contentSizeCategory;
	CAMZoomButton* __zoomButton;
	CAMZoomDial* __zoomDial;
	UIView* __dialClippingView;
	CAMZoomControlButtonMaskView* __buttonMaskView;
	CAMZoomButtonPlatter* __buttonPlatter;
	long long __zoomControlMode;
	NSArray* __zoomFactors;
	NSArray* __displayZoomFactors;
	double __previousTouchTime;
	NSTimer* __zoomDialVisibilityTimer;
	NSDate* __startTimeForHideAnimationInProgress;
	double __hideAnimationInProgressDuration;
	CAMZoomButton* __highlightedZoomButton;
	CAMFeedbackController* __feedbackController;
	NSArray* __significantHapticDisplayValues;
	NSArray* __significantHapticDisplayValueEpsilons;
	NSSet* __significantHapticDisplayValueSwitchOverIndexes;
	long long __lastHapticZone;
	double __snappedZoomFactor;
	double __unsnappingProgress;
	double _leftMargin;
	double _zoomButtonMaxYWhenContracted;
	double _zoomDialRadius;
	CGPoint __startTouchLocation;
	CGPoint __previousTouchLocation;
	UIEdgeInsets _contentInsets;

}

@property (nonatomic,readonly) CAMZoomButton * _zoomButton;                                                                                                         //@synthesize _zoomButton=__zoomButton - In the implementation block
@property (nonatomic,readonly) CAMZoomDial * _zoomDial;                                                                                                             //@synthesize _zoomDial=__zoomDial - In the implementation block
@property (nonatomic,readonly) UIView * _dialClippingView;                                                                                                          //@synthesize _dialClippingView=__dialClippingView - In the implementation block
@property (nonatomic,readonly) CAMZoomControlButtonMaskView * _buttonMaskView;                                                                                      //@synthesize _buttonMaskView=__buttonMaskView - In the implementation block
@property (nonatomic,readonly) CAMZoomButtonPlatter * _buttonPlatter;                                                                                               //@synthesize _buttonPlatter=__buttonPlatter - In the implementation block
@property (assign,setter=_setZoomControlMode:,nonatomic) long long _zoomControlMode;                                                                                //@synthesize _zoomControlMode=__zoomControlMode - In the implementation block
@property (setter=_setZoomFactors:,nonatomic,retain) NSArray * _zoomFactors;                                                                                        //@synthesize _zoomFactors=__zoomFactors - In the implementation block
@property (setter=_setDisplayZoomFactors:,nonatomic,retain) NSArray * _displayZoomFactors;                                                                          //@synthesize _displayZoomFactors=__displayZoomFactors - In the implementation block
@property (assign,setter=_setZoomDialEnabled:,getter=_isZoomDialEnabled,nonatomic) BOOL _zoomDialEnabled;                                                           //@synthesize _zoomDialEnabled=__zoomDialEnabled - In the implementation block
@property (assign,setter=_setShouldShowZoomDial:,nonatomic) BOOL _shouldShowZoomDial;                                                                               //@synthesize _shouldShowZoomDial=__shouldShowZoomDial - In the implementation block
@property (nonatomic,readonly) BOOL _shouldHideZoomButtonBackground; 
@property (nonatomic,readonly) double _displayMinimumZoomFactor; 
@property (nonatomic,readonly) double _displayMaximumZoomFactor; 
@property (nonatomic,readonly) NSArray * _switchOverZoomFactors; 
@property (nonatomic,readonly) BOOL _shouldSnapDialToSwitchOverZoomFactors; 
@property (nonatomic,readonly) BOOL _shouldUpdateZoomDialContentSizeCategory; 
@property (nonatomic,readonly) BOOL _shouldUseZoomDialMask; 
@property (getter=_isButtonPlatterSupportedForConfiguration,nonatomic,readonly) BOOL _buttonPlatterSupportedForConfiguration; 
@property (nonatomic,readonly) BOOL _shouldShowButtonPlatter; 
@property (assign,setter=_setStartTouchLocation:,nonatomic) CGPoint _startTouchLocation;                                                                            //@synthesize _startTouchLocation=__startTouchLocation - In the implementation block
@property (assign,setter=_setPreviousTouchLocation:,nonatomic) CGPoint _previousTouchLocation;                                                                      //@synthesize _previousTouchLocation=__previousTouchLocation - In the implementation block
@property (assign,setter=_setPreviousTouchTime:,nonatomic) double _previousTouchTime;                                                                               //@synthesize _previousTouchTime=__previousTouchTime - In the implementation block
@property (assign,setter=_setEligibleForSwipeDownToDismiss:,getter=_isEligibleForSwipeDownToDismiss,nonatomic) BOOL _eligibleForSwipeDownToDismiss;                 //@synthesize _eligibleForSwipeDownToDismiss=__eligibleForSwipeDownToDismiss - In the implementation block
@property (assign,setter=_setEligibleForZoomFactorLabelTaps:,getter=_isEligibleForZoomFactorLabelTaps,nonatomic) BOOL _eligibleForZoomFactorLabelTaps;              //@synthesize _eligibleForZoomFactorLabelTaps=__eligibleForZoomFactorLabelTaps - In the implementation block
@property (setter=_setZoomDialVisibilityTimer:,nonatomic,retain) NSTimer * _zoomDialVisibilityTimer;                                                                //@synthesize _zoomDialVisibilityTimer=__zoomDialVisibilityTimer - In the implementation block
@property (setter=_setStartTimeForHideAnimationInProgress:,nonatomic,retain) NSDate * _startTimeForHideAnimationInProgress;                                         //@synthesize _startTimeForHideAnimationInProgress=__startTimeForHideAnimationInProgress - In the implementation block
@property (assign,setter=_setHideAnimationInProgressDuration:,nonatomic) double _hideAnimationInProgressDuration;                                                   //@synthesize _hideAnimationInProgressDuration=__hideAnimationInProgressDuration - In the implementation block
@property (setter=_setHighlightedZoomButton:,nonatomic,retain) CAMZoomButton * _highlightedZoomButton;                                                              //@synthesize _highlightedZoomButton=__highlightedZoomButton - In the implementation block
@property (nonatomic,readonly) CAMFeedbackController * _feedbackController;                                                                                         //@synthesize _feedbackController=__feedbackController - In the implementation block
@property (setter=_setSignificantHapticDisplayValues:,nonatomic,retain) NSArray * _significantHapticDisplayValues;                                                  //@synthesize _significantHapticDisplayValues=__significantHapticDisplayValues - In the implementation block
@property (setter=_setSignificantHapticDisplayValueEpsilons:,nonatomic,retain) NSArray * _significantHapticDisplayValueEpsilons;                                    //@synthesize _significantHapticDisplayValueEpsilons=__significantHapticDisplayValueEpsilons - In the implementation block
@property (setter=_setSignificantHapticDisplayValueSwitchOverIndexes:,nonatomic,retain) NSSet * _significantHapticDisplayValueSwitchOverIndexes;                    //@synthesize _significantHapticDisplayValueSwitchOverIndexes=__significantHapticDisplayValueSwitchOverIndexes - In the implementation block
@property (assign,nonatomic) long long _lastHapticZone;                                                                                                             //@synthesize _lastHapticZone=__lastHapticZone - In the implementation block
@property (assign,setter=_setSnappedZoomFactor:,nonatomic) double _snappedZoomFactor;                                                                               //@synthesize _snappedZoomFactor=__snappedZoomFactor - In the implementation block
@property (assign,setter=_setUnsnappingProgress:,nonatomic) double _unsnappingProgress;                                                                             //@synthesize _unsnappingProgress=__unsnappingProgress - In the implementation block
@property (nonatomic,readonly) double displayZoomValue; 
@property (assign,nonatomic) double leftMargin;                                                                                                                     //@synthesize leftMargin=_leftMargin - In the implementation block
@property (assign,nonatomic) UIEdgeInsets contentInsets;                                                                                                            //@synthesize contentInsets=_contentInsets - In the implementation block
@property (assign,nonatomic) double zoomButtonMaxYWhenContracted;                                                                                                   //@synthesize zoomButtonMaxYWhenContracted=_zoomButtonMaxYWhenContracted - In the implementation block
@property (nonatomic,readonly) double zoomDialBorderWidth; 
@property (assign,nonatomic) double zoomDialRadius;                                                                                                                 //@synthesize zoomDialRadius=_zoomDialRadius - In the implementation block
@property (assign,nonatomic) double zoomDialContentMaskingHeight; 
@property (assign,nonatomic,__weak) id<CAMZoomControlDelegate> delegate;                                                                                            //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) long long layoutStyle;                                                                                                                 //@synthesize layoutStyle=_layoutStyle - In the implementation block
@property (nonatomic,readonly) long long zoomButtonContentType; 
@property (assign,nonatomic) double zoomFactor;                                                                                                                     //@synthesize zoomFactor=_zoomFactor - In the implementation block
@property (nonatomic,readonly) double minimumZoomFactor; 
@property (nonatomic,readonly) double maximumZoomFactor; 
@property (nonatomic,readonly) long long zoomButtonSymbol; 
@property (assign,nonatomic) double minAvailableZoomFactor;                                                                                                         //@synthesize minAvailableZoomFactor=_minAvailableZoomFactor - In the implementation block
@property (assign,nonatomic) double maxAvailableZoomFactor;                                                                                                         //@synthesize maxAvailableZoomFactor=_maxAvailableZoomFactor - In the implementation block
@property (assign,nonatomic) long long orientation;                                                                                                                 //@synthesize orientation=_orientation - In the implementation block
@property (assign,nonatomic) NSString * contentSizeCategory;                                                                                                        //@synthesize contentSizeCategory=_contentSizeCategory - In the implementation block
@property (assign,nonatomic) long long zoomButtonAccessoryState; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setZoomFactor:(double)arg1 ;
-(CAMFeedbackController *)_feedbackController;
-(BOOL)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(long long)layoutStyle;
-(double)zoomFactor;
-(void)setOrientation:(long long)arg1 animated:(BOOL)arg2 ;
-(void)cancelTrackingWithEvent:(id)arg1 ;
-(id)initWithLayoutStyle:(long long)arg1 ;
-(BOOL)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(void)setLayoutStyle:(long long)arg1 ;
-(void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(UIEdgeInsets)alignmentRectInsets;
-(UIEdgeInsets)contentInsets;
-(void)setContentInsets:(UIEdgeInsets)arg1 ;
-(void)setContentSizeCategory:(NSString *)arg1 ;
-(double)leftMargin;
-(void)layoutSubviews;
-(NSString *)contentSizeCategory;
-(long long)orientation;
-(double)_previousTouchTime;
-(void)setDelegate:(id<CAMZoomControlDelegate>)arg1 ;
-(void)setOrientation:(long long)arg1 ;
-(id<CAMZoomControlDelegate>)delegate;
-(id)hitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
-(CGPoint)_previousTouchLocation;
-(void)setLeftMargin:(double)arg1 ;
-(CAMZoomButton *)_zoomButton;
-(void)setZoomButtonMaxYWhenContracted:(double)arg1 ;
-(void)setZoomDialContentMaskingHeight:(double)arg1 ;
-(void)setZoomDialRadius:(double)arg1 ;
-(double)zoomDialBorderWidth;
-(BOOL)_shouldUpdateZoomDialContentSizeCategory;
-(void)_updateZoomButtonTappableEdgeInsets;
-(void)_updateSubviewsAlphasWithDuration:(double)arg1 forConfigurationChange:(BOOL)arg2 ;
-(BOOL)_shouldUseZoomDialMask;
-(void)configureForToggleOnlyWithZoomFactor:(double)arg1 displayZoomFactor:(double)arg2 ;
-(double)_displayZoomValueForZoomFactor:(double)arg1 ;
-(BOOL)_shouldShowButtonPlatter;
-(void)_setZoomControlMode:(long long)arg1 ;
-(void)_setZoomFactors:(id)arg1 ;
-(void)_setDisplayZoomFactors:(id)arg1 ;
-(void)setMinAvailableZoomFactor:(double)arg1 ;
-(void)setMaxAvailableZoomFactor:(double)arg1 ;
-(double)_snappedZoomFactor;
-(void)_setSnappedZoomFactor:(double)arg1 ;
-(void)_resetSnapping;
-(void)_setZoomDialEnabled:(BOOL)arg1 ;
-(void)_updateDisplayedValuesAnimated:(BOOL)arg1 ;
-(void)_configureForControlMode:(long long)arg1 zoomFactor:(double)arg2 zoomFactors:(id)arg3 displayZoomFactors:(id)arg4 zoomButtonContentType:(long long)arg5 animated:(BOOL)arg6 ;
-(NSArray *)_zoomFactors;
-(NSArray *)_displayZoomFactors;
-(CAMZoomDial *)_zoomDial;
-(void)_updateSignificantValuesForHaptics;
-(CAMZoomButtonPlatter *)_buttonPlatter;
-(double)displayZoomValue;
-(void)_setZoomFactor:(double)arg1 interactionType:(long long)arg2 shouldNotifyDelegate:(BOOL)arg3 ;
-(double)minimumZoomFactor;
-(double)minAvailableZoomFactor;
-(double)maximumZoomFactor;
-(double)maxAvailableZoomFactor;
-(void)_updateHaptics:(BOOL)arg1 ;
-(void)setLeftMargin:(double)arg1 animated:(BOOL)arg2 ;
-(void)_updateHapticEpsilons;
-(void)_setZoomDialEnabled:(BOOL)arg1 animationDuration:(long long)arg2 ;
-(void)_setShouldShowZoomDial:(BOOL)arg1 animationDuration:(long long)arg2 ;
-(void)_cancelDelayedZoomDialVisibilityChange;
-(void)_setStartTimeForHideAnimationInProgress:(id)arg1 ;
-(void)_setEligibleForZoomFactorLabelTaps:(BOOL)arg1 ;
-(CAMZoomControlButtonMaskView *)_buttonMaskView;
-(void)_setHideAnimationInProgressDuration:(double)arg1 ;
-(void)_setHighlightedZoomButton:(id)arg1 ;
-(void)_setEligibleForSwipeDownToDismiss:(BOOL)arg1 ;
-(BOOL)_shouldShowZoomDial;
-(BOOL)_shouldHideZoomButtonBackground;
-(BOOL)_isButtonPlatterSupportedForConfiguration;
-(BOOL)_isZoomDialEnabled;
-(void)_setShouldShowZoomDial:(BOOL)arg1 animationDuration:(long long)arg2 afterDelay:(double)arg3 ;
-(void)_handleZoomDialVisibilityTimerFiredWithUserInfo:(id)arg1 ;
-(UIView *)_dialClippingView;
-(double)zoomButtonMaxYWhenContracted;
-(double)zoomDialRadius;
-(void)_updateMaskViewForZoomButtonHighlightingTransform;
-(double)_distanceFromDialClippingViewToPoint:(CGPoint)arg1 ;
-(double)_dampingFactorForDistanceFromDialForPoint:(CGPoint)arg1 ;
-(double)_dampingFactorForPerpendicularityFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 ;
-(double)_normalizeValue:(double)arg1 betweenMinimumValue:(double)arg2 maximumValue:(double)arg3 ;
-(double)_additionalAccelerationForMovementFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 deltaX:(double)arg3 ;
-(NSDate *)_startTimeForHideAnimationInProgress;
-(double)_hideAnimationInProgressDuration;
-(BOOL)_isPointWithinButtonPlatter:(CGPoint)arg1 ;
-(BOOL)_shouldInterceptTouchesForHidingZoomDial;
-(void)_setUnsnappingProgress:(double)arg1 ;
-(void)_setStartTouchLocation:(CGPoint)arg1 ;
-(void)_setPreviousTouchLocation:(CGPoint)arg1 ;
-(void)_setPreviousTouchTime:(double)arg1 ;
-(BOOL)_isWithinZoomButtonBoundsWithTouch:(id)arg1 ;
-(BOOL)_isTouchWithinButtonPlatter:(id)arg1 ;
-(CGPoint)_startTouchLocation;
-(BOOL)_isEligibleForSwipeDownToDismiss;
-(double)_dampingFactorForMovementFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 ;
-(double)_accelerationForMovementFromPointFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 elapsedTime:(double)arg3 ;
-(BOOL)_shouldSnapDialToSwitchOverZoomFactors;
-(double)_unsnappingProgress;
-(NSArray *)_switchOverZoomFactors;
-(double)_zoomFactorForDisplayZoomValue:(double)arg1 ;
-(CAMZoomButton *)_highlightedZoomButton;
-(BOOL)_isEligibleForZoomFactorLabelTaps;
-(void)_cleanupForCancelTracking;
-(void)_handleButtonTapped:(id)arg1 ;
-(long long)_zoomControlMode;
-(void)_handleButtonTappedForDualCameraMode;
-(void)_handleButtonTappedForTripleCameraMode:(id)arg1 ;
-(void)_handleButtonTappedForSelection:(id)arg1 ;
-(void)_handleButtonTappedForSingleCameraZoomPlusToggle;
-(double)_displayMinimumZoomFactor;
-(void)_setSignificantHapticDisplayValues:(id)arg1 ;
-(void)_setSignificantHapticDisplayValueSwitchOverIndexes:(id)arg1 ;
-(long long)_hapticZoneForDisplayValue:(double)arg1 ;
-(void)set_lastHapticZone:(long long)arg1 ;
-(NSArray *)_significantHapticDisplayValues;
-(void)_setSignificantHapticDisplayValueEpsilons:(id)arg1 ;
-(NSArray *)_significantHapticDisplayValueEpsilons;
-(NSSet *)_significantHapticDisplayValueSwitchOverIndexes;
-(long long)_lastHapticZone;
-(void)zoomButtonDidLayout;
-(BOOL)configureForContinuousZoomWithZoomFactor:(double)arg1 zoomFactors:(id)arg2 displayZoomFactors:(id)arg3 ;
-(void)configureForTripleDeviceWithZoomFactor:(double)arg1 minimumZoomFactor:(double)arg2 displayMinimumZoomFactor:(double)arg3 maximumZoomFactor:(double)arg4 displayMaximumZoomFactor:(double)arg5 switchOverZoomFactor1:(double)arg6 displaySwitchOverZoomFactor1:(double)arg7 switchOverZoomFactor2:(double)arg8 displaySwitchOverZoomFactor2:(double)arg9 ;
-(void)configureForDualDeviceWithZoomFactor:(double)arg1 minimumZoomFactor:(double)arg2 displayMinimumZoomFactor:(double)arg3 maximumZoomFactor:(double)arg4 displayMaximumZoomFactor:(double)arg5 dualCameraSwitchOverZoomFactor:(double)arg6 displayDualCameraSwitchOverZoomFactor:(double)arg7 ;
-(void)configureForSingleCameraPlusToggleWithZoomFactor:(double)arg1 minimumZoomFactor:(double)arg2 displayMinimumZoomFactor:(double)arg3 maximumZoomFactor:(double)arg4 displayMaximumZoomFactor:(double)arg5 ;
-(void)configureForSelectionOnlyWithDisplayZoomFactors:(id)arg1 selectedIndex:(unsigned long long)arg2 animated:(BOOL)arg3 ;
-(void)configureForZoomSymbolToggle;
-(double)_displayMaximumZoomFactor;
-(long long)zoomButtonContentType;
-(long long)zoomButtonSymbol;
-(void)setZoomButtonSymbol:(long long)arg1 animated:(BOOL)arg2 ;
-(long long)zoomButtonAccessoryState;
-(void)setZoomButtonAccessoryState:(long long)arg1 ;
-(void)setZoomButtonAccessoryState:(long long)arg1 animated:(BOOL)arg2 ;
-(double)zoomDialContentMaskingHeight;
-(void)_setShouldShowZoomDial:(BOOL)arg1 ;
-(void)setShouldShowZoomDial:(BOOL)arg1 animationDuration:(long long)arg2 ;
-(NSTimer *)_zoomDialVisibilityTimer;
-(void)_setZoomDialVisibilityTimer:(id)arg1 ;
@end


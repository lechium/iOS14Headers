/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:39:37 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <GeoServices/GeoServices-Structs.h>
#import <ProtocolBuffer/PBCodable.h>
#import <libobjc.A.dylib/NSCopying.h>

@class PBDataReader, PBUnknownFields, GEOCoarseLocationMetadata, GEOLatLng;

@interface GEOLocation : PBCodable <NSCopying> {

	PBDataReader* _reader;
	PBUnknownFields* _unknownFields;
	GEOCoarseLocationMetadata* _coarseMetadata;
	double _courseAccuracy;
	double _course;
	double _heading;
	double _horizontalAccuracy;
	GEOLatLng* _latLng;
	GEOLatLng* _rawCoordinate;
	double _rawCourse;
	double _speedAccuracy;
	double _speed;
	double _timestamp;
	unsigned long long _transitID;
	double _verticalAccuracy;
	unsigned _readerMarkPos;
	unsigned _readerMarkLength;
	os_unfair_lock_s _readerLock;
	int _altitude;
	int _formOfWay;
	int _levelOrdinal;
	int _matchQuality;
	int _referenceFrame;
	int _roadClass;
	int _transportType;
	int _type;
	BOOL _isMatchedLocation;
	BOOL _isShifted;
	struct {
		unsigned has_courseAccuracy : 1;
		unsigned has_course : 1;
		unsigned has_heading : 1;
		unsigned has_horizontalAccuracy : 1;
		unsigned has_rawCourse : 1;
		unsigned has_speedAccuracy : 1;
		unsigned has_speed : 1;
		unsigned has_timestamp : 1;
		unsigned has_transitID : 1;
		unsigned has_verticalAccuracy : 1;
		unsigned has_altitude : 1;
		unsigned has_formOfWay : 1;
		unsigned has_levelOrdinal : 1;
		unsigned has_matchQuality : 1;
		unsigned has_referenceFrame : 1;
		unsigned has_roadClass : 1;
		unsigned has_transportType : 1;
		unsigned has_type : 1;
		unsigned has_isMatchedLocation : 1;
		unsigned has_isShifted : 1;
		unsigned read_unknownFields : 1;
		unsigned read_coarseMetadata : 1;
		unsigned read_latLng : 1;
		unsigned read_rawCoordinate : 1;
		unsigned wrote_anyField : 1;
	}  _flags;

}

@property (nonatomic,readonly) GEOCoarseLocationLatLng coordinate; 
@property (nonatomic,readonly) BOOL hasAccurateCourse; 
@property (assign,nonatomic) BOOL hasCourseAccuracy; 
@property (assign,nonatomic) double courseAccuracy; 
@property (assign,nonatomic) BOOL hasSpeedAccuracy; 
@property (assign,nonatomic) double speedAccuracy; 
@property (assign,nonatomic) BOOL hasIsMatchedLocation; 
@property (assign,nonatomic) BOOL isMatchedLocation; 
@property (assign,nonatomic) BOOL hasIsShifted; 
@property (assign,nonatomic) BOOL isShifted; 
@property (assign,nonatomic) BOOL hasTransitID; 
@property (assign,nonatomic) unsigned long long transitID; 
@property (assign,nonatomic) BOOL hasReferenceFrame; 
@property (assign,nonatomic) int referenceFrame; 
@property (nonatomic,readonly) BOOL hasRawCoordinate; 
@property (nonatomic,retain) GEOLatLng * rawCoordinate; 
@property (assign,nonatomic) BOOL hasRawCourse; 
@property (assign,nonatomic) double rawCourse; 
@property (assign,nonatomic) BOOL hasMatchQuality; 
@property (assign,nonatomic) int matchQuality; 
@property (assign,nonatomic) BOOL hasFormOfWay; 
@property (assign,nonatomic) int formOfWay; 
@property (assign,nonatomic) BOOL hasRoadClass; 
@property (assign,nonatomic) int roadClass; 
@property (assign,nonatomic) BOOL hasTransportType; 
@property (assign,nonatomic) int transportType; 
@property (nonatomic,retain) GEOLatLng * latLng; 
@property (assign,nonatomic) BOOL hasType; 
@property (assign,nonatomic) int type; 
@property (assign,nonatomic) BOOL hasTimestamp; 
@property (assign,nonatomic) double timestamp; 
@property (assign,nonatomic) BOOL hasAltitude; 
@property (assign,nonatomic) int altitude; 
@property (assign,nonatomic) BOOL hasHorizontalAccuracy; 
@property (assign,nonatomic) double horizontalAccuracy; 
@property (assign,nonatomic) BOOL hasVerticalAccuracy; 
@property (assign,nonatomic) double verticalAccuracy; 
@property (assign,nonatomic) BOOL hasSpeed; 
@property (assign,nonatomic) double speed; 
@property (assign,nonatomic) BOOL hasHeading; 
@property (assign,nonatomic) double heading; 
@property (assign,nonatomic) BOOL hasCourse; 
@property (assign,nonatomic) double course; 
@property (assign,nonatomic) BOOL hasLevelOrdinal; 
@property (assign,nonatomic) int levelOrdinal; 
@property (nonatomic,readonly) BOOL hasCoarseMetadata; 
@property (nonatomic,retain) GEOCoarseLocationMetadata * coarseMetadata; 
@property (nonatomic,readonly) PBUnknownFields * unknownFields; 
+(BOOL)isValid:(id)arg1 ;
-(id)_initWithCLClientLocation:(const SCD_Struct_GE208*)arg1 ;
-(double)course;
-(void)setHeading:(double)arg1 ;
-(BOOL)isShifted;
-(int)referenceFrame;
-(void)setCourse:(double)arg1 ;
-(void)setHasTimestamp:(BOOL)arg1 ;
-(void)setReferenceFrame:(int)arg1 ;
-(id)referenceFrameAsString:(int)arg1 ;
-(id)typeAsString:(int)arg1 ;
-(double)heading;
-(GEOCoarseLocationLatLng)coordinate;
-(int)StringAsType:(id)arg1 ;
-(void)setTransitID:(unsigned long long)arg1 ;
-(BOOL)hasTransitID;
-(id)copyWithZone:(NSZone*)arg1 ;
-(int)StringAsReferenceFrame:(id)arg1 ;
-(BOOL)hasRawCoordinate;
-(BOOL)hasRawCourse;
-(void)writeTo:(id)arg1 ;
-(void)setHasType:(BOOL)arg1 ;
-(BOOL)readFrom:(id)arg1 ;
-(GEOCoarseLocationMetadata *)coarseMetadata;
-(void)setIsMatchedLocation:(BOOL)arg1 ;
-(void)setMatchQuality:(int)arg1 ;
-(void)setFormOfWay:(int)arg1 ;
-(void)setRoadClass:(int)arg1 ;
-(BOOL)hasSpeedAccuracy;
-(BOOL)hasIsMatchedLocation;
-(BOOL)hasMatchQuality;
-(BOOL)hasFormOfWay;
-(BOOL)hasRoadClass;
-(int)matchQuality;
-(void)setHasVerticalAccuracy:(BOOL)arg1 ;
-(void)setHasIsMatchedLocation:(BOOL)arg1 ;
-(void)setHasIsShifted:(BOOL)arg1 ;
-(void)setHasTransitID:(BOOL)arg1 ;
-(void)setHasMatchQuality:(BOOL)arg1 ;
-(id)matchQualityAsString:(int)arg1 ;
-(int)StringAsMatchQuality:(id)arg1 ;
-(void)setHasFormOfWay:(BOOL)arg1 ;
-(id)formOfWayAsString:(int)arg1 ;
-(int)StringAsFormOfWay:(id)arg1 ;
-(void)setHasRoadClass:(BOOL)arg1 ;
-(id)roadClassAsString:(int)arg1 ;
-(int)StringAsRoadClass:(id)arg1 ;
-(void)setSpeed:(double)arg1 ;
-(GEOLatLng *)latLng;
-(void)setCoarseMetadata:(GEOCoarseLocationMetadata *)arg1 ;
-(void)setHorizontalAccuracy:(double)arg1 ;
-(BOOL)hasTransportType;
-(int)transportType;
-(double)timestamp;
-(id)jsonRepresentation;
-(double)verticalAccuracy;
-(void)setTimestamp:(double)arg1 ;
-(int)altitude;
-(void)setHasAltitude:(BOOL)arg1 ;
-(void)clearSensitiveFields;
-(void)setAltitude:(int)arg1 ;
-(id)initWithGEOCoordinate:(GEOCoarseLocationLatLng)arg1 ;
-(BOOL)hasReferenceFrame;
-(void)setTransportType:(int)arg1 ;
-(id)initWithLatitude:(double)arg1 longitude:(double)arg2 ;
-(BOOL)hasAltitude;
-(void)setHasTransportType:(BOOL)arg1 ;
-(BOOL)hasSpeed;
-(int)StringAsTransportType:(id)arg1 ;
-(id)init;
-(id)transportTypeAsString:(int)arg1 ;
-(id)initWithLocation:(id)arg1 floorOrdinal:(int)arg2 ;
-(BOOL)hasCourseAccuracy;
-(BOOL)hasAccurateCourse;
-(id)initWithLocation:(id)arg1 isUserLocation:(BOOL)arg2 floorOrdinal:(int)arg3 ;
-(id)initWithLatitude:(double)arg1 longitude:(double)arg2 floorOrdinal:(int)arg3 ;
-(id)initWithGEOCoordinate:(GEOCoarseLocationLatLng)arg1 isUserLocation:(BOOL)arg2 floorOrdinal:(int)arg3 ;
-(id)initWithGEOCoordinate:(GEOCoarseLocationLatLng)arg1 isUserLocation:(BOOL)arg2 ;
-(id)initWithLatitude:(double)arg1 longitude:(double)arg2 isUserLocation:(BOOL)arg3 floorOrdinal:(int)arg4 ;
-(id)initWithGEOCoordinate:(GEOCoarseLocationLatLng)arg1 floorOrdinal:(int)arg2 ;
-(BOOL)hasLevelOrdinal;
-(int)levelOrdinal;
-(BOOL)hasType;
-(void)setHasCourseAccuracy:(BOOL)arg1 ;
-(GEOLatLng *)rawCoordinate;
-(void)setHasSpeedAccuracy:(BOOL)arg1 ;
-(BOOL)hasVerticalAccuracy;
-(void)setVerticalAccuracy:(double)arg1 ;
-(void)mergeFrom:(id)arg1 ;
-(int)type;
-(id)initWithLocation:(id)arg1 ;
-(void)copyTo:(id)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(double)horizontalAccuracy;
-(id)initWithJSON:(id)arg1 ;
-(double)speedAccuracy;
-(void)setHasSpeed:(BOOL)arg1 ;
-(BOOL)hasHorizontalAccuracy;
-(int)roadClass;
-(int)formOfWay;
-(void)setType:(int)arg1 ;
-(unsigned long long)transitID;
-(PBUnknownFields *)unknownFields;
-(void)readAll:(BOOL)arg1 ;
-(double)rawCourse;
-(BOOL)hasTimestamp;
-(id)initWithData:(id)arg1 ;
-(double)speed;
-(void)clearSensitiveFieldsForCoarseLocation;
-(void)applyCoarseLocationRandomizationWithMaximumDistance:(double)arg1 ;
-(void)setHasHeading:(BOOL)arg1 ;
-(BOOL)hasHeading;
-(BOOL)hasCourse;
-(void)setHasHorizontalAccuracy:(BOOL)arg1 ;
-(id)initWithDictionary:(id)arg1 ;
-(BOOL)hasIsShifted;
-(void)setHasCourse:(BOOL)arg1 ;
-(void)setCourseAccuracy:(double)arg1 ;
-(void)setSpeedAccuracy:(double)arg1 ;
-(void)setRawCoordinate:(GEOLatLng *)arg1 ;
-(void)setRawCourse:(double)arg1 ;
-(unsigned long long)hash;
-(void)setHasRawCourse:(BOOL)arg1 ;
-(void)setIsShifted:(BOOL)arg1 ;
-(BOOL)isMatchedLocation;
-(double)courseAccuracy;
-(void)setLatLng:(GEOLatLng *)arg1 ;
-(void)setLevelOrdinal:(int)arg1 ;
-(void)setHasLevelOrdinal:(BOOL)arg1 ;
-(void)setHasReferenceFrame:(BOOL)arg1 ;
-(void)clearUnknownFields:(BOOL)arg1 ;
-(BOOL)hasCoarseMetadata;
-(id)description;
-(id)dictionaryRepresentation;
@end


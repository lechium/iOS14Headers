/*
                       * This header is generated by classdump-dyld 1.0
                       * on Monday, September 28, 2020 at 5:58:18 PM Mountain Standard Time
                       * Operating System: Version 14.0 (Build 18A373)
                       * Image Source: /System/Library/PrivateFrameworks/CoreSuggestionsInternals.framework/CoreSuggestionsInternals
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
                       */

#import <libobjc.A.dylib/SGJournalCalendarObserver.h>

@class EKEventStore, SGSqlEntityStore, NSString;

@interface SGEKCalendarAdapter : NSObject <SGJournalCalendarObserver> {

	EKEventStore* _externalEKStore;
	SGSqlEntityStore* _store;

}

@property (assign,nonatomic,__weak) SGSqlEntityStore * store;              //@synthesize store=_store - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)defaultEKStore;
-(void)setStore:(SGSqlEntityStore *)arg1 ;
-(SGSqlEntityStore *)store;
-(void)addEvent:(id)arg1 ;
-(void)addEvents:(id)arg1 ;
-(id)ekStore;
-(void)cancelEvent:(id)arg1 ;
-(void)confirmEventFromThisDevice:(id)arg1 ;
-(void)confirmEventFromOtherDevice:(id)arg1 ;
-(void)rejectEventFromThisDevice:(id)arg1 ;
-(void)rejectEventFromOtherDevice:(id)arg1 ;
-(void)orphanEvent:(id)arg1 ;
-(void)calendarDeleted;
-(void)cancelEvents:(id)arg1 ;
-(id)initWithSGSqlEntityStore:(id)arg1 ;
-(id)initWithSGSqlEntityStore:(id)arg1 andEKStore:(id)arg2 ;
-(void)addEvent:(id)arg1 commit:(BOOL)arg2 ;
-(void)_updateEvent:(id)arg1 withValuesFrom:(id)arg2 ekStore:(id)arg3 ;
-(void)cancelEvent:(id)arg1 commit:(BOOL)arg2 ;
-(id)_eventsAssociatedWithStorageEvent:(id)arg1 store:(id)arg2 ;
-(void)_addEKEventToCalendar:(id)arg1 storageEvent:(id)arg2 ekStore:(id)arg3 commit:(BOOL)arg4 ;
-(BOOL)_updateEKEvent:(id)arg1 withEvent:(id)arg2 ekStore:(id)arg3 error:(id*)arg4 ;
-(BOOL)_cancelEKEvent:(id)arg1 ekStore:(id)arg2 error:(id*)arg3 ;
-(BOOL)_isEKEventFromSuggestedCalendar:(id)arg1 ekStore:(id)arg2 ;
-(BOOL)_isEKEventFromNLEventsCalendar:(id)arg1 ekStore:(id)arg2 ;
-(void)_removeEvent:(id)arg1 commit:(BOOL)arg2 ;
-(void)_updateEventMetadataInModifiedEvent:(id)arg1 withExistingCheckInShortcutInOriginalEvent:(id)arg2 ifTeamIdentifierIsDifferentInStorageEvent:(id)arg3 ;
-(void)_removeEKEvent:(id)arg1 store:(id)arg2 commit:(BOOL)arg3 ;
@end


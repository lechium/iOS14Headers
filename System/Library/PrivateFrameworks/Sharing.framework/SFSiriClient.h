/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:41:01 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/Sharing.framework/Sharing
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Sharing/Sharing-Structs.h>
#import <libobjc.A.dylib/VSSpeechSynthesizerDelegate.h>
#import <libobjc.A.dylib/SVXClientSessionServiceDelegate.h>

@protocol OS_dispatch_source, SVXClientDeviceServicing, OS_dispatch_queue;
@class SFSiriRequest, NSObject, NSString, NSMutableArray, VSSpeechSynthesizer, SVXDeviceSetupContext, SVXClientServiceManager, SVXDeviceSetupFlowScene;

@interface SFSiriClient : NSObject <VSSpeechSynthesizerDelegate, SVXClientSessionServiceDelegate> {

	BOOL _invalidateCalled;
	unsigned _invalidateFlags;
	SFSiriRequest* _currentRequest;
	NSObject*<OS_dispatch_source> _currentTimer;
	NSString* _languageCode;
	NSMutableArray* _requests;
	VSSpeechSynthesizer* _speechSynthesizer;
	SVXDeviceSetupContext* _siriDeviceSetupContext;
	SVXClientServiceManager* _siriDeviceSetupManager;
	id<SVXClientDeviceServicing> _siriDeviceSetupService;
	SVXDeviceSetupFlowScene* _deviceSetupSceneIntro;
	SVXDeviceSetupFlowScene* _deviceSetupSceneDialogA;
	SVXDeviceSetupFlowScene* _deviceSetupSceneDialogB;
	SVXDeviceSetupFlowScene* _deviceSetupSceneDialogC;
	SVXDeviceSetupFlowScene* _deviceSetupSceneOutro;
	SVXClientServiceManager* _siriServiceManager;
	NSObject*<OS_dispatch_queue> _dispatchQueue;
	/*^block*/id _invalidationHandler;
	/*^block*/id _siriDialogHandler;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> dispatchQueue;              //@synthesize dispatchQueue=_dispatchQueue - In the implementation block
@property (nonatomic,copy) id invalidationHandler;                                    //@synthesize invalidationHandler=_invalidationHandler - In the implementation block
@property (nonatomic,copy) id siriDialogHandler;                                      //@synthesize siriDialogHandler=_siriDialogHandler - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)invalidationHandler;
-(void)invalidate;
-(void)stopSpeaking;
-(void)_completeAllRequestsWithError:(id)arg1 ;
-(void)speechSynthesizer:(id)arg1 didFinishSpeakingRequest:(id)arg2 successfully:(BOOL)arg3 withError2:(id)arg4 ;
-(void)speechSynthesizer:(id)arg1 didFinishSynthesisRequest:(id)arg2 withInstrumentMetrics:(id)arg3 error:(id)arg4 ;
-(void)setSiriDialogHandler:(id)arg1 ;
-(void)deviceSetupEnd;
-(void)speakPasscode:(id)arg1 instructions:(id)arg2 languageCode:(id)arg3 flags:(unsigned)arg4 completion:(/*^block*/id)arg5 ;
-(void)deviceSetupPlayGreetingID:(int)arg1 completion:(/*^block*/id)arg2 ;
-(void)deviceSetupBegin:(unsigned long long)arg1 ;
-(void)deviceSetupPrepareGreeting:(/*^block*/id)arg1 ;
-(void)_invalidate;
-(void)speakText:(id)arg1 flags:(unsigned)arg2 rate:(double)arg3 delay:(double)arg4 startHandler:(/*^block*/id)arg5 completion:(/*^block*/id)arg6 ;
-(NSObject*<OS_dispatch_queue>)dispatchQueue;
-(id)init;
-(void)setDispatchQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)invalidateWithFlags:(unsigned)arg1 ;
-(void)setInvalidationHandler:(id)arg1 ;
-(void)_completeRequest:(id)arg1 error:(id)arg2 ;
-(void)sessionService:(id)arg1 willChangeStateFrom:(long long)arg2 to:(long long)arg3 ;
-(void)sessionService:(id)arg1 didChangeStateFrom:(long long)arg2 to:(long long)arg3 ;
-(void)sessionService:(id)arg1 willPresentFeedbackWithDialogIdentifier:(id)arg2 ;
-(void)sessionService:(id)arg1 willStartSoundWithID:(long long)arg2 ;
-(void)sessionService:(id)arg1 didStartSoundWithID:(long long)arg2 ;
-(void)sessionService:(id)arg1 didStopSoundWithID:(long long)arg2 error:(id)arg3 ;
-(void)sessionService:(id)arg1 willBecomeActiveWithActivationContext:(id)arg2 ;
-(void)sessionService:(id)arg1 didBecomeActiveWithActivationContext:(id)arg2 ;
-(void)sessionService:(id)arg1 willResignActiveWithOptions:(unsigned long long)arg2 duration:(double)arg3 ;
-(void)sessionService:(id)arg1 didResignActiveWithDeactivationContext:(id)arg2 ;
-(void)_deviceSetupEnd;
-(void)_speakPasscode:(id)arg1 instructions:(id)arg2 languageCode:(id)arg3 flags:(unsigned)arg4 completion:(/*^block*/id)arg5 ;
-(void)speakText:(id)arg1 rate:(double)arg2 completion:(/*^block*/id)arg3 ;
-(void)_speakText:(id)arg1 languageCode:(id)arg2 flags:(unsigned)arg3 rate:(double)arg4 delay:(double)arg5 startHandler:(/*^block*/id)arg6 completion:(/*^block*/id)arg7 ;
-(void)sessionService:(id)arg1 didNotStartSoundWithID:(long long)arg2 error:(id)arg3 ;
-(void)_deviceSetupPrepareGreetingFlow:(id)arg1 error:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_deviceSetupSaveIntroTimings:(id)arg1 details:(id)arg2 ;
-(void)_deviceSetupSaveDialogATimings:(id)arg1 details:(id)arg2 ;
-(void)_deviceSetupSaveDialogBTimings:(id)arg1 details:(id)arg2 ;
-(void)_deviceSetupSaveDialogCTimings:(id)arg1 details:(id)arg2 ;
-(void)_deviceSetupPlayGreetingID:(int)arg1 completion:(/*^block*/id)arg2 ;
-(void)speechSynthesizer:(id)arg1 withRequest:(id)arg2 didReceiveTimingInfo2:(id)arg3 ;
-(void)speechSynthesizer:(id)arg1 didFinishSynthesisRequest:(id)arg2 withInstrumentMetrics:(id)arg3 error2:(id)arg4 ;
-(void)startDelayedRequest:(id)arg1 ;
-(void)preWarmDeviceSetupWelcomePhaseWithCompletion:(/*^block*/id)arg1 ;
-(void)speakDeviceSetupWelcomePhaseWithCompletion:(/*^block*/id)arg1 ;
-(void)speakText:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)speakText:(id)arg1 languageCode:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)siriDialogHandler;
-(void)activate;
-(void)_activate;
-(void)speechSynthesizer:(id)arg1 didStartSpeakingRequest:(id)arg2 ;
-(void)_processQueuedRequests;
-(void)speechSynthesizer:(id)arg1 withRequest:(id)arg2 didReceiveTimingInfo:(id)arg3 ;
-(void)speechSynthesizer:(id)arg1 didFinishSpeakingRequest:(id)arg2 successfully:(BOOL)arg3 phonemesSpoken:(id)arg4 withError:(id)arg5 ;
@end


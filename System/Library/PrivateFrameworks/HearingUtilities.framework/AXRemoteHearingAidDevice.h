/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:52:28 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/HearingUtilities.framework/HearingUtilities
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/AXHADeviceProtocol.h>

@protocol AXHARemoteUpdateProtocol;
@class NSString, NSMutableArray, NSDate, NSArray, AXHearingAidMode;

@interface AXRemoteHearingAidDevice : NSObject <AXHADeviceProtocol> {

	BOOL _delayWritePending;
	BOOL _keepInSync;
	char _leftTreble;
	char _rightTreble;
	char _leftBass;
	char _rightBass;
	BOOL _isBluetoothPaired;
	BOOL _isPaired;
	BOOL _isConnecting;
	BOOL _leftConnected;
	BOOL _rightConnected;
	BOOL _supportsBinauralStreaming;
	BOOL _supportsCombinedPresets;
	BOOL _supportsCombinedVolumes;
	short _leftMicrophoneVolumeSteps;
	short _rightMicrophoneVolumeSteps;
	short _leftStreamVolumeSteps;
	short _rightStreamVolumeSteps;
	short _leftSensitivitySteps;
	short _rightSensitivitySteps;
	short _leftMixedVolumeSteps;
	short _rightMixedVolumeSteps;
	int availableEars;
	int _availableInputEars;
	int _earsSupportingWatch;
	unsigned long long _deviceType;
	double _rightMicrophoneVolume;
	double _leftMicrophoneVolume;
	double _rightStreamVolume;
	double _leftStreamVolume;
	double _leftSensitivity;
	double _rightSensitivity;
	double _leftMixedVolume;
	double _rightMixedVolume;
	id<AXHARemoteUpdateProtocol> _updateDelegate;
	NSString* _name;
	NSMutableArray* _manufacturer;
	NSMutableArray* _model;
	NSString* _leftFirmwareVersion;
	NSString* _rightFirmwareVersion;
	NSString* _leftHardwareVersion;
	NSString* _rightHardwareVersion;
	NSString* _rightUUID;
	NSString* _leftUUID;
	NSString* _leftPeripheralUUID;
	NSString* _rightPeripheralUUID;
	double _rightBatteryLevel;
	double _leftBatteryLevel;
	NSDate* _leftBatteryLowDate;
	NSDate* _rightBatteryLowDate;
	NSArray* _rightPrograms;
	NSArray* _leftPrograms;
	AXHearingAidMode* _leftSelectedProgram;
	AXHearingAidMode* _rightSelectedProgram;
	AXHearingAidMode* _leftSelectedStreamingProgram;
	AXHearingAidMode* _rightSelectedStreamingProgram;
	NSString* _deviceUUID;
	unsigned long long _requiredProperties;
	unsigned long long _loadedProperties;
	unsigned long long _pendingPropertyWrites;
	unsigned long long _leftAvailableProperties;
	unsigned long long _rightAvailableProperties;

}

@property (assign,nonatomic) BOOL isPaired;                                                   //@synthesize isPaired=_isPaired - In the implementation block
@property (assign,nonatomic) BOOL isConnecting;                                               //@synthesize isConnecting=_isConnecting - In the implementation block
@property (assign,nonatomic) BOOL leftConnected;                                              //@synthesize leftConnected=_leftConnected - In the implementation block
@property (assign,nonatomic) BOOL rightConnected;                                             //@synthesize rightConnected=_rightConnected - In the implementation block
@property (assign,nonatomic) unsigned long long deviceType;                                   //@synthesize deviceType=_deviceType - In the implementation block
@property (nonatomic,retain) NSString * name;                                                 //@synthesize name=_name - In the implementation block
@property (nonatomic,retain) NSMutableArray * manufacturer;                                   //@synthesize manufacturer=_manufacturer - In the implementation block
@property (nonatomic,retain) NSMutableArray * model;                                          //@synthesize model=_model - In the implementation block
@property (nonatomic,retain) NSString * leftFirmwareVersion;                                  //@synthesize leftFirmwareVersion=_leftFirmwareVersion - In the implementation block
@property (nonatomic,retain) NSString * rightFirmwareVersion;                                 //@synthesize rightFirmwareVersion=_rightFirmwareVersion - In the implementation block
@property (nonatomic,retain) NSString * leftHardwareVersion;                                  //@synthesize leftHardwareVersion=_leftHardwareVersion - In the implementation block
@property (nonatomic,retain) NSString * rightHardwareVersion;                                 //@synthesize rightHardwareVersion=_rightHardwareVersion - In the implementation block
@property (nonatomic,retain) NSString * rightUUID;                                            //@synthesize rightUUID=_rightUUID - In the implementation block
@property (nonatomic,retain) NSString * leftUUID;                                             //@synthesize leftUUID=_leftUUID - In the implementation block
@property (nonatomic,retain) NSString * leftPeripheralUUID;                                   //@synthesize leftPeripheralUUID=_leftPeripheralUUID - In the implementation block
@property (nonatomic,retain) NSString * rightPeripheralUUID;                                  //@synthesize rightPeripheralUUID=_rightPeripheralUUID - In the implementation block
@property (assign,nonatomic) double rightBatteryLevel;                                        //@synthesize rightBatteryLevel=_rightBatteryLevel - In the implementation block
@property (assign,nonatomic) double leftBatteryLevel;                                         //@synthesize leftBatteryLevel=_leftBatteryLevel - In the implementation block
@property (nonatomic,retain) NSDate * leftBatteryLowDate;                                     //@synthesize leftBatteryLowDate=_leftBatteryLowDate - In the implementation block
@property (nonatomic,retain) NSDate * rightBatteryLowDate;                                    //@synthesize rightBatteryLowDate=_rightBatteryLowDate - In the implementation block
@property (assign,nonatomic) short leftMicrophoneVolumeSteps;                                 //@synthesize leftMicrophoneVolumeSteps=_leftMicrophoneVolumeSteps - In the implementation block
@property (assign,nonatomic) short rightMicrophoneVolumeSteps;                                //@synthesize rightMicrophoneVolumeSteps=_rightMicrophoneVolumeSteps - In the implementation block
@property (assign,nonatomic) short leftStreamVolumeSteps;                                     //@synthesize leftStreamVolumeSteps=_leftStreamVolumeSteps - In the implementation block
@property (assign,nonatomic) short rightStreamVolumeSteps;                                    //@synthesize rightStreamVolumeSteps=_rightStreamVolumeSteps - In the implementation block
@property (assign,nonatomic) short leftSensitivitySteps;                                      //@synthesize leftSensitivitySteps=_leftSensitivitySteps - In the implementation block
@property (assign,nonatomic) short rightSensitivitySteps;                                     //@synthesize rightSensitivitySteps=_rightSensitivitySteps - In the implementation block
@property (assign,nonatomic) short leftMixedVolumeSteps;                                      //@synthesize leftMixedVolumeSteps=_leftMixedVolumeSteps - In the implementation block
@property (assign,nonatomic) short rightMixedVolumeSteps;                                     //@synthesize rightMixedVolumeSteps=_rightMixedVolumeSteps - In the implementation block
@property (assign,nonatomic) BOOL supportsBinauralStreaming;                                  //@synthesize supportsBinauralStreaming=_supportsBinauralStreaming - In the implementation block
@property (assign,nonatomic) BOOL supportsCombinedPresets;                                    //@synthesize supportsCombinedPresets=_supportsCombinedPresets - In the implementation block
@property (assign,nonatomic) BOOL supportsCombinedVolumes;                                    //@synthesize supportsCombinedVolumes=_supportsCombinedVolumes - In the implementation block
@property (nonatomic,copy) NSArray * rightPrograms;                                           //@synthesize rightPrograms=_rightPrograms - In the implementation block
@property (nonatomic,copy) NSArray * leftPrograms;                                            //@synthesize leftPrograms=_leftPrograms - In the implementation block
@property (nonatomic,retain) AXHearingAidMode * leftSelectedProgram;                          //@synthesize leftSelectedProgram=_leftSelectedProgram - In the implementation block
@property (nonatomic,retain) AXHearingAidMode * rightSelectedProgram;                         //@synthesize rightSelectedProgram=_rightSelectedProgram - In the implementation block
@property (nonatomic,retain) AXHearingAidMode * leftSelectedStreamingProgram;                 //@synthesize leftSelectedStreamingProgram=_leftSelectedStreamingProgram - In the implementation block
@property (nonatomic,retain) AXHearingAidMode * rightSelectedStreamingProgram;                //@synthesize rightSelectedStreamingProgram=_rightSelectedStreamingProgram - In the implementation block
@property (nonatomic,retain) NSString * deviceUUID;                                           //@synthesize deviceUUID=_deviceUUID - In the implementation block
@property (assign,nonatomic) unsigned long long requiredProperties;                           //@synthesize requiredProperties=_requiredProperties - In the implementation block
@property (assign,nonatomic) unsigned long long loadedProperties;                             //@synthesize loadedProperties=_loadedProperties - In the implementation block
@property (assign,nonatomic) unsigned long long pendingPropertyWrites;                        //@synthesize pendingPropertyWrites=_pendingPropertyWrites - In the implementation block
@property (assign,nonatomic) unsigned long long leftAvailableProperties;                      //@synthesize leftAvailableProperties=_leftAvailableProperties - In the implementation block
@property (assign,nonatomic) unsigned long long rightAvailableProperties;                     //@synthesize rightAvailableProperties=_rightAvailableProperties - In the implementation block
@property (assign,nonatomic) int availableInputEars;                                          //@synthesize availableInputEars=_availableInputEars - In the implementation block
@property (assign,nonatomic) int earsSupportingWatch;                                         //@synthesize earsSupportingWatch=_earsSupportingWatch - In the implementation block
@property (assign,nonatomic) BOOL isBluetoothPaired;                                          //@synthesize isBluetoothPaired=_isBluetoothPaired - In the implementation block
@property (assign,nonatomic,__weak) id<AXHARemoteUpdateProtocol> updateDelegate;              //@synthesize updateDelegate=_updateDelegate - In the implementation block
@property (assign,nonatomic) BOOL keepInSync;                                                 //@synthesize keepInSync=_keepInSync - In the implementation block
@property (assign,nonatomic) int availableEars; 
@property (assign,nonatomic) double rightMicrophoneVolume;                                    //@synthesize rightMicrophoneVolume=_rightMicrophoneVolume - In the implementation block
@property (assign,nonatomic) double leftMicrophoneVolume;                                     //@synthesize leftMicrophoneVolume=_leftMicrophoneVolume - In the implementation block
@property (assign,nonatomic) double rightStreamVolume;                                        //@synthesize rightStreamVolume=_rightStreamVolume - In the implementation block
@property (assign,nonatomic) double leftStreamVolume;                                         //@synthesize leftStreamVolume=_leftStreamVolume - In the implementation block
@property (assign,nonatomic) double rightSensitivity;                                         //@synthesize rightSensitivity=_rightSensitivity - In the implementation block
@property (assign,nonatomic) double leftSensitivity;                                          //@synthesize leftSensitivity=_leftSensitivity - In the implementation block
@property (assign,nonatomic) double rightMixedVolume;                                         //@synthesize rightMixedVolume=_rightMixedVolume - In the implementation block
@property (assign,nonatomic) double leftMixedVolume;                                          //@synthesize leftMixedVolume=_leftMixedVolume - In the implementation block
@property (assign,nonatomic) char rightTreble;                                                //@synthesize rightTreble=_rightTreble - In the implementation block
@property (assign,nonatomic) char leftTreble;                                                 //@synthesize leftTreble=_leftTreble - In the implementation block
@property (assign,nonatomic) char rightBass;                                                  //@synthesize rightBass=_rightBass - In the implementation block
@property (assign,nonatomic) char leftBass;                                                   //@synthesize leftBass=_leftBass - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setDeviceType:(unsigned long long)arg1 ;
-(NSString *)deviceUUID;
-(BOOL)isConnecting;
-(void)connect;
-(double)rightBatteryLevel;
-(NSMutableArray *)manufacturer;
-(double)leftBatteryLevel;
-(BOOL)isConnected;
-(unsigned long long)deviceType;
-(void)setEarsSupportingWatch:(int)arg1 ;
-(void)setManufacturer:(NSMutableArray *)arg1 ;
-(void)dealloc;
-(id)valueForProperty:(unsigned long long)arg1 ;
-(id<AXHARemoteUpdateProtocol>)updateDelegate;
-(void)setUpdateDelegate:(id<AXHARemoteUpdateProtocol>)arg1 ;
-(NSMutableArray *)model;
-(void)setModel:(NSMutableArray *)arg1 ;
-(id)init;
-(void)setValue:(id)arg1 forProperty:(unsigned long long)arg2 ;
-(unsigned long long)requiredProperties;
-(void)setName:(NSString *)arg1 ;
-(BOOL)isPaired;
-(id)_valueForProperty:(unsigned long long)arg1 ;
-(void)setAvailableInputEars:(int)arg1 ;
-(void)setDeviceUUID:(NSString *)arg1 ;
-(NSString *)name;
-(NSString *)description;
-(int)availableInputEars;
-(int)earsSupportingWatch;
-(void)setLeftUUID:(NSString *)arg1 ;
-(void)setRightUUID:(NSString *)arg1 ;
-(BOOL)leftAvailable;
-(void)setLeftMicrophoneVolume:(double)arg1 ;
-(void)setLeftStreamVolume:(double)arg1 ;
-(void)setLeftFirmwareVersion:(NSString *)arg1 ;
-(void)setLeftHardwareVersion:(NSString *)arg1 ;
-(int)availableEars;
-(void)setAvailableEars:(int)arg1 ;
-(BOOL)rightAvailable;
-(void)setRightMicrophoneVolume:(double)arg1 ;
-(void)setRightFirmwareVersion:(NSString *)arg1 ;
-(void)setRightHardwareVersion:(NSString *)arg1 ;
-(id)programs;
-(void)selectProgram:(id)arg1 forEar:(int)arg2 ;
-(BOOL)supportsCombinedPresets;
-(BOOL)programsListsAreEqual;
-(NSArray *)leftPrograms;
-(NSArray *)rightPrograms;
-(AXHearingAidMode *)leftSelectedProgram;
-(AXHearingAidMode *)rightSelectedProgram;
-(AXHearingAidMode *)leftSelectedStreamingProgram;
-(AXHearingAidMode *)rightSelectedStreamingProgram;
-(BOOL)isLeftConnected;
-(BOOL)isRightConnected;
-(BOOL)hasConnection;
-(BOOL)propertyIsAvailable:(unsigned long long)arg1 forEar:(int)arg2 ;
-(BOOL)showCombinedPrograms;
-(BOOL)didLoadBasicProperties;
-(BOOL)didLoadRequiredProperties;
-(NSString *)leftUUID;
-(NSString *)rightUUID;
-(void)setIsConnecting:(BOOL)arg1 ;
-(NSString *)leftFirmwareVersion;
-(NSString *)rightFirmwareVersion;
-(NSString *)leftHardwareVersion;
-(NSString *)rightHardwareVersion;
-(BOOL)containsPeripheralWithUUID:(id)arg1 ;
-(id)initWithRemoteRepresentation:(id)arg1 andDeviceID:(id)arg2 ;
-(void)setRightPrograms:(NSArray *)arg1 ;
-(void)setLeftPrograms:(NSArray *)arg1 ;
-(void)setSupportsBinauralStreaming:(BOOL)arg1 ;
-(void)setSupportsCombinedPresets:(BOOL)arg1 ;
-(void)setSupportsCombinedVolumes:(BOOL)arg1 ;
-(void)setLeftMicrophoneVolumeSteps:(short)arg1 ;
-(void)setLeftSensitivitySteps:(short)arg1 ;
-(void)setLeftStreamVolumeSteps:(short)arg1 ;
-(void)setLeftMixedVolumeSteps:(short)arg1 ;
-(void)setRightMicrophoneVolumeSteps:(short)arg1 ;
-(void)setRightSensitivitySteps:(short)arg1 ;
-(void)setRightStreamVolumeSteps:(short)arg1 ;
-(void)setRightMixedVolumeSteps:(short)arg1 ;
-(void)setLeftPeripheralUUID:(NSString *)arg1 ;
-(void)setRightPeripheralUUID:(NSString *)arg1 ;
-(NSString *)leftPeripheralUUID;
-(NSString *)rightPeripheralUUID;
-(void)setIsPaired:(BOOL)arg1 ;
-(double)leftMicrophoneVolume;
-(void)setLeftBatteryLevel:(double)arg1 ;
-(short)leftStreamVolumeSteps;
-(short)leftSensitivitySteps;
-(double)leftSensitivity;
-(void)setLeftSensitivity:(double)arg1 ;
-(short)leftMicrophoneVolumeSteps;
-(char)leftTreble;
-(void)setLeftTreble:(char)arg1 ;
-(char)leftBass;
-(void)setLeftBass:(char)arg1 ;
-(double)leftMixedVolume;
-(void)setLeftMixedVolume:(double)arg1 ;
-(short)leftMixedVolumeSteps;
-(double)rightMicrophoneVolume;
-(void)setRightBatteryLevel:(double)arg1 ;
-(short)rightStreamVolumeSteps;
-(short)rightSensitivitySteps;
-(double)rightSensitivity;
-(void)setRightSensitivity:(double)arg1 ;
-(short)rightMicrophoneVolumeSteps;
-(char)rightTreble;
-(void)setRightTreble:(char)arg1 ;
-(char)rightBass;
-(void)setRightBass:(char)arg1 ;
-(double)rightMixedVolume;
-(void)setRightMixedVolume:(double)arg1 ;
-(short)rightMixedVolumeSteps;
-(BOOL)supportsBinauralStreaming;
-(BOOL)supportsCombinedVolumes;
-(void)disconnectAndUnpair:(BOOL)arg1 ;
-(void)loadRequiredProperties;
-(void)setLeftBatteryLowDate:(NSDate *)arg1 ;
-(void)setRightBatteryLowDate:(NSDate *)arg1 ;
-(BOOL)keepInSync;
-(void)setLeftSelectedStreamingProgram:(AXHearingAidMode *)arg1 ;
-(void)setLeftSelectedProgram:(AXHearingAidMode *)arg1 ;
-(void)setRightSelectedStreamingProgram:(AXHearingAidMode *)arg1 ;
-(void)setRightSelectedProgram:(AXHearingAidMode *)arg1 ;
-(void)setRightStreamVolume:(double)arg1 ;
-(double)leftStreamVolume;
-(double)rightStreamVolume;
-(NSDate *)leftBatteryLowDate;
-(NSDate *)rightBatteryLowDate;
-(id)initWithPersistentRepresentation:(id)arg1 ;
-(id)selectedPrograms;
-(id)selectedProgramIndexes;
-(void)setKeepInSync:(BOOL)arg1 ;
-(BOOL)didLoadRequiredPeerProperties;
-(void)setRequiredProperties:(unsigned long long)arg1 ;
-(BOOL)leftConnected;
-(BOOL)rightConnected;
-(unsigned long long)loadedProperties;
-(BOOL)checkDidLoadProperties:(unsigned long long)arg1 ;
-(BOOL)didLoadProperty:(unsigned long long)arg1 ;
-(unsigned long long)leftAvailableProperties;
-(unsigned long long)rightAvailableProperties;
-(unsigned long long)pendingPropertyWrites;
-(void)setPendingPropertyWrites:(unsigned long long)arg1 ;
-(void)_delayWriteProperties;
-(void)writeVolumesForProperty:(unsigned long long)arg1 ;
-(BOOL)supportsCombinedVolumesForProperty:(unsigned long long)arg1 ;
-(void)_updateSelectedProgramsProperties;
-(void)_writeAllProgramSelectionsToPeripheral;
-(void)setLoadedProperties:(unsigned long long)arg1 ;
-(void)setLeftConnected:(BOOL)arg1 ;
-(void)setRightConnected:(BOOL)arg1 ;
-(void)setIsBluetoothPaired:(BOOL)arg1 ;
-(void)setLeftAvailableProperties:(unsigned long long)arg1 ;
-(void)setRightAvailableProperties:(unsigned long long)arg1 ;
-(BOOL)isBluetoothPaired;
-(id)programAtIndex:(unsigned char)arg1 forEar:(int)arg2 ;
-(BOOL)shouldDisplayCombinedVolume;
-(BOOL)shouldOnlyShowIndividualVolumesForProperty:(unsigned long long)arg1 ;
-(id)combinedPrograms;
-(double)combinedVolumeForProperty:(unsigned long long)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:52:17 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/SpotlightServices.framework/SpotlightServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/PARSessionDelegate.h>

@protocol PRSSessionController, OS_dispatch_queue, OS_dispatch_source;
@class NSMutableArray, NSString, NSDictionary, PRSFeedbackProxy, NSObject, NSArray, PARSession, NSSet, SSPlistDataReader;

@interface PRSSearchSession : NSObject <PARSessionDelegate> {

	NSMutableArray* _feedback;
	id<PRSSessionController> _client;
	double _lastQueryTime;
	NSString* _queryLanguage;
	NSDictionary* _sqfData;
	NSDictionary* _serverFeatures;
	NSString* _userAgent;
	BOOL _parsecFeedbackAllowed;
	PRSFeedbackProxy* _listener;
	BOOL _isClientOnlyExperiment;
	BOOL _isInReservedAllocationForExperiment;
	BOOL _configuredSession;
	NSObject*<OS_dispatch_queue> _clientQueue;
	double _sessionStartTime;
	NSArray* _supportedServices;
	NSString* _modelL2Version;
	NSString* _experimentNamespaceId;
	NSString* _experimentId;
	NSString* _treatmentId;
	PARSession* _session;
	NSObject*<OS_dispatch_source> _quiescenceTimer;
	double _retryAfter;

}

@property (retain) PARSession * session;                                              //@synthesize session=_session - In the implementation block
@property (retain) NSString * userAgent;                                              //@synthesize userAgent=_userAgent - In the implementation block
@property (assign) BOOL configuredSession;                                            //@synthesize configuredSession=_configuredSession - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> quiescenceTimer;                     //@synthesize quiescenceTimer=_quiescenceTimer - In the implementation block
@property (assign) double retryAfter;                                                 //@synthesize retryAfter=_retryAfter - In the implementation block
@property (nonatomic,readonly) id<SFFeedbackListener> listener; 
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> clientQueue;                //@synthesize clientQueue=_clientQueue - In the implementation block
@property (assign,nonatomic) double sessionStartTime;                                 //@synthesize sessionStartTime=_sessionStartTime - In the implementation block
@property (nonatomic,readonly) double searchRenderTimeout; 
@property (nonatomic,readonly) double suggestionsRenderTimeout; 
@property (nonatomic,readonly) NSArray * supportedServices;                           //@synthesize supportedServices=_supportedServices - In the implementation block
@property (nonatomic,readonly) NSSet * appBlacklist; 
@property (nonatomic,readonly) SSPlistDataReader * cepDictionary; 
@property (nonatomic,readonly) SSPlistDataReader * cannedCEPValues; 
@property (nonatomic,readonly) NSString * modelL2Version;                             //@synthesize modelL2Version=_modelL2Version - In the implementation block
@property (nonatomic,readonly) NSString * experimentNamespaceId;                      //@synthesize experimentNamespaceId=_experimentNamespaceId - In the implementation block
@property (nonatomic,readonly) NSString * experimentId;                               //@synthesize experimentId=_experimentId - In the implementation block
@property (nonatomic,readonly) NSString * treatmentId;                                //@synthesize treatmentId=_treatmentId - In the implementation block
@property (nonatomic,readonly) BOOL isClientOnlyExperiment;                           //@synthesize isClientOnlyExperiment=_isClientOnlyExperiment - In the implementation block
@property (nonatomic,readonly) BOOL isInReservedAllocationForExperiment;              //@synthesize isInReservedAllocationForExperiment=_isInReservedAllocationForExperiment - In the implementation block
@property (nonatomic,readonly) BOOL disableAsTypedSuggestion; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(NSString *)experimentId;
-(void)queryCompleted:(id)arg1 ;
-(NSString *)userAgent;
-(void)setUserAgent:(NSString *)arg1 ;
-(void)setFeedbackStartTime;
-(id)queryTaskWithEngagedSuggestion:(id)arg1 externalId:(unsigned)arg2 handler:(id)arg3 queryContext:(id)arg4 queryIdent:(unsigned long long)arg5 ;
-(BOOL)isInReservedAllocationForExperiment;
-(void)setSession:(PARSession *)arg1 ;
-(BOOL)configuredSession;
-(double)searchRenderTimeout;
-(id)feedbackListener;
-(NSString *)treatmentId;
-(void)setQueryLanguage:(id)arg1 ;
-(PARSession *)session;
-(void)setConfiguredSession:(BOOL)arg1 ;
-(void)warmup;
-(NSArray *)supportedServices;
-(id)getQueryTaskForHandler:(id)arg1 scaleFactor:(double)arg2 whyQuery:(unsigned long long)arg3 ;
-(double)retryAfter;
-(SSPlistDataReader *)cannedCEPValues;
-(BOOL)isClientOnlyExperiment;
-(id)initWithClient:(id)arg1 clientQueue:(id)arg2 ;
-(id)initWithClient:(id)arg1 clientQueue:(id)arg2 config:(id)arg3 session:(id)arg4 ;
-(double)sessionStartTime;
-(NSObject*<OS_dispatch_queue>)clientQueue;
-(NSObject*<OS_dispatch_source>)quiescenceTimer;
-(void)getCachedQueries:(id*)arg1 results:(id*)arg2 webSearch:(BOOL)arg3 ;
-(NSSet *)appBlacklist;
-(NSString *)modelL2Version;
-(void)getFTEStringsWithReply:(/*^block*/id)arg1 ;
-(NSString *)experimentNamespaceId;
-(void)deactivate;
-(id)queryTaskWithString:(id)arg1 externalId:(unsigned)arg2 handler:(id)arg3 queryContext:(id)arg4 queryIdent:(unsigned long long)arg5 ;
-(void)setQuiescenceTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(void)session:(id)arg1 bag:(id)arg2 didLoadWithError:(id)arg3 ;
-(void)setParsecFeedbackAllowed:(BOOL)arg1 ;
-(void)setUserAgentString:(id)arg1 ;
-(void)shrinkCaches;
-(id<SFFeedbackListener>)listener;
-(BOOL)disableAsTypedSuggestion;
-(void)setSessionStartTime:(double)arg1 ;
-(double)suggestionsRenderTimeout;
-(SSPlistDataReader *)cepDictionary;
-(void)activate;
-(void)setClientQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setRetryAfter:(double)arg1 ;
@end


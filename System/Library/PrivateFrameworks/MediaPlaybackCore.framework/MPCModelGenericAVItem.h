/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:44:29 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MediaPlaybackCore/MediaPlaybackCore-Structs.h>
#import <MediaPlayer/MPAVItem.h>
#import <libobjc.A.dylib/AVAssetResourceLoaderDelegate.h>
#import <libobjc.A.dylib/AVPlayerItemMetadataOutputPushDelegate.h>
#import <libobjc.A.dylib/ICEnvironmentMonitorObserver.h>
#import <libobjc.A.dylib/MPRTCReportingItemSessionCreating.h>

@protocol OS_dispatch_queue, MPCReportingIdentityPropertiesLoading, MPCModelPlaybackAssetCacheProviding;
@class NSString, NSObject, NSNumber, ICMusicSubscriptionLeaseSession, MPSubscriptionStatusPlaybackInformation, MPCSuzeLeaseSession, NSArray, MPModelGenericObject, MPPropertySet, MPCModelGenericAVItemTimedMetadataRequest, MPCModelGenericAVItemTimedMetadataResponse, NSOperationQueue, ICStoreRequestContext, NSURL, MPCModelGenericAVItemUserIdentityPropertySet, ICMusicSubscriptionLeaseStatus, NSData, MPMediaLibrary, MPCPlaybackRequestEnvironment, NSDictionary, MPCPlaybackEngineEventStream;

@interface MPCModelGenericAVItem : MPAVItem <AVAssetResourceLoaderDelegate, AVPlayerItemMetadataOutputPushDelegate, ICEnvironmentMonitorObserver, MPRTCReportingItemSessionCreating> {

	NSObject*<OS_dispatch_queue> _accessQueue;
	BOOL _allowsAirPlayFromCloud;
	NSNumber* _bookmarkTime;
	BOOL _hasLoadedSubscriptionLeaseSession;
	NSObject*<OS_dispatch_queue> _subscriptionLeaseSessionLoadQueue;
	ICMusicSubscriptionLeaseSession* _subscriptionLeaseSession;
	BOOL _hasLoadedSubscriptionPlaybackInformation;
	MPSubscriptionStatusPlaybackInformation* _subscriptionPlaybackInformation;
	NSObject*<OS_dispatch_queue> _subscriptionPlaybackInformationLoadQueue;
	BOOL _shouldAutomaticallyRefreshSubscriptionLease;
	BOOL _isAssetSubscriptionProtectionType;
	BOOL _isSubscriptionPolicyContent;
	BOOL _lastPreparedForNonZeroRate;
	long long _subscriptionLeaseRequestCount;
	BOOL _didDeferPreventionStatusUpdate;
	MPCSuzeLeaseSession* _suzeLeaseSession;
	BOOL _isAutomaticallyRefreshingSuzeLeaseSession;
	/*^block*/id _firstBecomeActivePlayerItemBlock;
	NSArray* _currentGlobalTimedMetadataGroups;
	MPModelGenericObject* _flattenedGenericObject;
	MPModelGenericObject* _flattenedMetadataGenericObject;
	MPModelGenericObject* _metadataGenericObject;
	MPPropertySet* _itemProperties;
	id<MPCReportingIdentityPropertiesLoading> _identityPropertiesLoader;
	MPCModelGenericAVItemTimedMetadataRequest* _timedMetadataRequest;
	MPCModelGenericAVItemTimedMetadataResponse* _timedMetadataResponse;
	NSOperationQueue* _timedMetadataOperationQueue;
	BOOL _isMusicCellularStreamingAllowed;
	BOOL _isHLSAsset;
	BOOL _didReceiveHLSTimedMetadata;
	NSString* _hlsStreamIdentifier;
	BOOL _isiTunesStoreStream;
	ICStoreRequestContext* _storeRequestContext;
	NSURL* _streamingKeyCertificateURL;
	NSURL* _streamingKeyServerURL;
	id _rtcReportingParentHierarchyToken;
	NSString* _rtcReportingServiceIdentifier;
	MPCModelGenericAVItemUserIdentityPropertySet* _identityPropertySet;
	BOOL supportsRadioTrackActions;
	BOOL _radioPlayback;
	BOOL _radioStreamPlayback;
	BOOL _subscriptionRequired;
	long long _leasePlaybackPreventionState;
	ICMusicSubscriptionLeaseStatus* _leaseStatus;
	id<MPCModelPlaybackAssetCacheProviding> _assetCacheProvider;
	NSString* _assetSourceStoreFrontID;
	long long _equivalencySourceAdamID;
	MPModelGenericObject* _genericObject;
	NSData* _jingleTimedMetadata;
	MPMediaLibrary* _mediaLibrary;
	NSNumber* _siriInitiated;
	MPCPlaybackRequestEnvironment* _playbackRequestEnvironment;
	long long _stationItemLikedState;
	NSDictionary* _trackInfo;
	MPCPlaybackEngineEventStream* _eventStream;

}

@property (nonatomic,retain) id<MPCModelPlaybackAssetCacheProviding> assetCacheProvider;                     //@synthesize assetCacheProvider=_assetCacheProvider - In the implementation block
@property (nonatomic,copy) NSString * assetSourceStoreFrontID;                                               //@synthesize assetSourceStoreFrontID=_assetSourceStoreFrontID - In the implementation block
@property (assign,nonatomic) long long equivalencySourceAdamID;                                              //@synthesize equivalencySourceAdamID=_equivalencySourceAdamID - In the implementation block
@property (nonatomic,retain) MPModelGenericObject * genericObject;                                           //@synthesize genericObject=_genericObject - In the implementation block
@property (nonatomic,copy,readonly) NSData * jingleTimedMetadata;                                            //@synthesize jingleTimedMetadata=_jingleTimedMetadata - In the implementation block
@property (nonatomic,retain) MPMediaLibrary * mediaLibrary;                                                  //@synthesize mediaLibrary=_mediaLibrary - In the implementation block
@property (getter=isSiriInitiated,nonatomic,copy) NSNumber * siriInitiated;                                  //@synthesize siriInitiated=_siriInitiated - In the implementation block
@property (assign,getter=isRadioPlayback,nonatomic) BOOL radioPlayback;                                      //@synthesize radioPlayback=_radioPlayback - In the implementation block
@property (assign,getter=isRadioStreamPlayback,nonatomic) BOOL radioStreamPlayback;                          //@synthesize radioStreamPlayback=_radioStreamPlayback - In the implementation block
@property (assign,getter=isSubscriptionRequired,nonatomic) BOOL subscriptionRequired;                        //@synthesize subscriptionRequired=_subscriptionRequired - In the implementation block
@property (nonatomic,readonly) BOOL shouldReportPlayEventsToStore; 
@property (nonatomic,copy,readonly) MPCPlaybackRequestEnvironment * playbackRequestEnvironment;              //@synthesize playbackRequestEnvironment=_playbackRequestEnvironment - In the implementation block
@property (assign,nonatomic) long long stationItemLikedState;                                                //@synthesize stationItemLikedState=_stationItemLikedState - In the implementation block
@property (nonatomic,retain) NSDictionary * trackInfo;                                                       //@synthesize trackInfo=_trackInfo - In the implementation block
@property (assign,nonatomic,__weak) MPCPlaybackEngineEventStream * eventStream;                              //@synthesize eventStream=_eventStream - In the implementation block
@property (assign,nonatomic) BOOL supportsRadioTrackActions; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) id rtcReportingParentHierarchyToken; 
@property (nonatomic,copy,readonly) NSString * rtcReportingServiceIdentifier; 
@property (nonatomic,readonly) long long rtcReportingAssetType; 
+(id)_utilitySerialQueue;
+(BOOL)_prefersHighQualityVideoContentForNetworkType:(long long)arg1 ;
+(BOOL)_prefersHighQualityAudioContentForNetworkType:(long long)arg1 ;
-(id)artist;
-(BOOL)isAlwaysLive;
-(unsigned long long)mediaType;
-(void)environmentMonitorDidChangeNetworkType:(id)arg1 ;
-(id)databaseID;
-(long long)albumYear;
-(BOOL)isSubscriptionRequired;
-(BOOL)shouldReportPlayEventsToStore;
-(double)_startTime;
-(id)composer;
-(BOOL)shouldShowComposer;
-(id)externalContentIdentifier;
-(id)personID;
-(long long)storePurchasedAdamID;
-(BOOL)allowsExternalPlayback;
-(void)metadataOutput:(id)arg1 didOutputTimedMetadataGroups:(id)arg2 fromPlayerItemTrack:(id)arg3 ;
-(void)setEventStream:(MPCPlaybackEngineEventStream *)arg1 ;
-(id)_storeRequestContext;
-(void)dealloc;
-(void)nowPlayingInfoCenter:(id)arg1 lyricsForContentItem:(id)arg2 completion:(/*^block*/id)arg3 ;
-(float)userRating;
-(MPMediaLibrary *)mediaLibrary;
-(id)cloudUniversalLibraryID;
-(id)genre;
-(id)copyrightText;
-(BOOL)allowsEQ;
-(BOOL)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2 ;
-(BOOL)resourceLoader:(id)arg1 shouldWaitForRenewalOfRequestedResource:(id)arg2 ;
-(id)explicitBadge;
-(id)mainTitle;
-(BOOL)canUseLoadedAsset;
-(id)_radioStation;
-(void)loadAssetAndPlayerItem;
-(id)playbackError;
-(id)bookmarkTime;
-(void)setPlaybackStoppedTime:(double)arg1 ;
-(void)notePlaybackFinishedByHittingEnd;
-(void)setPlaybackCheckpointCurrentTime:(double)arg1 ;
-(void)setPlaybackFinishedTime:(double)arg1 ;
-(id)albumArtist;
-(BOOL)hasTimeSyncedLyrics;
-(long long)artistStoreID;
-(unsigned long long)albumTrackNumber;
-(unsigned long long)albumTrackCount;
-(void)applyVolumeNormalizationWithSoundCheckEnabled:(BOOL)arg1 ;
-(BOOL)isValidPlayerSubstituteForItem:(id)arg1 ;
-(BOOL)isAssetURLValid;
-(BOOL)isExplicitTrack;
-(BOOL)usesSubscriptionLease;
-(void)setTrackInfo:(NSDictionary *)arg1 ;
-(id)libraryLyrics;
-(BOOL)hasStoreLyrics;
-(id)containerUniqueID;
-(BOOL)isStreamable;
-(void)prepareForRate:(float)arg1 completionHandler:(/*^block*/id)arg2 ;
-(BOOL)isRadioItem;
-(void)setSiriInitiated:(NSNumber *)arg1 ;
-(id)stationHash;
-(id)stationName;
-(id)stationStringID;
-(long long)stationProviderID;
-(BOOL)supportsRadioTrackActions;
-(id)urlTimeMarkers;
-(BOOL)useEmbeddedChapterData;
-(id)chapterTimeMarkers;
-(id)artworkTimeMarkers;
-(id)cloudAlbumID;
-(unsigned long long)albumPersistentID;
-(unsigned long long)genrePersistentID;
-(unsigned long long)albumArtistPersistentID;
-(unsigned long long)artistPersistentID;
-(unsigned long long)composerPersistentID;
-(double)durationFromExternalMetadata;
-(id)playbackInfo;
-(void)reevaluateType;
-(void)_currentPlaybackRateDidChange:(float)arg1 ;
-(void)_applyLoudnessInfo;
-(void)_handleUpdatedLikedState:(long long)arg1 forUserIdentity:(id)arg2 completion:(/*^block*/id)arg3 ;
-(long long)_persistedLikedState;
-(void)resolvePlaybackError:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)_willBecomeActivePlayerItem;
-(void)_willResignActivePlayerItem;
-(id)rtcReportingParentHierarchyToken;
-(long long)albumStoreID;
-(BOOL)isLikedStateEnabled;
-(BOOL)supportsLikedState;
-(long long)storeItemInt64ID;
-(BOOL)prefersSeekOverSkip;
-(BOOL)shouldPreventPlayback;
-(id)modelGenericObject;
-(BOOL)allowsAirPlayFromCloud;
-(BOOL)requiresLoadedAssetForAirPlayProperties;
-(id)useListeningHistory;
-(id)leaseStatus;
-(long long)leasePlaybackPreventionState;
-(long long)type;
-(unsigned long long)persistentID;
-(NSString *)assetSourceStoreFrontID;
-(void)setAssetSourceStoreFrontID:(NSString *)arg1 ;
-(long long)equivalencySourceAdamID;
-(void)setEquivalencySourceAdamID:(long long)arg1 ;
-(BOOL)_shouldRememberBookmarkTime;
-(id)_bookmarkTime;
-(long long)stationID;
-(id)_storeUbiquitousIdentifier;
-(void)_contentTasteControllerDidChangeNotification:(id)arg1 ;
-(/*^block*/id)artworkCatalogBlock;
-(void)setMediaLibrary:(MPMediaLibrary *)arg1 ;
-(void)setSubscriptionRequired:(BOOL)arg1 ;
-(id)mediaItem;
-(id)_stopTime;
-(MPCPlaybackEngineEventStream *)eventStream;
-(NSDictionary *)trackInfo;
-(NSString *)rtcReportingServiceIdentifier;
-(long long)rtcReportingAssetType;
-(id)storeFrontIdentifier;
-(void)setRating:(float)arg1 ;
-(id)isSiriInitiated;
-(id)album;
-(id)storeAccountID;
-(NSString *)description;
-(unsigned long long)cloudID;
-(long long)storeSubscriptionAdamID;
-(void)_ageVerificationStateDidChangeNotification:(id)arg1 ;
-(BOOL)isRadioStreamPlayback;
-(BOOL)isRadioPlayback;
-(SCD_Struct_MP2)_timeoutValues;
-(void)_getSubscriptionLeasePropertiesWithCompletion:(/*^block*/id)arg1 ;
-(void)setAssetCacheProvider:(id<MPCModelPlaybackAssetCacheProviding>)arg1 ;
-(void)setGenericObject:(MPModelGenericObject *)arg1 ;
-(void)setRadioPlayback:(BOOL)arg1 ;
-(BOOL)_allowsStreamingPlayback;
-(BOOL)_allowsAssetCaching;
-(id)_rtcReportingServiceIdentifierWithAssetURL:(id)arg1 ;
-(void)_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:(id)arg1 ;
-(void)_applyPreferredPeakBitRateToPlayerItem:(id)arg1 withItemType:(long long)arg2 ;
-(void)_suzeLeaseSessionRenewDidFailNotification:(id)arg1 ;
-(void)_handlePlaybackFinishedTime:(double)arg1 didFinishByHittingEnd:(BOOL)arg2 ;
-(void)_updatePreventionStatusWithLeaseSession:(id)arg1 ;
-(void)_getUnverifiedSubscriptionLeaseSessionWithCompletion:(/*^block*/id)arg1 ;
-(void)_updateBookmarkTime:(double)arg1 isCheckpoint:(BOOL)arg2 ;
-(void)_updateHasBeenPlayedWithElapsedTime:(double)arg1 completion:(/*^block*/id)arg2 ;
-(void)_updateAutomaticSubscriptionLeaseRefresh;
-(unsigned long long)mpcReporting_itemType;
-(NSData *)jingleTimedMetadata;
-(id)_isPrivateListeningEnabled;
-(void)_reloadTimedMetadataRequest;
-(void)_updateJingleTimedMetadata;
-(void)_invalidateContentItem;
-(void)_postInvalidationNotifications;
-(void)_timedMetadataResponseDidInvalidateNotification:(id)arg1 ;
-(id)_modelPlaybackPosition;
-(void)_subscriptionLeaseStatusDidChangeNotification:(id)arg1 ;
-(id)initWithGenericObject:(id)arg1 itemProperties:(id)arg2 playbackRequestEnvironment:(id)arg3 identityPropertySet:(id)arg4 ;
-(long long)mpcReporting_equivalencySourceAdamID;
-(id)mpcReporting_identityPropertiesLoader;
-(id)mpcReporting_jingleTimedMetadata;
-(id)mpcReporting_requestingBundleIdentifier;
-(id)mpcReporting_requestingBundleVersion;
-(BOOL)mpcReporting_shouldUseRelativeTimePositions;
-(BOOL)mpcReporting_shouldReportPlayEventsToStore;
-(id)mpcReporting_privateListeningEnabled;
-(id)mpcReporting_siriInitiated;
-(id)mpcReporting_trackInfo;
-(void)setSupportsRadioTrackActions:(BOOL)arg1 ;
-(id<MPCModelPlaybackAssetCacheProviding>)assetCacheProvider;
-(MPModelGenericObject *)genericObject;
-(void)setRadioStreamPlayback:(BOOL)arg1 ;
-(MPCPlaybackRequestEnvironment *)playbackRequestEnvironment;
-(long long)stationItemLikedState;
-(void)setStationItemLikedState:(long long)arg1 ;
@end


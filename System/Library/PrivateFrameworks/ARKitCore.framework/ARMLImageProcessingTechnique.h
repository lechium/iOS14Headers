/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:52:32 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/ARKitCore.framework/ARKitCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ARKitCore/ARKitCore-Structs.h>
#import <ARKitCore/ARImageBasedTechnique.h>
#import <ARKitCore/ARTechniqueBusyState.h>

@protocol OS_dispatch_queue, OS_dispatch_semaphore;
@class NSObject, NSString, NSArray;

@interface ARMLImageProcessingTechnique : ARImageBasedTechnique <ARTechniqueBusyState> {

	NSObject*<OS_dispatch_queue> _processingQueue;
	NSObject*<OS_dispatch_semaphore> _processingSemaphore;
	os_unfair_lock_s _prepLock;
	double _espressoInputBufferTimestamp;
	os_unfair_lock_s _espressoInputBufferLock;
	void* _espressoContext;
	void* _espressoPlan;
	SCD_Struct_AR101* _espressoNetwork;
	vector<espresso_buffer_t, std::__1::allocator<espresso_buffer_t> >* _espressoOutputTensors;
	vector<__CVPixelBufferPool *, std::__1::allocator<__CVPixelBufferPool *> >* _espressoOutputBufferPools;
	vector<espresso_buffer_t, std::__1::allocator<espresso_buffer_t> >* _espressoInputTensors;
	BOOL _hasBegunPrep;
	BOOL _failedToLoadNetwork;
	CVPixelBufferPoolRef _bgraPixelBufferPool;
	NSString* _previous_network_configuration;
	int _lockedOrientation;
	BOOL _deterministic;
	BOOL _useEspressoZeroCopyOutput;
	BOOL _prepComplete;
	BOOL _networkHasConfigurations;
	NSString* _networkFilePath;
	NSArray* _inputTensorNames;
	NSArray* _outputTensorNames;
	CGSize _networkInputScaleBeforeRotation;
	CGSize _allowedResamplingImageSize;

}

@property (assign) BOOL prepComplete;                                               //@synthesize prepComplete=_prepComplete - In the implementation block
@property (nonatomic,retain) NSString * networkFilePath;                            //@synthesize networkFilePath=_networkFilePath - In the implementation block
@property (nonatomic,readonly) NSArray * inputTensorNames;                          //@synthesize inputTensorNames=_inputTensorNames - In the implementation block
@property (nonatomic,readonly) NSArray * outputTensorNames;                         //@synthesize outputTensorNames=_outputTensorNames - In the implementation block
@property (nonatomic,readonly) CGSize networkInputScaleBeforeRotation;              //@synthesize networkInputScaleBeforeRotation=_networkInputScaleBeforeRotation - In the implementation block
@property (assign,nonatomic) CGSize allowedResamplingImageSize;                     //@synthesize allowedResamplingImageSize=_allowedResamplingImageSize - In the implementation block
@property (assign) BOOL networkHasConfigurations;                                   //@synthesize networkHasConfigurations=_networkHasConfigurations - In the implementation block
@property (nonatomic,readonly) NSString * networkVersionString; 
@property (nonatomic,readonly) BOOL failedToLoadNetwork;                            //@synthesize failedToLoadNetwork=_failedToLoadNetwork - In the implementation block
@property (assign,nonatomic) BOOL useEspressoZeroCopyOutput;                        //@synthesize useEspressoZeroCopyOutput=_useEspressoZeroCopyOutput - In the implementation block
@property (nonatomic,readonly) BOOL isBusy; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)isSupported;
-(BOOL)isBusy;
-(id)processData:(id)arg1 ;
-(void)dealloc;
-(void)prepare:(BOOL)arg1 ;
-(double)requiredTimeInterval;
-(id)resultDataClasses;
-(id)initWithDispatchQueue:(id)arg1 inputTensorNames:(id)arg2 outputTensorNames:(id)arg3 networkInputScaleBeforeRotation:(CGSize)arg4 networkFilePath:(id)arg5 useEspressoZeroCopyOutput:(BOOL)arg6 ;
-(SCD_Struct_AR102)networkInputParams;
-(void)_startLoadingMLModelSignpost;
-(void)_endLoadingMLModelSignpost;
-(void)_startMLProcessingSignpostWithTimestamp:(double)arg1 ;
-(void)_endMLProcessingSignpostWithTimestamp:(double)arg1 ;
-(void)_startMLRunNetworkSignpostWithTimestamp:(double)arg1 ;
-(void)_endMLRunNetworkSignpostWithTimestamp:(double)arg1 ;
-(void)_startMLCreateResultSignpostWithTimestamp:(double)arg1 orientation:(long long)arg2 outputSize:(CGSize)arg3 ;
-(void)_endMLCreateResultSignpostWithTimestamp:(double)arg1 ;
-(id)initWithDispatchQueue:(id)arg1 inputTensorNames:(id)arg2 outputTensorNames:(id)arg3 networkInputScaleBeforeRotation:(CGSize)arg4 networkFilePath:(id)arg5 ;
-(void)setAllowedResamplingImageSize:(CGSize)arg1 ;
-(BOOL)ARMLVerifyLoadedModelVersion:(id)arg1 deviceName:(id)arg2 major:(int)arg3 minor:(int)arg4 ;
-(BOOL)isLoadedModelVersionCorrect:(id)arg1 ;
-(void)changeEspressoConfig:(id)arg1 ;
-(id)createResultDataFromTensors:(SCD_Struct_AR21*)arg1 numberOfOutputTensors:(unsigned long long)arg2 imageDataForNeuralNetwork:(id)arg3 inputImageData:(id)arg4 rotationNeeded:(long long)arg5 regionOfInterest:(CGSize)arg6 ;
-(SCD_Struct_AR101*)espressoNetwork;
-(void*)espressoPlan;
-(SCD_Struct_AR21*)espressoOutputTensorsData;
-(unsigned long long)requiredSensorDataTypes;
-(id)processEspressoTensor:(id)arg1 ;
-(long long)captureBehavior;
-(long long)_getDeviceOrientation;
-(void)lockOrientation:(long long)arg1 ;
-(BOOL)failedToLoadNetwork;
-(id)networkModesForOrientation:(long long)arg1 ;
-(BOOL)preProcessNetworkInputImage:(CVBufferRef)arg1 ;
-(NSArray *)inputTensorNames;
-(unsigned long long)espressoOutputTensorsSize;
-(id)runNeuralNetworkWithImageData:(id)arg1 originalImageData:(id)arg2 regionOfInterest:(CGSize)arg3 rotationOfResultTensor:(long long)arg4 ;
-(NSString *)networkVersionString;
-(SCD_Struct_AR21*)espressoInputTensorsData;
-(int)bindInputBuffer:(unsigned long long)arg1 withImage:(id)arg2 andOriginalImageData:(id)arg3 rotationOfResultTensor:(long long)arg4 ;
-(void)networkModeDidChange:(id)arg1 toMode:(id)arg2 ;
-(int)prepareBindInputBuffer:(unsigned long long)arg1 withName:(id)arg2 ;
-(void)_captureMLRunNetworkInputImageData:(double)arg1 cameraType:(long long)arg2 imageWidth:(unsigned long long)arg3 imageHeight:(unsigned long long)arg4 ;
-(long long)numberOfInputChannelsToExpectInNetwork;
-(NSArray *)outputTensorNames;
-(BOOL)shouldUseSynchronizedUltraWide;
-(void)setUseEspressoZeroCopyOutput:(BOOL)arg1 ;
-(int)defaultEngine;
-(id)defaultEngineName;
-(void)_bindOutputTensor;
-(BOOL)useEspressoZeroCopyOutput;
-(void)loadMLWithPath:(id)arg1 networkMode:(id)arg2 ;
-(void)setPrepComplete:(BOOL)arg1 ;
-(BOOL)prepComplete;
-(void)_asynchronousProcessDownSampledImage:(id)arg1 ;
-(void)waitForProcessingCompleteInDeterministicMode;
-(void)_asynchronousProcessEspressoTensor:(id)arg1 ;
-(BOOL)networkProvidesConfigurationsForDeviceOrientation;
-(id)_resampleImage:(id)arg1 rotationOfResultTensor:(long long)arg2 networkInputSize:(CGSize)arg3 ;
-(void)_runNeuralNetworkAndPushResult:(id)arg1 originalImageData:(id)arg2 regionOfInterest:(CGSize)arg3 rotationOfResultTensor:(long long)arg4 ;
-(id)processImageDataThroughNeuralNetwork:(id)arg1 originalImageData:(id)arg2 regionOfInterest:(CGSize)arg3 rotationOfResultTensor:(long long)arg4 ;
-(id)processingSemaphore;
-(unsigned long long)espressoInputTensorsSize;
-(long long)orientationForInitializingEspresso;
-(NSString *)networkFilePath;
-(void)setNetworkFilePath:(NSString *)arg1 ;
-(CGSize)networkInputScaleBeforeRotation;
-(CGSize)allowedResamplingImageSize;
-(BOOL)networkHasConfigurations;
-(void)setNetworkHasConfigurations:(BOOL)arg1 ;
@end


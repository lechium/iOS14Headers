/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:52:31 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/ARKitCore.framework/ARKitCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ARKitCore/ARKitCore-Structs.h>
#import <ARKitCore/ARTechnique.h>
#import <ARKitCore/ARGeoTrackingTechniqueProtocol.h>

@protocol OS_dispatch_queue;
@class NSObject, GEOApplicationAuditToken, ARGeoTrackingTechniqueState, VLTraceRecorder, CLSimulationManager, NSNumber, NSArray;

@interface ARGeoTrackingTechnique : ARTechnique <ARGeoTrackingTechniqueProtocol> {

	os_unfair_lock_s _resultLock;
	NSObject*<OS_dispatch_queue> _visualLocalizationQueue;
	BOOL _deterministic;
	BOOL _useCLCMFusion;
	BOOL _useGradualCorrection;
	BOOL _useVLTraceRecorder;
	os_unfair_lock_s _statusLock;
	GEOApplicationAuditToken* _auditToken;
	os_unfair_lock_s _resetLock;
	ARGeoTrackingTechniqueState* _state;
	os_unfair_lock_s _deviceMotionLock;
	double _maxHorizontalAccuracy;
	BOOL _visualLocalizationUpdatesRequested;
	BOOL _VLPoseEstimationExecuting;
	double _visualLocalizationCallInterval;
	double _posteriorVisualLocalizationCallInterval;
	double _visualLocalizationCallIntervalTimeThreshold;
	unsigned long long _supportEnablementOptions;
	VLTraceRecorder* _VLTraceRecorder;
	CLSimulationManager* _locationSimulationManager;

}

@property (assign) BOOL VLPoseEstimationExecuting;                                                 //@synthesize VLPoseEstimationExecuting=_VLPoseEstimationExecuting - In the implementation block
@property (retain) VLTraceRecorder * VLTraceRecorder;                                              //@synthesize VLTraceRecorder=_VLTraceRecorder - In the implementation block
@property (nonatomic,retain) CLSimulationManager * locationSimulationManager;                      //@synthesize locationSimulationManager=_locationSimulationManager - In the implementation block
@property (assign) double visualLocalizationCallInterval;                                          //@synthesize visualLocalizationCallInterval=_visualLocalizationCallInterval - In the implementation block
@property (assign) double posteriorVisualLocalizationCallInterval;                                 //@synthesize posteriorVisualLocalizationCallInterval=_posteriorVisualLocalizationCallInterval - In the implementation block
@property (assign) double visualLocalizationCallIntervalTimeThreshold;                             //@synthesize visualLocalizationCallIntervalTimeThreshold=_visualLocalizationCallIntervalTimeThreshold - In the implementation block
@property (assign) BOOL visualLocalizationUpdatesRequested;                                        //@synthesize visualLocalizationUpdatesRequested=_visualLocalizationUpdatesRequested - In the implementation block
@property (assign) unsigned long long supportEnablementOptions;                                    //@synthesize supportEnablementOptions=_supportEnablementOptions - In the implementation block
@property (__weak) id<ARTechniqueDelegate> delegate; 
@property (assign) unsigned long long powerUsage; 
@property (assign) double bonusLatency; 
@property (readonly) NSNumber * traceKey; 
@property (retain) NSArray * splitTechniques; 
@property (retain) id<ARTechniqueForwardingStrategy> splitTechniqueFowardingStrategy; 
+(BOOL)isSupported;
+(BOOL)isSupportedWithOptions:(unsigned long long)arg1 ;
+(long long)getFailureReasonFromVLError:(long long)arg1 ;
-(id)processData:(id)arg1 ;
-(void)dealloc;
-(id)initWithAuditToken:(id)arg1 ;
-(id)init;
-(void)prepare:(BOOL)arg1 ;
-(void)requestResultDataAtTimestamp:(double)arg1 context:(id)arg2 ;
-(id)resultDataClasses;
-(unsigned long long)requiredSensorDataTypes;
-(BOOL)reconfigurableFrom:(id)arg1 ;
-(void)reconfigureFrom:(id)arg1 ;
-(long long)captureBehavior;
-(double)visualLocalizationCallInterval;
-(void)setVisualLocalizationCallInterval:(double)arg1 ;
-(void)setPosteriorVisualLocalizationCallInterval:(double)arg1 ;
-(BOOL)visualLocalizationUpdatesRequested;
-(void)setVisualLocalizationUpdatesRequested:(BOOL)arg1 ;
-(unsigned long long)supportEnablementOptions;
-(void)setSupportEnablementOptions:(unsigned long long)arg1 ;
-(4)getLocationFromWorldPosition:(id*)arg1 ;
-(void)setVLPoseEstimationExecuting:(BOOL)arg1 ;
-(void)setVisualLocalizationCallIntervalTimeThreshold:(double)arg1 ;
-(void)setVLTraceRecorder:(VLTraceRecorder *)arg1 ;
-(VLTraceRecorder *)VLTraceRecorder;
-(CLSimulationManager *)locationSimulationManager;
-(double)posteriorVisualLocalizationCallInterval;
-(double)visualLocalizationCallIntervalTimeThreshold;
-(void)setLocationSimulationManager:(CLSimulationManager *)arg1 ;
-(void)_simulateReplayLocationUpdates:(id)arg1 ;
-(void)_setTrackingState:(long long)arg1 techniqueStateObject:(id)arg2 ;
-(void)_estimateEnuFromVioFromCLCM:(id)arg1 startState:(id)arg2 ;
-(BOOL)VLPoseEstimationExecuting;
-(void)_estimatePose:(id)arg1 pose:(id)arg2 ;
-(void)_updateVLStateData:(double)arg1 ;
-(long long)_getHighestPriorityFailureWithTechniqueStateObject:(id)arg1 ;
-(id)_findClosestDataFromBuffer:(id)arg1 toTimestamp:(double)arg2 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:45:04 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/BSServiceConnectionListenerDelegate.h>
#import <libobjc.A.dylib/SBSWebClipServiceClientToServerInterface.h>

@protocol OS_dispatch_queue;
@class SBMainWorkspace, SBMainDisplaySceneManager, SBApplicationPlaceholderController, SBApplicationController, SBLockScreenManager, FBServiceClientAuthenticator, BSServiceConnectionListener, NSObject, NSMutableArray, NSString, NSNumber;

@interface SBWebClipService : NSObject <BSServiceConnectionListenerDelegate, SBSWebClipServiceClientToServerInterface> {

	SBMainWorkspace* _workspace;
	SBMainDisplaySceneManager* _sceneManager;
	SBApplicationPlaceholderController* _placeholderController;
	SBApplicationController* _applicationController;
	SBLockScreenManager* _lockScreenManager;
	FBServiceClientAuthenticator* _legacyClientAuthenticator;
	FBServiceClientAuthenticator* _clientAuthenticator;
	BSServiceConnectionListener* _connectionListener;
	NSObject*<OS_dispatch_queue> _serviceQueue;
	NSMutableArray* _connections;
	unsigned long long _pendingLaunchGenerationCount;
	NSString* _pendingBundleIdentifier;
	NSString* _pendingWebClipIdentifier;
	NSNumber* _pendingLaunchOrigin;
	double _pendingLaunchTimeout;

}

@property (assign,nonatomic) double pendingLaunchTimeout;              //@synthesize pendingLaunchTimeout=_pendingLaunchTimeout - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)bestWebClipForTargetContentIdentifier:(id)arg1 fromWebClips:(id)arg2 ;
-(void)_queue_addConnection:(id)arg1 ;
-(void)listener:(id)arg1 didReceiveConnection:(id)arg2 withContext:(id)arg3 ;
-(void)_applicationsDidChange:(id)arg1 ;
-(void)_queue_removeConnection:(id)arg1 ;
-(void)updateWebClipPropertiesWithIdentifier:(id)arg1 ;
-(void)launchWebClipWithIdentifier:(id)arg1 origin:(id)arg2 ;
-(id)initWithWorkspace:(id)arg1 sceneManager:(id)arg2 placeholderController:(id)arg3 applicationController:(id)arg4 lockScreenManager:(id)arg5 ;
-(void)prepareToLaunchWebClipWithIdentifier:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)_placeholdersDidChange:(id)arg1 ;
-(void)buildLaunchActionsForAppClipWithWebClipIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_clearPendingLaunch;
-(void)_beginWaitingForBundleIdentifier:(id)arg1 webClipIdentifier:(id)arg2 launchOrigin:(id)arg3 ;
-(void)_generateUserActivityDataFromUserActivity:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)initForTestingWithPlaceholderController:(id)arg1 applicationController:(id)arg2 ;
-(double)pendingLaunchTimeout;
-(void)setPendingLaunchTimeout:(double)arg1 ;
@end


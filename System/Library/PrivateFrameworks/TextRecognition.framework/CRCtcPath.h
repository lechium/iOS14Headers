/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:45:08 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/TextRecognition.framework/TextRecognition
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TextRecognition/TextRecognition-Structs.h>
@class NSString;

@interface CRCtcPath : NSObject {

	vector<unsigned int, std::__1::allocator<unsigned int> >* _tokenString;
	vector<unsigned int, std::__1::allocator<unsigned int> >* _histWordTokenIDs;
	unsigned long long _beginningCurrentWord;
	vector<_NSRange, std::__1::allocator<_NSRange> >* _whitespaceRanges;
	unsigned long long _numCustomWords;
	NSString* _string;
	double _probBlank;
	double _probNonBlank;
	double _probLexHist;
	double _probLexCurrWord;
	double _probCharNGram;
	double _probWM;
	LXCursorRef _lxStaticCursor;
	LXCursorRef _lxDynamicCursor;

}

@property (retain) NSString * string;                                  //@synthesize string=_string - In the implementation block
@property (assign) double probBlank;                                   //@synthesize probBlank=_probBlank - In the implementation block
@property (assign) double probNonBlank;                                //@synthesize probNonBlank=_probNonBlank - In the implementation block
@property (assign) double probLexHist;                                 //@synthesize probLexHist=_probLexHist - In the implementation block
@property (assign) double probLexCurrWord;                             //@synthesize probLexCurrWord=_probLexCurrWord - In the implementation block
@property (assign) double probCharNGram;                               //@synthesize probCharNGram=_probCharNGram - In the implementation block
@property (assign) double probWM;                                      //@synthesize probWM=_probWM - In the implementation block
@property (readonly) double probTotal; 
@property (readonly) double probLM; 
@property (readonly) double probTotalNorm; 
@property (assign,nonatomic) LXCursorRef lxStaticCursor;               //@synthesize lxStaticCursor=_lxStaticCursor - In the implementation block
@property (assign,nonatomic) LXCursorRef lxDynamicCursor;              //@synthesize lxDynamicCursor=_lxDynamicCursor - In the implementation block
+(id)_getQueue;
+(void)updateWMProbForPath:(id)arg1 stemmingFromPath:(id)arg2 wordModel:(void*)arg3 locale:(id)arg4 forChar:(unsigned short)arg5 ;
+(void)updateNGramProbForPath:(id)arg1 stemmingFromPath:(id)arg2 withModel:(void*)arg3 forChar:(unsigned short)arg4 ;
+(void)updateLexiconProbForPath:(id)arg1 stemmingFromPath:(id)arg2 staticLexicon:(LXLexiconRef)arg3 dynamicLexicon:(LXLexiconRef)arg4 forChar:(unsigned short)arg5 ;
+(BOOL)_isWordCustom:(id)arg1 dynamicLexicon:(LXLexiconRef)arg2 ;
+(void)useLMTokenizerOnString:(id)arg1 outTokenIDs:(id*)arg2 outTokenRanges:(id*)arg3 wordModel:(void*)arg4 locale:(id)arg5 ;
+(double)lmProbForString:(id)arg1 forPath:(id)arg2 originalWordRanges:(id)arg3 originalWordIDs:(id)arg4 wordRanges:(id)arg5 wordIDs:(id)arg6 wordModel:(void*)arg7 ;
+(unsigned)normalizeLMTokenIDForWord:(id)arg1 withTokenID:(unsigned)arg2 outScore:(double*)arg3 wordModel:(void*)arg4 ;
-(NSString *)string;
-(void)setString:(NSString *)arg1 ;
-(void)dealloc;
-(double)probLM;
-(double)probWM;
-(id)init;
-(long long)compare:(id)arg1 ;
-(LXCursorRef)lxStaticCursor;
-(void)setLxStaticCursor:(LXCursorRef)arg1 ;
-(LXCursorRef)lxDynamicCursor;
-(void)setLxDynamicCursor:(LXCursorRef)arg1 ;
-(double)probTotal;
-(double)probTotalNorm;
-(double)probNonBlank;
-(void)setProbNonBlank:(double)arg1 ;
-(double)probBlank;
-(void)setProbBlank:(double)arg1 ;
-(double)probCharNGram;
-(void)setProbCharNGram:(double)arg1 ;
-(double)probLexHist;
-(void)setProbLexHist:(double)arg1 ;
-(double)probLexCurrWord;
-(void)setProbLexCurrWord:(double)arg1 ;
-(void)setProbWM:(double)arg1 ;
-(id)whiteSpaceRangesExcludingTrailing;
-(void)merge:(id)arg1 replaceWhiteSpaces:(BOOL)arg2 ;
-(id)childPathWithBlankProb:(double)arg1 ;
-(void)updateWhitespacesForTimeSample:(unsigned long long)arg1 ;
-(id)pathByExtendingWithCharacter:(unsigned short)arg1 characterNGramModel:(void*)arg2 staticLexicon:(LXLexiconRef)arg3 dynamicLexicon:(LXLexiconRef)arg4 wordModel:(void*)arg5 locale:(id)arg6 forTimeSample:(unsigned long long)arg7 ;
-(BOOL)containsCustomWords:(LXLexiconRef)arg1 ;
@end


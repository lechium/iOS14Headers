/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:52:09 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/VisualLocalization.framework/VisualLocalization
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

typedef struct _NSZone* NSZoneRef;

typedef struct {
	 coordinate;
	double horizontalAccuracy;
} SCD_Struct_VL1;

typedef struct {
	[4 columns];
} SCD_Struct_VL2;

typedef struct {
	float v[6][6];
} SCD_Struct_VL3;

typedef struct {
	double field1[3];
	double field2[3][3];
	float field3;
	float field4[36];
} SCD_Struct_VL4;

typedef struct {
	double pos_geoc[3];
	float horz_accuracy;
	int is_vl_fused;
	int type;
} SCD_Struct_VL5;

typedef struct {
	double trueHeading;
	double accuracy;
} SCD_Struct_VL6;

typedef struct {
	[3 columns];
} SCD_Struct_VL7;

typedef struct {
	int level;
	int x;
	int y;
	int uncertainty;
} SCD_Struct_VL8;

typedef struct {
	double points3d;
	float points2d;
	int inlier_indices;
	float solver_conf;
	float fused_conf;
	float gravity[3];
	int num_keypoints;
	int num_tracks;
	int num_matches;
	int num_inliers;
	int num_inliers_gt;
	int num_solutions;
	int status_ps;
	double t_kpts;
	double t_kpts_pyr;
	double t_kpts_det;
	double t_kpts_model;
	double t_kpts_desc;
	double t_load;
	double t_index;
	double t_pca;
	double t_match;
	double t_match_sss;
	double t_match_filter;
	double t_pose;
	double t_pose_score_filter;
	double t_pose_score_vote;
	double t_pose_score_find_peak;
	double t_pose_score_refine;
	double t_pose_score_other;
	double t_pose_score;
	double t_pose_ransac;
	double t_pose_referee;
	double t_pose_fuse;
	double t_total;
	SCD_Struct_VL8 tile;
	long long tracks_file_size;
	int peak_mem_usage;
} SCD_Struct_VL9;

typedef struct __CVBuffer* CVBufferRef;

typedef struct {
	double field1;
	float field2;
	int field3;
	float field4;
	float field5;
	float field6[3];
	int field7;
	int field8;
	int field9;
	int field10;
	int field11;
	int field12;
	int field13;
	double field14;
	double field15;
	double field16;
	double field17;
	double field18;
	double field19;
	double field20;
	double field21;
	double field22;
	double field23;
	double field24;
	double field25;
	double field26;
	double field27;
	double field28;
	double field29;
	double field30;
	double field31;
	double field32;
	double field33;
	double field34;
	double field35;
	SCD_Struct_VL8 field36;
	long long field37;
	int field38;
} SCD_Struct_VL11;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<VLLocalizationDataKey, void *> > > {
	unsigned long long __value_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<VLLocalizationDataKey, void *> > >;

typedef struct _list_node_base<VLLocalizationDataKey, void *> {
	__list_node_base<VLLocalizationDataKey, void *> __prev_;
	__list_node_base<VLLocalizationDataKey, void *> __next_;
} list_node_base<VLLocalizationDataKey, void *>;

typedef struct list<VLLocalizationDataKey, std::__1::allocator<VLLocalizationDataKey> > {
	list_node_base<VLLocalizationDataKey, void *> __end_;
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<VLLocalizationDataKey, void *> > > __size_alloc_;
} list<VLLocalizationDataKey, std::__1::allocator<VLLocalizationDataKey> >;

typedef struct os_unfair_lock_s {
	unsigned _os_unfair_lock_opaque;
} os_unfair_lock_s;

typedef struct GEOOnce_s {
	os_unfair_lock_s lock;
	BOOL didRun;
} GEOOnce_s;

typedef struct vl_t* vl_tRef;


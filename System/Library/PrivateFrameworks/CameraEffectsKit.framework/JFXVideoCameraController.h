/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:54:04 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/CameraEffectsKit.framework/CameraEffectsKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CameraEffectsKit/CameraEffectsKit-Structs.h>
#import <libobjc.A.dylib/AVCaptureDataOutputSynchronizerDelegate.h>
#import <libobjc.A.dylib/AVCaptureAudioDataOutputSampleBufferDelegate.h>
#import <libobjc.A.dylib/AVCapturePhotoCaptureDelegate.h>
#import <libobjc.A.dylib/AVCaptureMetadataOutputObjectsDelegate.h>
#import <libobjc.A.dylib/JFXARKitFrameDelegate.h>

@protocol OS_dispatch_queue, JFXVideoCameraThermalDelegate;
@class AVCaptureSession, AVCaptureDeviceInput, AVCaptureVideoDataOutput, AVCaptureAudioDataOutput, AVCaptureDepthDataOutput, AVCaptureMetadataOutput, AVCapturePhotoOutput, AVCaptureDataOutputSynchronizer, NSObject, NSString, NSMutableSet, NSNumber, VCPCaptureAnalysisSession, JFXARKitCameraSessionController, NSArray, PVFrameSet, JFXARMetadata, JFXFaceAnchor, JFXCaptureCallObserver;

@interface JFXVideoCameraController : NSObject <AVCaptureDataOutputSynchronizerDelegate, AVCaptureAudioDataOutputSampleBufferDelegate, AVCapturePhotoCaptureDelegate, AVCaptureMetadataOutputObjectsDelegate, JFXARKitFrameDelegate> {

	AVCaptureSession* _captureSession;
	AVCaptureDeviceInput* _cameraDeviceInput;
	AVCaptureDeviceInput* _audioInput;
	AVCaptureVideoDataOutput* _videoOutput;
	AVCaptureAudioDataOutput* _audioOutput;
	AVCaptureDepthDataOutput* _depthOutput;
	AVCaptureMetadataOutput* _metadataOutput;
	AVCapturePhotoOutput* _photoOutput;
	AVCaptureDataOutputSynchronizer* _dataOutputSynchronizer;
	NSObject*<OS_dispatch_queue> _captureSessionQueue;
	NSObject*<OS_dispatch_queue> _audioOutQueue;
	NSObject*<OS_dispatch_queue> _dataOutSynchQueue;
	NSObject*<OS_dispatch_queue> _queryDataQueue;
	NSString* _photoOutCodec;
	/*^block*/id _capturePhotoCompletionBlock;
	NSMutableSet* _videoDelegates;
	NSObject*<OS_dispatch_queue> _videoDelegateQueue;
	NSMutableSet* _audioDelegates;
	NSObject*<OS_dispatch_queue> _audioDelegateQueue;
	NSMutableSet* _livePlayerSources;
	NSObject*<OS_dispatch_queue> _livePlayerSourceQueue;
	BOOL _observingAudioRouteChanges;
	BOOL _runningARKit_dataOutSynchQueue;
	BOOL _captureSessionRunning_queryDataQueue;
	BOOL _allowARMetadata_queryDataQueue;
	BOOL _hasValidFaceData_queryDataQueue;
	BOOL _sessionRequiresFaceTracking_queryDataQueue;
	BOOL _isFlashScene_queryDataQueue;
	BOOL _isRecordingMovie_captureSessionQueue;
	NSNumber* _largestDepthDimension;
	VCPCaptureAnalysisSession* _vcpAnalyzer;
	NSString* _ownerName;
	id<JFXVideoCameraThermalDelegate> _thermalDelegate;
	JFXARKitCameraSessionController* _arCameraSessionController;
	long long _cameraMode_captureSessionQueue;
	long long _cameraMode_dataOutSynchQueue;
	long long _cameraMode_queryDataQueue;
	NSString* _cameraType_queryDataQueue;
	long long _currentCameraPosition_captureSessionQueue;
	long long _currentCameraPosition_dataOutSynchQueue;
	long long _currentCameraPosition_queryDataQueue;
	long long _cameraColorSpace_queryDataQueue;
	double _cameraVideoZoomFactor_queryDataQueue;
	double _cameraVideoMaxZoomFactor_captureSessionQueue;
	long long _cachedMovieRecordingTorchMode;
	NSArray* _pvDetectedFacesArray_dataOutSynchQueue;
	NSArray* _metadataFaceObjectsArray_dataOutSynchQueue;
	NSArray* _metadataTrackedFacesArray_dataOutSynchQueue;
	long long _captureVideoOrientation_dataOutSynchQueue;
	long long _captureVideoOrientation_queryDataQueue;
	PVFrameSet* _capturedPhotoFrameSet_dataOutSynchQueue;
	PVFrameSet* _currentFrameSet_dataOutSynchQueue;
	JFXARMetadata* _mostRecentARMetadata_queryDataQueue;
	JFXFaceAnchor* _stillImageFaceAnchor_queryDataQueue;
	NSNumber* _currentlyTrackedFaceID;
	JFXCaptureCallObserver* _callObserver;
	CGSize _cameraFrameResolution_dataOutSynchQueue;
	SCD_Struct_JF13 _cameraDeviceIntrinsics_dataOutSynchQueue;

}

@property (assign,nonatomic) long long cameraMode_captureSessionQueue;                                 //@synthesize cameraMode_captureSessionQueue=_cameraMode_captureSessionQueue - In the implementation block
@property (assign,nonatomic) long long cameraMode_dataOutSynchQueue;                                   //@synthesize cameraMode_dataOutSynchQueue=_cameraMode_dataOutSynchQueue - In the implementation block
@property (assign,nonatomic) long long cameraMode_queryDataQueue;                                      //@synthesize cameraMode_queryDataQueue=_cameraMode_queryDataQueue - In the implementation block
@property (assign,nonatomic) BOOL captureSessionRunning_queryDataQueue;                                //@synthesize captureSessionRunning_queryDataQueue=_captureSessionRunning_queryDataQueue - In the implementation block
@property (nonatomic,retain) NSString * cameraType_queryDataQueue;                                     //@synthesize cameraType_queryDataQueue=_cameraType_queryDataQueue - In the implementation block
@property (assign,nonatomic) long long currentCameraPosition_captureSessionQueue;                      //@synthesize currentCameraPosition_captureSessionQueue=_currentCameraPosition_captureSessionQueue - In the implementation block
@property (assign,nonatomic) long long currentCameraPosition_dataOutSynchQueue;                        //@synthesize currentCameraPosition_dataOutSynchQueue=_currentCameraPosition_dataOutSynchQueue - In the implementation block
@property (assign,nonatomic) long long currentCameraPosition_queryDataQueue;                           //@synthesize currentCameraPosition_queryDataQueue=_currentCameraPosition_queryDataQueue - In the implementation block
@property (assign,nonatomic) long long cameraColorSpace_queryDataQueue;                                //@synthesize cameraColorSpace_queryDataQueue=_cameraColorSpace_queryDataQueue - In the implementation block
@property (assign,nonatomic) double cameraVideoZoomFactor_queryDataQueue;                              //@synthesize cameraVideoZoomFactor_queryDataQueue=_cameraVideoZoomFactor_queryDataQueue - In the implementation block
@property (assign,nonatomic) double cameraVideoMaxZoomFactor_captureSessionQueue;                      //@synthesize cameraVideoMaxZoomFactor_captureSessionQueue=_cameraVideoMaxZoomFactor_captureSessionQueue - In the implementation block
@property (assign,nonatomic) SCD_Struct_JF13 cameraDeviceIntrinsics_dataOutSynchQueue;                 //@synthesize cameraDeviceIntrinsics_dataOutSynchQueue=_cameraDeviceIntrinsics_dataOutSynchQueue - In the implementation block
@property (assign,nonatomic) CGSize cameraFrameResolution_dataOutSynchQueue;                           //@synthesize cameraFrameResolution_dataOutSynchQueue=_cameraFrameResolution_dataOutSynchQueue - In the implementation block
@property (assign,nonatomic) long long cachedMovieRecordingTorchMode;                                  //@synthesize cachedMovieRecordingTorchMode=_cachedMovieRecordingTorchMode - In the implementation block
@property (nonatomic,retain) NSArray * pvDetectedFacesArray_dataOutSynchQueue;                         //@synthesize pvDetectedFacesArray_dataOutSynchQueue=_pvDetectedFacesArray_dataOutSynchQueue - In the implementation block
@property (nonatomic,retain) NSArray * metadataFaceObjectsArray_dataOutSynchQueue;                     //@synthesize metadataFaceObjectsArray_dataOutSynchQueue=_metadataFaceObjectsArray_dataOutSynchQueue - In the implementation block
@property (nonatomic,retain) NSArray * metadataTrackedFacesArray_dataOutSynchQueue;                    //@synthesize metadataTrackedFacesArray_dataOutSynchQueue=_metadataTrackedFacesArray_dataOutSynchQueue - In the implementation block
@property (assign,nonatomic) long long captureVideoOrientation_dataOutSynchQueue;                      //@synthesize captureVideoOrientation_dataOutSynchQueue=_captureVideoOrientation_dataOutSynchQueue - In the implementation block
@property (assign,nonatomic) long long captureVideoOrientation_queryDataQueue;                         //@synthesize captureVideoOrientation_queryDataQueue=_captureVideoOrientation_queryDataQueue - In the implementation block
@property (assign,nonatomic) BOOL allowARMetadata_queryDataQueue;                                      //@synthesize allowARMetadata_queryDataQueue=_allowARMetadata_queryDataQueue - In the implementation block
@property (assign,nonatomic) BOOL hasValidFaceData_queryDataQueue;                                     //@synthesize hasValidFaceData_queryDataQueue=_hasValidFaceData_queryDataQueue - In the implementation block
@property (assign,nonatomic) BOOL sessionRequiresFaceTracking_queryDataQueue;                          //@synthesize sessionRequiresFaceTracking_queryDataQueue=_sessionRequiresFaceTracking_queryDataQueue - In the implementation block
@property (assign,nonatomic) BOOL isFlashScene_queryDataQueue;                                         //@synthesize isFlashScene_queryDataQueue=_isFlashScene_queryDataQueue - In the implementation block
@property (nonatomic,retain) JFXARKitCameraSessionController * arCameraSessionController;              //@synthesize arCameraSessionController=_arCameraSessionController - In the implementation block
@property (nonatomic,retain) PVFrameSet * capturedPhotoFrameSet_dataOutSynchQueue;                     //@synthesize capturedPhotoFrameSet_dataOutSynchQueue=_capturedPhotoFrameSet_dataOutSynchQueue - In the implementation block
@property (nonatomic,retain) PVFrameSet * currentFrameSet_dataOutSynchQueue;                           //@synthesize currentFrameSet_dataOutSynchQueue=_currentFrameSet_dataOutSynchQueue - In the implementation block
@property (nonatomic,retain) JFXARMetadata * mostRecentARMetadata_queryDataQueue;                      //@synthesize mostRecentARMetadata_queryDataQueue=_mostRecentARMetadata_queryDataQueue - In the implementation block
@property (nonatomic,retain) JFXFaceAnchor * stillImageFaceAnchor_queryDataQueue;                      //@synthesize stillImageFaceAnchor_queryDataQueue=_stillImageFaceAnchor_queryDataQueue - In the implementation block
@property (assign,nonatomic) BOOL isRecordingMovie_captureSessionQueue;                                //@synthesize isRecordingMovie_captureSessionQueue=_isRecordingMovie_captureSessionQueue - In the implementation block
@property (nonatomic,readonly) VCPCaptureAnalysisSession * vcpAnalyzer;                                //@synthesize vcpAnalyzer=_vcpAnalyzer - In the implementation block
@property (nonatomic,retain) NSNumber * currentlyTrackedFaceID;                                        //@synthesize currentlyTrackedFaceID=_currentlyTrackedFaceID - In the implementation block
@property (nonatomic,readonly) JFXCaptureCallObserver * callObserver;                                  //@synthesize callObserver=_callObserver - In the implementation block
@property (nonatomic,readonly) long long cameraMode; 
@property (nonatomic,readonly) BOOL cameraSessionRunning; 
@property (nonatomic,readonly) long long cameraColorSpace; 
@property (nonatomic,readonly) BOOL audioEnabled; 
@property (nonatomic,readonly) BOOL depthEnabled; 
@property (nonatomic,readonly) BOOL isFlashScene; 
@property (nonatomic,readonly) SCD_Struct_JF27 depthDimensions; 
@property (nonatomic,retain) NSNumber * largestDepthDimension;                                         //@synthesize largestDepthDimension=_largestDepthDimension - In the implementation block
@property (assign,nonatomic) double zoomFactor; 
@property (nonatomic,retain) NSString * ownerName;                                                     //@synthesize ownerName=_ownerName - In the implementation block
@property (nonatomic,retain) id<JFXVideoCameraThermalDelegate> thermalDelegate;                        //@synthesize thermalDelegate=_thermalDelegate - In the implementation block
@property (nonatomic,readonly) BOOL ARKitEnabled; 
@property (nonatomic,retain) JFXARMetadata * mostRecentARMetadata; 
@property (nonatomic,readonly) JFXFaceAnchor * stillImageFaceAnchor; 
@property (assign,nonatomic) BOOL allowARMetadata; 
@property (assign,nonatomic) BOOL hasValidFaceData; 
@property (assign,nonatomic) BOOL sessionRequiresFaceTracking; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
+(void)initialize;
+(BOOL)allowsDepthFromDualBackCamera;
-(void)setZoomFactor:(double)arg1 ;
-(void)clear;
-(BOOL)isFlashScene;
-(double)zoomFactor;
-(long long)cameraPosition;
-(void)dealloc;
-(id)cameraType;
-(id)init;
-(NSString *)ownerName;
-(void)setOwnerName:(NSString *)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)dataOutputSynchronizer:(id)arg1 didOutputSynchronizedDataCollection:(id)arg2 ;
-(BOOL)audioEnabled;
-(SCD_Struct_JF27)depthDimensions;
-(JFXCaptureCallObserver *)callObserver;
-(BOOL)faceTrackingEnabled;
-(void)captureOutput:(id)arg1 didFinishProcessingPhoto:(id)arg2 error:(id)arg3 ;
-(void)captureOutput:(id)arg1 didOutputSampleBuffer:(opaqueCMSampleBufferRef)arg2 fromConnection:(id)arg3 ;
-(BOOL)depthEnabled;
-(long long)cameraMode;
-(void)prepareCameraForMode:(long long)arg1 position:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)setThermalDelegate:(id<JFXVideoCameraThermalDelegate>)arg1 ;
-(BOOL)sessionRequiresFaceTracking;
-(BOOL)cameraSessionRunning;
-(void)setCaptureTorchMode:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)startCameraSession:(/*^block*/id)arg1 ;
-(void)stopCameraSession:(/*^block*/id)arg1 ;
-(void)setSessionRequiresFaceTracking:(BOOL)arg1 ;
-(void)setMostRecentARMetadata:(JFXARMetadata *)arg1 ;
-(void)setHasValidFaceData:(BOOL)arg1 ;
-(void)addVideoRenderDelegate:(id)arg1 ;
-(void)addAudioRenderDelegate:(id)arg1 ;
-(void)removeVideoRenderDelegate:(id)arg1 async:(BOOL)arg2 ;
-(void)removeAudioRenderDelegate:(id)arg1 async:(BOOL)arg2 ;
-(void)capturePhotoWithFlash:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)videoAndAudioOutputSettings:(/*^block*/id)arg1 ;
-(void)enableRecordingMovieMode:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(long long)captureVideoOrientation;
-(JFXARKitCameraSessionController *)arCameraSessionController;
-(void)notifyExternalARKitFaceTrackedImageData:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)updateCurrentlyTrackedFaceID:(id)arg1 ;
-(void)notifyExternalImageData:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)didUpdateFrame:(id)arg1 ;
-(JFXARMetadata *)mostRecentARMetadata;
-(BOOL)hasValidFaceData;
-(void)JFX_thermalPolicyOrLevelChangedNotification:(id)arg1 ;
-(void)JFX_configureCaptureSessionPhotoOrientationFromInterfaceOrientation:(long long)arg1 ;
-(void)JFX_setIsFlashScene:(BOOL)arg1 ;
-(void)setCameraVideoZoomFactor_queryDataQueue:(double)arg1 ;
-(void)setCurrentFrameSet_dataOutSynchQueue:(PVFrameSet *)arg1 ;
-(void)setCapturedPhotoFrameSet_dataOutSynchQueue:(PVFrameSet *)arg1 ;
-(void)setMostRecentARMetadata_queryDataQueue:(JFXARMetadata *)arg1 ;
-(void)setStillImageFaceAnchor_queryDataQueue:(JFXFaceAnchor *)arg1 ;
-(void)setHasValidFaceData_queryDataQueue:(BOOL)arg1 ;
-(long long)cameraMode_queryDataQueue;
-(BOOL)captureSessionRunning_queryDataQueue;
-(long long)cameraColorSpace_queryDataQueue;
-(BOOL)JFX_isAudioEnabledCaptureSessionQueue;
-(BOOL)JFX_isDepthEnabledCaptureSessionQueue;
-(BOOL)isFlashScene_queryDataQueue;
-(double)cameraVideoZoomFactor_queryDataQueue;
-(double)cameraVideoMaxZoomFactor_captureSessionQueue;
-(void)JFX_setZoomFactor_captureSessionQueue:(double)arg1 ;
-(BOOL)JFX_isARKitEnabledCaptureSessionQueue;
-(JFXARMetadata *)mostRecentARMetadata_queryDataQueue;
-(void)setSessionRequiresFaceTracking_queryDataQueue:(BOOL)arg1 ;
-(BOOL)sessionRequiresFaceTracking_queryDataQueue;
-(JFXFaceAnchor *)stillImageFaceAnchor_queryDataQueue;
-(void)setAllowARMetadata_queryDataQueue:(BOOL)arg1 ;
-(BOOL)allowARMetadata_queryDataQueue;
-(BOOL)hasValidFaceData_queryDataQueue;
-(void)JFX_captureSessionDidStartRunningNotification:(id)arg1 ;
-(void)JFX_captureSessionDidStopRunningNotification:(id)arg1 ;
-(void)JFX_captureSessionWasInterruptedNotification:(id)arg1 ;
-(void)JFX_captureSessionInterruptionEndedNotification:(id)arg1 ;
-(void)JFX_captureSessionRuntimeErrorNotification:(id)arg1 ;
-(void)setCaptureSessionRunning_queryDataQueue:(BOOL)arg1 ;
-(long long)cameraMode_captureSessionQueue;
-(long long)currentCameraPosition_captureSessionQueue;
-(void)JFX_configureLockedCaptureDeviceFrameRate:(id)arg1 ;
-(BOOL)JFX_isUsingInternalMicCaptureSessionQueue;
-(void)JFX_configureCaptureSessionMicrophoneForOmnidirectionalPattern;
-(void)JFX_resetSessionCaptureSessionQueue;
-(void)setCameraMode_captureSessionQueue:(long long)arg1 ;
-(void)setCameraMode_queryDataQueue:(long long)arg1 ;
-(void)setCameraMode_dataOutSynchQueue:(long long)arg1 ;
-(BOOL)JFX_buildCaptureSessionGraphError:(id*)arg1 ;
-(BOOL)JFX_configureCaptureSesstionForPosition:(long long)arg1 applyFFCZoom:(BOOL)arg2 configureLockedCamera:(/*^block*/id)arg3 error:(id*)arg4 ;
-(NSString *)cameraType_queryDataQueue;
-(long long)currentCameraPosition_queryDataQueue;
-(long long)captureVideoOrientation_queryDataQueue;
-(void)switchCameraToPosition:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)switchCameraToPosition:(long long)arg1 applyFFCZoom:(BOOL)arg2 configureLockedCamera:(/*^block*/id)arg3 completion:(/*^block*/id)arg4 ;
-(void)JFX_rampToZoom:(double)arg1 rate:(double)arg2 durationCaptureSessionQueue:(double)arg3 ;
-(void)JFX_configureLockedCaptureDevice:(id)arg1 minFrameRate:(int)arg2 maxFrameRate:(int)arg3 ;
-(void)JFX_configureLockedCaptureDeviceFocus:(id)arg1 focusPoint:(CGPoint)arg2 ;
-(void)JFX_configureLockedCaptureDeviceExposure:(id)arg1 exposurePoint:(CGPoint)arg2 ;
-(void)minFrameRate:(int*)arg1 maxFrameRate:(int*)arg2 ;
-(BOOL)isRecordingMovie_captureSessionQueue;
-(void)setIsRecordingMovie_captureSessionQueue:(BOOL)arg1 ;
-(void)setCachedMovieRecordingTorchMode:(long long)arg1 ;
-(long long)cachedMovieRecordingTorchMode;
-(PVFrameSet *)currentFrameSet_dataOutSynchQueue;
-(id)JFX_createPVFrameSetFromPixelBuffer:(CVBufferRef)arg1 withMetadata:(id)arg2 timeInterval:(double)arg3 error:(out id*)arg4 ;
-(void)JFX_notifyVideoDelegatesOfFrameSetDataOutSynchQueue:(id)arg1 ;
-(void)setCaptureVideoOrientation_dataOutSynchQueue:(long long)arg1 ;
-(void)setCameraDeviceIntrinsics_dataOutSynchQueue:(SCD_Struct_JF13)arg1 ;
-(void)setCameraFrameResolution_dataOutSynchQueue:(CGSize)arg1 ;
-(void)JFX_setCaptureDeviceType:(id)arg1 captureDevicePositionCaptureSessionQueue:(long long)arg2 ;
-(void)preProcessFrameWithPixelBuffer:(CVBufferRef)arg1 metadata:(id)arg2 timestamp:(double)arg3 completion:(/*^block*/id)arg4 ;
-(void)JFX_setupARCameraSessionController;
-(id)JFX_processPixelBufferForFaceTransform:(CVBufferRef)arg1 cameraIntrinsics:(SCD_Struct_JF13)arg2 forNormalizedFaceRect:(CGRect)arg3 withRollAngle:(float)arg4 withTimestamp:(SCD_Struct_JF3)arg5 andDuration:(SCD_Struct_JF3)arg6 detectionOrientation:(long long)arg7 interfaceOrientation:(long long)arg8 needsMirroring:(BOOL)arg9 ;
-(CGSize)cameraFrameResolution_dataOutSynchQueue;
-(void)JFX_notifyVideoDelegatesOfDroppedFrameWithTimeStamp:(SCD_Struct_JF3)arg1 ;
-(void)setPvDetectedFacesArray_dataOutSynchQueue:(NSArray *)arg1 ;
-(void)setMetadataFaceObjectsArray_dataOutSynchQueue:(NSArray *)arg1 ;
-(void)setMetadataTrackedFacesArray_dataOutSynchQueue:(NSArray *)arg1 ;
-(void)JFX_processMetadataObjectsDataOutSynchQueue:(id)arg1 ;
-(NSArray *)pvDetectedFacesArray_dataOutSynchQueue;
-(NSArray *)metadataTrackedFacesArray_dataOutSynchQueue;
-(NSArray *)metadataFaceObjectsArray_dataOutSynchQueue;
-(id)JFX_currentAVMetadataFaceObject:(id)arg1 ;
-(SCD_Struct_JF13)cameraDeviceIntrinsics_dataOutSynchQueue;
-(long long)captureVideoOrientation_dataOutSynchQueue;
-(PVFrameSet *)capturedPhotoFrameSet_dataOutSynchQueue;
-(long long)currentCameraPosition_dataOutSynchQueue;
-(long long)cameraMode_dataOutSynchQueue;
-(id)JFX_updateCurrentlyTrackedFaceID:(id)arg1 ;
-(BOOL)JFX_setupCaptureSessionVideoDataOutputError:(id*)arg1 ;
-(BOOL)JFX_setupCaptureSessionPhotoError:(id*)arg1 ;
-(BOOL)JFX_setupCaptureSessionAudioError:(id*)arg1 ;
-(void)JFX_observeCaptureSessionNotifications:(id)arg1 ;
-(BOOL)JFX_configureCaptureSessionForCaptureDevice:(id)arg1 error:(id*)arg2 ;
-(BOOL)JFX_setupCaptureSessionDepthError:(id*)arg1 ;
-(BOOL)JFX_captureDeviceRequiresCustomFormat:(id)arg1 applyZoom:(BOOL)arg2 ;
-(void)JFX_configureLockedCaptureDeviceCustomFormat:(id)arg1 ;
-(void)JFX_configureCaptureSessionPreset;
-(void)JFX_configureLockedCaptureDeviceForDepth:(id)arg1 ;
-(void)setCameraColorSpace_queryDataQueue:(long long)arg1 ;
-(void)JFX_configureLockedCaptureDevice:(id)arg1 ;
-(void)JFX_configureCaptureSessionVideoDataOutput;
-(void)JFX_configureCaptureSessionMetadataForCaptureDevice:(id)arg1 ;
-(void)JFX_configureCaptureSessionMicrophoneForPosition:(long long)arg1 ;
-(void)JFX_configureCaptureSessionEnableCameraIntrinsicMatrixDelivery;
-(void)JFX_configureCaptureSessionDataOutputSynchronizer;
-(void)JFX_audioSessionRouteChangeNotification:(id)arg1 ;
-(void)setCaptureVideoOrientation_queryDataQueue:(long long)arg1 ;
-(id)JFX_getFormatForCaptureDevice:(id)arg1 previewDimensions:(SCD_Struct_JF27)arg2 colorSpace:(long long)arg3 ;
-(void)setCameraVideoMaxZoomFactor_captureSessionQueue:(double)arg1 ;
-(id<JFXVideoCameraThermalDelegate>)thermalDelegate;
-(void)setCurrentCameraPosition_captureSessionQueue:(long long)arg1 ;
-(void)setCameraType_queryDataQueue:(NSString *)arg1 ;
-(void)setCurrentCameraPosition_queryDataQueue:(long long)arg1 ;
-(void)setCurrentCameraPosition_dataOutSynchQueue:(long long)arg1 ;
-(void)setIsFlashScene_queryDataQueue:(BOOL)arg1 ;
-(void)setArCameraSessionController:(JFXARKitCameraSessionController *)arg1 ;
-(NSNumber *)currentlyTrackedFaceID;
-(void)setCurrentlyTrackedFaceID:(NSNumber *)arg1 ;
-(VCPCaptureAnalysisSession *)vcpAnalyzer;
-(long long)cameraColorSpace;
-(BOOL)ARKitEnabled;
-(JFXFaceAnchor *)stillImageFaceAnchor;
-(void)setAllowARMetadata:(BOOL)arg1 ;
-(BOOL)allowARMetadata;
-(void)switchCamera:(/*^block*/id)arg1 ;
-(void)scaleCurrentZoomFactor:(double)arg1 ;
-(void)resetZoomFactor;
-(void)setFFCZoom:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)rampToZoom:(double)arg1 rate:(double)arg2 ;
-(void)rampToZoom:(double)arg1 duration:(double)arg2 ;
-(void)stopRampToZoom:(/*^block*/id)arg1 ;
-(void)setMinFrameRate:(int)arg1 maxFrameRate:(int)arg2 ;
-(void)setFocusAndExposurePoint:(CGPoint)arg1 ;
-(id)debugFrameRateLabel;
-(void)supportedFlashModes:(/*^block*/id)arg1 ;
-(id)createLivePlayerCameraSource;
-(void)removeLivePlayerCameraSource:(id)arg1 ;
-(void)saveToPhotoLibrary:(id)arg1 ;
-(NSNumber *)largestDepthDimension;
-(void)setLargestDepthDimension:(NSNumber *)arg1 ;
@end


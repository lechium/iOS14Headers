/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:42:40 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/MobileTimer.framework/MobileTimer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/SYServiceDelegate.h>
#import <libobjc.A.dylib/MTSyncStatusProviderDelegate.h>
#import <libobjc.A.dylib/MTSyncService.h>

@protocol MTSyncServiceDelegate, OS_dispatch_queue, NAScheduler, MTSyncStatusProvider;
@class NSObject, SYService, MTCompanionSyncSession, NSMutableDictionary, MTExponentialBackOffTimer, NSString;

@interface MTCompanionSyncService : NSObject <SYServiceDelegate, MTSyncStatusProviderDelegate, MTSyncService> {

	id<MTSyncServiceDelegate> _delegate;
	NSObject*<OS_dispatch_queue> _serialQueue;
	id<NAScheduler> _serializer;
	SYService* _service;
	id<MTSyncStatusProvider> _syncStatusProvider;
	MTCompanionSyncSession* _sendingSession;
	MTCompanionSyncSession* _receivingSession;
	NSMutableDictionary* _pendingRequests;
	MTExponentialBackOffTimer* _retryTimer;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> serialQueue;                 //@synthesize serialQueue=_serialQueue - In the implementation block
@property (nonatomic,retain) id<NAScheduler> serializer;                               //@synthesize serializer=_serializer - In the implementation block
@property (nonatomic,retain) SYService * service;                                      //@synthesize service=_service - In the implementation block
@property (nonatomic,retain) id<MTSyncStatusProvider> syncStatusProvider;              //@synthesize syncStatusProvider=_syncStatusProvider - In the implementation block
@property (nonatomic,retain) MTCompanionSyncSession * sendingSession;                  //@synthesize sendingSession=_sendingSession - In the implementation block
@property (nonatomic,retain) MTCompanionSyncSession * receivingSession;                //@synthesize receivingSession=_receivingSession - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * pendingRequests;                    //@synthesize pendingRequests=_pendingRequests - In the implementation block
@property (nonatomic,retain) MTExponentialBackOffTimer * retryTimer;                   //@synthesize retryTimer=_retryTimer - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<MTSyncServiceDelegate> delegate;                //@synthesize delegate=_delegate - In the implementation block
+(BOOL)shouldRetryForError:(id)arg1 ;
-(id)requestSync:(unsigned long long)arg1 ;
-(MTExponentialBackOffTimer *)retryTimer;
-(void)setPendingRequests:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)pendingRequests;
-(void)setSerializer:(id<NAScheduler>)arg1 ;
-(void)service:(id)arg1 receivingSessionEnded:(id)arg2 error:(id)arg3 ;
-(void)service:(id)arg1 sessionEnded:(id)arg2 error:(id)arg3 ;
-(void)_requestSync:(unsigned long long)arg1 ;
-(BOOL)resume:(id*)arg1 ;
-(NSObject*<OS_dispatch_queue>)serialQueue;
-(id<NAScheduler>)serializer;
-(BOOL)service:(id)arg1 startReceivingSession:(id)arg2 error:(id*)arg3 ;
-(MTCompanionSyncSession *)sendingSession;
-(BOOL)service:(id)arg1 startSession:(id)arg2 error:(id*)arg3 ;
-(void)service:(id)arg1 sendingSessionEnded:(id)arg2 error:(id)arg3 ;
-(void)setSendingSession:(MTCompanionSyncSession *)arg1 ;
-(void)setSerialQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setSyncStatusProvider:(id<MTSyncStatusProvider>)arg1 ;
-(void)suspend;
-(void)syncStatusProvider:(id)arg1 didChangeSyncStatus:(unsigned long long)arg2 ;
-(void)setRetryTimer:(MTExponentialBackOffTimer *)arg1 ;
-(void)setDelegate:(id<MTSyncServiceDelegate>)arg1 ;
-(SYService *)service;
-(id<MTSyncStatusProvider>)syncStatusProvider;
-(void)setReceivingSession:(MTCompanionSyncSession *)arg1 ;
-(id)initWithSyncStatusProvider:(id)arg1 ;
-(id<MTSyncServiceDelegate>)delegate;
-(MTCompanionSyncSession *)receivingSession;
-(BOOL)service:(id)arg1 startSendingSession:(id)arg2 error:(id*)arg3 ;
-(NSString *)description;
-(void)_retryRequest;
-(void)setService:(SYService *)arg1 ;
-(id)service:(id)arg1 willPreferSession:(id)arg2 overSession:(id)arg3 ;
@end


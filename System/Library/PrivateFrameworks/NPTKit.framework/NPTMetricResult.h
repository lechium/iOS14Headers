/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:53:06 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/NPTKit.framework/NPTKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <NPTKit/NPTKit-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@class NSString, NSNumber, NSDictionary;

@interface NPTMetricResult : NSObject <NSCopying, NSSecureCoding> {

	NSString* _cdnpop;
	NSString* _server;
	NSString* _cdnuuid;
	unsigned long long _fileSize;
	NSString* _fetchDate;
	NSString* _protocolName;
	NSString* _isReusedConnection;
	NSString* _isProxyConnection;
	double _domainLookupTime;
	double _connectionTime;
	double _secureConnectionTime;
	double _requestTime;
	double _requestToResponseTime;
	double _responseTime;
	double _speed;
	double _stableSpeed;
	NSString* _isCellular;
	NSString* _isExpensive;
	NSString* _isConstrained;
	NSString* _isMultipath;
	NSString* _localAddress;
	NSString* _remoteAddress;
	NSNumber* _negotiatedTLSCipherSuite;
	NSNumber* _negotiatedTLSProtocolVersion;
	NSNumber* _localPort;
	NSNumber* _remotePort;
	NSString* _interfaceServiceName;
	NSString* _interfaceName;
	NSNumber* _concurrentStreams;

}

@property (nonatomic,retain) NSString * cdnpop;                                    //@synthesize cdnpop=_cdnpop - In the implementation block
@property (nonatomic,retain) NSString * server;                                    //@synthesize server=_server - In the implementation block
@property (nonatomic,retain) NSString * cdnuuid;                                   //@synthesize cdnuuid=_cdnuuid - In the implementation block
@property (assign,nonatomic) unsigned long long fileSize;                          //@synthesize fileSize=_fileSize - In the implementation block
@property (nonatomic,retain) NSString * fetchDate;                                 //@synthesize fetchDate=_fetchDate - In the implementation block
@property (nonatomic,retain) NSString * protocolName;                              //@synthesize protocolName=_protocolName - In the implementation block
@property (nonatomic,retain) NSString * isReusedConnection;                        //@synthesize isReusedConnection=_isReusedConnection - In the implementation block
@property (nonatomic,retain) NSString * isProxyConnection;                         //@synthesize isProxyConnection=_isProxyConnection - In the implementation block
@property (assign,nonatomic) double domainLookupTime;                              //@synthesize domainLookupTime=_domainLookupTime - In the implementation block
@property (assign,nonatomic) double connectionTime;                                //@synthesize connectionTime=_connectionTime - In the implementation block
@property (assign,nonatomic) double secureConnectionTime;                          //@synthesize secureConnectionTime=_secureConnectionTime - In the implementation block
@property (assign,nonatomic) double requestTime;                                   //@synthesize requestTime=_requestTime - In the implementation block
@property (assign,nonatomic) double requestToResponseTime;                         //@synthesize requestToResponseTime=_requestToResponseTime - In the implementation block
@property (assign,nonatomic) double responseTime;                                  //@synthesize responseTime=_responseTime - In the implementation block
@property (assign,nonatomic) double speed;                                         //@synthesize speed=_speed - In the implementation block
@property (assign,nonatomic) double stableSpeed;                                   //@synthesize stableSpeed=_stableSpeed - In the implementation block
@property (nonatomic,retain) NSString * isCellular;                                //@synthesize isCellular=_isCellular - In the implementation block
@property (nonatomic,retain) NSString * isExpensive;                               //@synthesize isExpensive=_isExpensive - In the implementation block
@property (nonatomic,retain) NSString * isConstrained;                             //@synthesize isConstrained=_isConstrained - In the implementation block
@property (nonatomic,retain) NSString * isMultipath;                               //@synthesize isMultipath=_isMultipath - In the implementation block
@property (nonatomic,retain) NSString * localAddress;                              //@synthesize localAddress=_localAddress - In the implementation block
@property (nonatomic,retain) NSString * remoteAddress;                             //@synthesize remoteAddress=_remoteAddress - In the implementation block
@property (nonatomic,retain) NSNumber * negotiatedTLSCipherSuite;                  //@synthesize negotiatedTLSCipherSuite=_negotiatedTLSCipherSuite - In the implementation block
@property (nonatomic,retain) NSNumber * negotiatedTLSProtocolVersion;              //@synthesize negotiatedTLSProtocolVersion=_negotiatedTLSProtocolVersion - In the implementation block
@property (nonatomic,retain) NSNumber * localPort;                                 //@synthesize localPort=_localPort - In the implementation block
@property (nonatomic,retain) NSNumber * remotePort;                                //@synthesize remotePort=_remotePort - In the implementation block
@property (nonatomic,retain) NSString * interfaceServiceName;                      //@synthesize interfaceServiceName=_interfaceServiceName - In the implementation block
@property (nonatomic,retain) NSString * interfaceName;                             //@synthesize interfaceName=_interfaceName - In the implementation block
@property (nonatomic,retain) NSNumber * concurrentStreams;                         //@synthesize concurrentStreams=_concurrentStreams - In the implementation block
@property (nonatomic,readonly) NSDictionary * asDictionary; 
+(BOOL)supportsSecureCoding;
-(unsigned long long)fileSize;
-(void)setRequestTime:(double)arg1 ;
-(NSString *)remoteAddress;
-(void)setServer:(NSString *)arg1 ;
-(double)requestTime;
-(NSString *)localAddress;
-(NSNumber *)localPort;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSNumber *)remotePort;
-(void)setProtocolName:(NSString *)arg1 ;
-(void)setSpeed:(double)arg1 ;
-(NSString *)isMultipath;
-(NSString *)isProxyConnection;
-(NSString *)fetchDate;
-(NSString *)isExpensive;
-(NSString *)isReusedConnection;
-(NSString *)cdnpop;
-(void)setFetchDate:(NSString *)arg1 ;
-(void)setRemoteAddress:(NSString *)arg1 ;
-(void)setInterfaceName:(NSString *)arg1 ;
-(NSDictionary *)asDictionary;
-(NSString *)protocolName;
-(BOOL)isEqual:(id)arg1 ;
-(NSNumber *)negotiatedTLSProtocolVersion;
-(id)initWithCoder:(id)arg1 ;
-(NSString *)isConstrained;
-(void)encodeWithCoder:(id)arg1 ;
-(NSString *)server;
-(double)speed;
-(NSString *)interfaceName;
-(void)setFileSize:(unsigned long long)arg1 ;
-(NSString *)cdnuuid;
-(double)responseTime;
-(void)setResponseTime:(double)arg1 ;
-(unsigned long long)hash;
-(void)setLocalAddress:(NSString *)arg1 ;
-(NSNumber *)negotiatedTLSCipherSuite;
-(void)setIsMultipath:(NSString *)arg1 ;
-(NSString *)isCellular;
-(double)connectionTime;
-(void)setConnectionTime:(double)arg1 ;
-(double)secureConnectionTime;
-(void)populateWithMetrics:(id)arg1 ;
-(void)populateWithURLResponse:(id)arg1 ;
-(void)setConcurrentStreams:(NSNumber *)arg1 ;
-(double)domainLookupTime;
-(void)setDomainLookupTime:(double)arg1 ;
-(void)setSecureConnectionTime:(double)arg1 ;
-(double)requestToResponseTime;
-(void)setRequestToResponseTime:(double)arg1 ;
-(void)setCdnpop:(NSString *)arg1 ;
-(void)setStableSpeed:(double)arg1 ;
-(NSString *)interfaceServiceName;
-(NSNumber *)concurrentStreams;
-(double)stableSpeed;
-(void)setIsReusedConnection:(NSString *)arg1 ;
-(void)setIsProxyConnection:(NSString *)arg1 ;
-(void)setCdnuuid:(NSString *)arg1 ;
-(void)setIsCellular:(NSString *)arg1 ;
-(void)setIsConstrained:(NSString *)arg1 ;
-(void)setIsExpensive:(NSString *)arg1 ;
-(void)setLocalPort:(NSNumber *)arg1 ;
-(void)setRemotePort:(NSNumber *)arg1 ;
-(void)setNegotiatedTLSCipherSuite:(NSNumber *)arg1 ;
-(void)setNegotiatedTLSProtocolVersion:(NSNumber *)arg1 ;
-(void)setInterfaceServiceName:(NSString *)arg1 ;
-(double)timeIntervalSinceDateWithLogging:(id)arg1 startDate:(id)arg2 nameToLog:(id)arg3 ;
-(BOOL)isEqualToMetricResult:(id)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:23 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSCharts.framework/TSCharts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSCharts/TSCharts-Structs.h>
#import <TSCharts/TSUiOSMemoryWarningFlushable.h>

@protocol TSCH3DSharegroupDelegate;
@class NSThread, TSCH3DResourceCache, TSCH3DShaderCache, NSMutableSet, TSCH3DSharegroupToken, NSString;

@interface TSCH3DSharegroup : NSObject <TSUiOSMemoryWarningFlushable> {

	NSThread* mOwningThread;
	TSCH3DResourceCache* mResourceCache;
	TSCH3DShaderCache* mShaderCache;
	NSMutableSet* mPurgeableResourceSet;
	int mPerformance;
	BOOL mDidReceiveFlush;
	TSCH3DSharegroupToken* mToken;
	id<TSCH3DSharegroupDelegate> _delegate;

}

@property (assign,nonatomic) int performance; 
@property (assign,nonatomic) id<TSCH3DSharegroupDelegate> delegate;               //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) TSCH3DResourceCache * resourceCache; 
@property (nonatomic,readonly) TSCH3DShaderCache * shaderCache; 
@property (nonatomic,__weak,readonly) TSCH3DSharegroupToken * token; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)uniqueSharegroupWithOwningThread:(id)arg1 token:(id)arg2 ;
-(void)flush;
-(TSCH3DResourceCache *)resourceCache;
-(void)dealloc;
-(TSCH3DSharegroupToken *)token;
-(void)setDelegate:(id<TSCH3DSharegroupDelegate>)arg1 ;
-(void)setOwningThread:(id)arg1 ;
-(id<TSCH3DSharegroupDelegate>)delegate;
-(void)flushIfNecessary;
-(NSString *)description;
-(BOOL)isOneShot;
-(BOOL)mustRunOnMainThread;
-(BOOL)isCurrentThreadOwner;
-(void)flushMemoryForResourceSet:(id)arg1 ;
-(void)flushResourceSet:(id)arg1 ;
-(void)forceFlushResourceSet:(id)arg1 ;
-(TSCH3DShaderCache *)shaderCache;
-(void)setIfIsMoreDemandingPerformance:(int)arg1 ;
-(void)setPerformance:(int)arg1 ;
-(int)performance;
-(void)nonThreadOwnedFlushCache;
-(id)initWithOwningThread:(id)arg1 token:(id)arg2 ;
-(FlushResult)p_flushCacheIfNecessary;
-(void)p_flushInTargetThread;
-(BOOL)owningThreadIsNil;
-(void)flushInTargetThread;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:24 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSCharts.framework/TSCharts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TSCharts/TSCharts-Structs.h>
@interface TSCHText : NSObject {

	Class _tswpTextClass;
	BOOL _textColorShouldBeBlack;

}

@property (assign,nonatomic) BOOL textColorShouldBeBlack;              //@synthesize textColorShouldBeBlack=_textColorShouldBeBlack - In the implementation block
+(void)clearCachesForDocumentRoot:(id)arg1 ;
+(id)sharedText;
+(id)sharedInteriorWrappingText;
+(TSCHTextLayoutResults)initializeTextLayoutResults;
+(BOOL)shouldLayoutTextForWrapWidth:(double)arg1 textLayoutProperties:(id)arg2 ;
-(CGSize)measureText:(id)arg1 paragraphStyle:(id)arg2 ;
-(void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(CGContextRef)arg3 wrapWidth:(double)arg4 atPosition:(CGPoint)arg5 viewScale:(double)arg6 ;
-(CGSize)measureText:(id)arg1 paragraphStyle:(id)arg2 wrapWidth:(double)arg3 outErasableFrame:(CGRect*)arg4 ;
-(CGSize)measureText:(id)arg1 paragraphStyle:(id)arg2 outErasableFrame:(CGRect*)arg3 ;
-(void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(CGContextRef)arg3 wrapWidth:(double)arg4 atPosition:(CGPoint)arg5 range:(NSRange)arg6 viewScale:(double)arg7 ;
-(void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(CGContextRef)arg3 viewScale:(double)arg4 ;
-(void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(CGContextRef)arg3 atPosition:(CGPoint)arg4 range:(NSRange)arg5 viewScale:(double)arg6 ;
-(void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(CGContextRef)arg3 atPosition:(CGPoint)arg4 viewScale:(double)arg5 ;
-(void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(CGContextRef)arg3 wrapWidth:(double)arg4 atPosition:(CGPoint)arg5 range:(NSRange)arg6 viewScale:(double)arg7 layoutProperties:(id)arg8 outTextLayoutResults:(TSCHTextLayoutResults*)arg9 ;
-(void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(CGContextRef)arg3 wrapWidth:(double)arg4 atPosition:(CGPoint)arg5 viewScale:(double)arg6 layoutProperties:(id)arg7 outTextLayoutResults:(TSCHTextLayoutResults*)arg8 ;
-(CGSize)measureText:(id)arg1 paragraphStyle:(id)arg2 wrapWidth:(double)arg3 ;
-(void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(CGContextRef)arg3 wrapWidth:(double)arg4 atPosition:(CGPoint)arg5 viewScale:(double)arg6 layoutProperties:(id)arg7 ;
-(void)setTextColorShouldBeBlack:(BOOL)arg1 ;
-(CGSize)measureText:(id)arg1 paragraphStyle:(id)arg2 wrapWidth:(double)arg3 outErasableFrame:(CGRect*)arg4 layoutProperties:(id)arg5 outTextLayoutResults:(TSCHTextLayoutResults*)arg6 ;
-(CGRect)frameForRange:(NSRange)arg1 inText:(id)arg2 paragraphStyle:(id)arg3 wrapWidth:(double)arg4 outErasableFrame:(CGRect*)arg5 layoutProperties:(id)arg6 ;
-(CGRect)frameForRange:(NSRange)arg1 inText:(id)arg2 paragraphStyle:(id)arg3 wrapWidth:(double)arg4 outErasableFrame:(CGRect*)arg5 ;
-(CGRect)frameForRange:(NSRange)arg1 inText:(id)arg2 paragraphStyle:(id)arg3 outErasableFrame:(CGRect*)arg4 ;
-(const CTFontRef)retainedCTFontForParagraphStyle:(id)arg1 ;
-(id)initWithTSWPTextClass:(Class)arg1 ;
-(id)p_wpTextForParagraphStyle:(id)arg1 text:(id)arg2 textBlack:(BOOL)arg3 textCache:(id)arg4 cacheKey:(id)arg5 ;
-(id)p_newWPColumnForText:(id)arg1 wpTextObject:(id)arg2 wrapWidth:(double)arg3 layoutProperties:(id)arg4 ;
-(id)p_wpTextForParagraphStyle:(id)arg1 text:(id)arg2 textBlack:(BOOL)arg3 textCache:(id)arg4 ;
-(id)p_wpColumnForText:(id)arg1 paragraphStyle:(id)arg2 textBlack:(BOOL)arg3 wrapWidth:(double)arg4 textCache:(id)arg5 layoutProperties:(id)arg6 ;
-(id)p_textCacheForParagraphStyle:(id)arg1 ;
-(id)p_wpStorageForAttributedString:(const CFAttributedStringRef)arg1 paragraphStyle:(id)arg2 ;
-(CGSize)measureText:(id)arg1 paragraphStyle:(id)arg2 wrapWidth:(double)arg3 outErasableFrame:(CGRect*)arg4 checkNumberTemplates:(BOOL)arg5 ;
-(CGSize)measureText:(id)arg1 paragraphStyle:(id)arg2 wrapWidth:(double)arg3 outErasableFrame:(CGRect*)arg4 checkNumberTemplates:(BOOL)arg5 layoutProperties:(id)arg6 outTextLayoutResults:(TSCHTextLayoutResults*)arg7 ;
-(BOOL)p_styleSupportsEqualDigits:(id)arg1 textCache:(id)arg2 ;
-(CGSize)p_sizeForNumberTemplate:(id)arg1 paragraphStyle:(id)arg2 textCache:(id)arg3 layoutProperties:(id)arg4 ;
-(TSCHTextLayoutResults)textLayoutResultsForColumn:(id)arg1 ;
-(void)drawTextIntoContext:(CGContextRef)arg1 position:(CGPoint)arg2 textEngine:(id)arg3 column:(id)arg4 range:(NSRange)arg5 viewScale:(double)arg6 ;
-(void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(CGContextRef)arg3 wrapWidth:(double)arg4 atPosition:(CGPoint)arg5 range:(NSRange)arg6 viewScale:(double)arg7 layoutProperties:(id)arg8 ;
-(BOOL)textColorShouldBeBlack;
-(CGSize)measureAttributedString:(const CFAttributedStringRef)arg1 paragraphStyle:(id)arg2 outErasableFrame:(CGRect*)arg3 ;
-(CGSize)measureText:(id)arg1 paragraphStyle:(id)arg2 wrapWidth:(double)arg3 layoutProperties:(id)arg4 ;
-(CGRect)frameForRange:(NSRange)arg1 inText:(id)arg2 paragraphStyle:(id)arg3 ;
-(void)drawAttributedString:(const CFAttributedStringRef)arg1 paragraphStyle:(id)arg2 intoContext:(CGContextRef)arg3 atPosition:(CGPoint)arg4 range:(NSRange)arg5 viewScale:(double)arg6 ;
-(void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(CGContextRef)arg3 range:(NSRange)arg4 viewScale:(double)arg5 ;
@end


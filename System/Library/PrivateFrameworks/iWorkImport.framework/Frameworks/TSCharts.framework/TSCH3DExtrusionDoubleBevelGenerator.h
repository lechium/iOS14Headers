/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:23 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSCharts.framework/TSCharts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TSCharts/TSCharts-Structs.h>
@interface TSCH3DExtrusionDoubleBevelGenerator : NSObject {

	vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float> > >* mInputSpinePoints;
	vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float> > >* mSpinePoints;
	vector<glm::detail::tvec2<float>, std::__1::allocator<glm::detail::tvec2<float> > >* mScaleValues;
	float mBevelHeight;
	long long mBevelSlices;
	BOOL mEnableBevelEdges;

}

@property (assign,nonatomic) float bevelHeight; 
@property (assign,nonatomic) long long bevelSlices; 
@property (assign,nonatomic) BOOL enableBevelEdges; 
@property (nonatomic,readonly) long long bottomNonBevelStartIndex; 
@property (nonatomic,readonly) long long bottomBevelStartIndex; 
+(id)generator;
+(id)namedBevelInterpolationShaderFunction;
-(id)init;
-(void)generate;
-(long long)bottomNonBevelStartIndex;
-(vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float> > >*)inputSpinePoints;
-(void)setBevelHeight:(float)arg1 ;
-(void)setBevelSlices:(long long)arg1 ;
-(void)setEnableBevelEdges:(BOOL)arg1 ;
-(const vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float> > >*)spinePoints;
-(const vector<glm::detail::tvec2<float>, std::__1::allocator<glm::detail::tvec2<float> > >*)scaleValues;
-(void)createSpinePointArray;
-(void)generateTop;
-(void)generateBottom;
-(void)adjustBottomOffset;
-(void)resetAllScales;
-(void)adjustTopScales;
-(void)adjustBottomScales;
-(long long)bottomSlices;
-(long long)topSlices;
-(long long)topBevelStartIndex;
-(float)spineUValueAtIndex:(long long)arg1 ;
-(long long)bottomBevelStartIndex;
-(tvec3<float>)bottomDirection;
-(float)scaleUValueAtIndex:(long long)arg1 ;
-(float)bevelHeight;
-(long long)bevelSlices;
-(BOOL)enableBevelEdges;
@end


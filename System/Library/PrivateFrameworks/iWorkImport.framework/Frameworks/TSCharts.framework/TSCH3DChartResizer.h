/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:23 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSCharts.framework/TSCharts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TSCharts/TSCharts-Structs.h>
@class TSCH3DChartBoundsLayout, TSCH3DChartType, TSCH3DScene, TSCH3DChartScenePropertyAccessor;

@interface TSCH3DChartResizer : NSObject {

	TSCH3DChartBoundsLayout* mLayout;
	TSCH3DChartType* mChartType;
	TSCH3DScene* mScene;
	TSCH3DChartScenePropertyAccessor* mAccessor;
	float mMinStep;
	float mPrecision;
	ResizeData mPrevious;
	ResizeData mCurrent;
	tvec2<float> mTarget;
	unsigned long long mIndex;
	SCD_Struct_TS50 mLayoutSettings;

}

@property (assign,nonatomic) float minStep; 
@property (assign,nonatomic) float precision; 
+(float)minimumSize;
+(tvec2<float>)adjustLabelWrapSize:(const tvec2<float>*)arg1 forScene:(id)arg2 ;
+(tvec2<float>)adjustLabelWrapSize:(const tvec2<float>*)arg1 ;
+(float)perspectiveness;
+(id)resizerWithLayout:(id)arg1 chartType:(id)arg2 ;
-(float)precision;
-(float)step;
-(void)loop;
-(void)setScale:(tvec3<float>*)arg1 ;
-(void)dealloc;
-(float)minScale;
-(tvec3<float>)clamp:(tvec3<float>*)arg1 ;
-(void)setStep:(float)arg1 ;
-(void)setPrecision:(float)arg1 ;
-(void)setContainingViewport:(tvec2<int>*)arg1 ;
-(id)initWithLayout:(id)arg1 chartType:(id)arg2 ;
-(float)maxDepthRatio;
-(tvec2<bool>)converges;
-(tvec3<float>)adjust:(tvec3<float>*)arg1 by:(float)arg2 ;
-(tvec3<float>)adjust:(tvec3<float>*)arg1 ;
-(tvec3<float>)clampDepthRatio:(tvec3<float>*)arg1 ;
-(tvec2<int>)containingViewportFromCurrentSize;
-(tvec2<bool>)canImprove;
-(void)updateResizeData;
-(BOOL)currentCanImprove;
-(tvec3<float>)adjustedScale;
-(void)updateSteps;
-(BOOL)checkImprovement;
-(BOOL)allConverges;
-(BOOL)resize1;
-(float)perspectiveness;
-(void)seedResizeCondition;
-(tvec2<int>)containingViewportFromSize:(tvec2<float>*)arg1 ;
-(void)adjustContainingViewport;
-(tvec2<float>)updateResizerFromRequestedSize:(const tvec2<float>*)arg1 startingSize:(tvec2<float>*)arg2 ;
-(void)initializeResizing:(tvec2<float>*)arg1 ;
-(void)readjustContainingViewport;
-(float)containingViewportThreshold;
-(void)gingerClamp;
-(tvec2<float>)resize:(const tvec2<float>*)arg1 startingSize:(tvec2<float>*)arg2 ;
-(float)minStep;
-(void)setMinStep:(float)arg1 ;
@end


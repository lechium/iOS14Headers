/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:24 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSCharts.framework/TSCharts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSCharts/TSCharts-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSMutableCopying.h>
#import <TSCharts/TSCHDataFormatter.h>
#import <TSCharts/TSCHCustomFormatSupport.h>
#import <TSCharts/TSCHDataFormatterPersistableStyleObject.h>
#import <TSCharts/TSCHDataFormatterSupportedClientFormatObject.h>
#import <TSCharts/TSCHFormatTypeSupport.h>

@class NSString;

@interface TSCHNumberFormat : NSObject <NSCopying, NSMutableCopying, TSCHDataFormatter, TSCHCustomFormatSupport, TSCHDataFormatterPersistableStyleObject, TSCHDataFormatterSupportedClientFormatObject, TSCHFormatTypeSupport> {

	NSString* mPrefixString;
	NSString* mSuffixString;
	SCD_Struct_TS106 mFormatStruct;

}

@property (nonatomic,readonly) BOOL isCurrency; 
@property (nonatomic,readonly) BOOL isPercentage; 
@property (nonatomic,readonly) BOOL isFraction; 
@property (nonatomic,readonly) BOOL isBase; 
@property (nonatomic,readonly) unsigned decimalPlaces; 
@property (nonatomic,copy,readonly) NSString * currencyCode; 
@property (nonatomic,readonly) BOOL useAccountingStyle; 
@property (nonatomic,readonly) int negativeStyle; 
@property (nonatomic,readonly) BOOL showThousandsSeparator; 
@property (nonatomic,readonly) int fractionAccuracy; 
@property (nonatomic,copy,readonly) NSString * prefixString; 
@property (nonatomic,copy,readonly) NSString * suffixString; 
@property (nonatomic,readonly) double scaleFactor; 
@property (nonatomic,readonly) unsigned base; 
@property (nonatomic,readonly) unsigned basePlaces; 
@property (nonatomic,readonly) BOOL baseUseMinusSign; 
@property (nonatomic,readonly) BOOL usesNumberFormatStruct; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned formatType; 
+(id)instanceWithArchive:(const FormatStructArchive*)arg1 unarchiver:(id)arg2 ;
+(id)numberFormatWithFormatType:(unsigned)arg1 decimalPlaces:(unsigned)arg2 showThousandsSeparator:(BOOL)arg3 ;
+(id)defaultDecimalNumberFormat;
+(BOOL)supportsFormatType:(unsigned)arg1 ;
+(id)numberFormatWithFormatStruct:(SCD_Struct_TS109)arg1 prefixString:(id)arg2 suffixString:(id)arg3 ;
+(int)labelFormatTypeFromTSUFormatType:(unsigned)arg1 ;
+(int)defaultFractionAccuracy;
+(id)defaultCurrencyCode;
+(int)defaultNegativeNumberStyle;
+(unsigned)defaultBase;
+(unsigned)defaultBasePlaces;
+(BOOL)defaultBaseUseMinusSign;
+(id)customFormatForKey:(id)arg1 documentRoot:(id)arg2 fromPasteboardCustomFormatList:(id)arg3 ;
+(id)automaticDecimalPlaces;
-(int)valueType;
-(NSString *)currencyCode;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(double)scaleFactor;
-(BOOL)isBase;
-(BOOL)isCustom;
-(void)dealloc;
-(unsigned)base;
-(BOOL)isCurrency;
-(unsigned)p_base;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(NSString *)prefixString;
-(unsigned)formatType;
-(unsigned)decimalPlaces;
-(BOOL)showThousandsSeparator;
-(int)fractionAccuracy;
-(int)negativeStyle;
-(NSString *)suffixString;
-(unsigned)basePlaces;
-(BOOL)baseUseMinusSign;
-(id)customFormatKey;
-(SCD_Struct_TS109)formatStruct;
-(BOOL)useAccountingStyle;
-(id)initWithArchive:(const FormatStructArchive*)arg1 unarchiver:(id)arg2 ;
-(void)saveToArchive:(FormatStructArchive*)arg1 archiver:(id)arg2 ;
-(BOOL)isCompatibleWithDataFormatter:(id)arg1 ;
-(BOOL)usesNumberFormatStruct;
-(id)dataFormatterForDocumentRoot:(id)arg1 pasteboardCustomFormatList:(id)arg2 ;
-(id)convertToPersistableStyleObject;
-(long long)numberOfDecimalPlaces;
-(id)customFormatListKey;
-(id)numberFormatByResettingToDefaultNegativeStyleIfAvailable;
-(id)chartFormattedStringForValue:(id)arg1 locale:(id)arg2 ;
-(id)chartFormattedInspectorStringForValue:(id)arg1 locale:(id)arg2 ;
-(id)convertToSupportedClientFormatObjectWithLocale:(id)arg1 ;
-(id)upgradedNumberFormatFromPreUFFOrUnity1_0;
-(id)initWithFormatStruct:(SCD_Struct_TS109)arg1 prefixString:(id)arg2 suffixString:(id)arg3 ;
-(id)p_initWithFormatStruct:(SCD_Struct_TS109)arg1 prefixString:(id)arg2 suffixString:(id)arg3 ;
-(BOOL)isFraction;
-(BOOL)isScientific;
-(unsigned)p_decimalPlacesIfAvailable;
-(unsigned)p_decimalPlaces;
-(id)p_currencyCode;
-(id)p_currencyCodeIfAvailable;
-(BOOL)p_useAccountingStyle;
-(BOOL)p_useAccountingStyleIfAvailable;
-(int)p_negativeStyle;
-(int)p_negativeStyleIfAvailable;
-(BOOL)p_showThousandsSeparator;
-(BOOL)p_showThousandsSeparatorIfAvailable;
-(int)p_fractionAccuracy;
-(int)p_fractionAccuracyIfAvailable;
-(unsigned)p_basePlaces;
-(BOOL)p_baseUseMinusSign;
-(int)negativeStyleForNumberFormatter;
-(id)p_formattedBodyStringForDouble:(double)arg1 locale:(id)arg2 ;
-(BOOL)isPercentage;
-(id)p_formatTypeDescription;
-(BOOL)p_hasValidDecimalPlaces;
-(unsigned)p_baseIfAvailable;
-(unsigned)p_basePlacesIfAvailable;
-(BOOL)p_baseUseMinusSignIfAvailable;
-(BOOL)supportsAutoMinMax;
@end


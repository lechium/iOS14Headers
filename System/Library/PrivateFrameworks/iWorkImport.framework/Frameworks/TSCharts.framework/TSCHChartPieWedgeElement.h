/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:25 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSCharts.framework/TSCharts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSCharts/TSCharts-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@class TSCHChartSeries;

@interface TSCHChartPieWedgeElement : NSObject <NSCopying> {

	TSCHChartPieWedgeElementLayoutSystem mLayoutSystem;
	double mRadius;
	double mMidAngle;
	double mStartAngle;
	double mEndAngle;
	double mLabelExplosion;
	double mWedgeExplosion;
	TSCHChartSeries* mSeries;

}

@property (assign,nonatomic) TSCHChartPieWedgeElementLayoutSystem layoutSystem; 
@property (assign,nonatomic) double radius; 
@property (assign,nonatomic) double midAngle; 
@property (assign,nonatomic) double startAngle; 
@property (assign,nonatomic) double endAngle; 
@property (assign,nonatomic) double labelExplosion; 
@property (assign,nonatomic) double wedgeExplosion; 
@property (assign,nonatomic,__weak) TSCHChartSeries * series; 
@property (nonatomic,readonly) CGPoint centerPoint; 
@property (nonatomic,readonly) double angleAtWedgeTip; 
-(id)copyWithZone:(NSZone*)arg1 ;
-(TSCHChartSeries *)series;
-(double)radius;
-(double)endAngle;
-(void)setRadius:(double)arg1 ;
-(CGPoint)centerPoint;
-(double)startAngle;
-(void)setEndAngle:(double)arg1 ;
-(void)setStartAngle:(double)arg1 ;
-(void)setSeries:(TSCHChartSeries *)arg1 ;
-(double)midAngle;
-(CGPoint)pointAtWedgeTipInChartCoordinateSpace;
-(double)wedgeExplosion;
-(CGRect)defaultLabelRectForLabelWithSize:(CGSize)arg1 bended:(BOOL)arg2 ;
-(TSCHChartPieLabelRects)labelRectsForFirstLabelWithSize:(CGSize)arg1 secondLabelSize:(CGSize)arg2 stacked:(BOOL)arg3 stackedLabelCenterAlign:(BOOL)arg4 placeToTheSideOfPieChart:(BOOL)arg5 ;
-(CGPoint)normalizedWedgeBisectionVector;
-(CGPoint)midpointOnClosestEdgeToWedgeTip:(CGRect)arg1 ;
-(id)initWithRadius:(double)arg1 startAngle:(double)arg2 midAngle:(double)arg3 endAngle:(double)arg4 labelExplosion:(double)arg5 wedgeExplosion:(double)arg6 series:(id)arg7 ;
-(double)labelExplosion;
-(CGPoint)pointAlongWedgeBisectionInChartCoordinateSpaceWithFloatDistanceFromWedgeTip:(double)arg1 ;
-(CGPoint)defaultLabelCenterPointForLabelWithSize:(CGSize)arg1 bended:(BOOL)arg2 ;
-(CGPoint)pointAtWedgeCircumferenceMiddleInChartCoordinateSpace;
-(BOOL)isInUpperHalfOfChartWithStartPoint:(CGPoint)arg1 ;
-(CGPoint)pointAlongWedgeBisectionInChartCoordinateSpaceWithPercentDistanceFromWedgeTip:(double)arg1 ;
-(BOOL)shouldUsePerpendicularBendedLineWithStartPoint:(CGPoint)arg1 ;
-(double)angleAtWedgeTip;
-(void)setLayoutSystem:(TSCHChartPieWedgeElementLayoutSystem)arg1 ;
-(void)setMidAngle:(double)arg1 ;
-(void)setLabelExplosion:(double)arg1 ;
-(void)setWedgeExplosion:(double)arg1 ;
-(CGPoint)defaultLabelEndpointForBendedLineLabels;
-(CGPoint)defaultLabelCenterPoint;
-(BOOL)isOnLeftSideOfChart;
-(CGPoint)defaultBendedLineEndpointWithStartPoint:(CGPoint)arg1 ;
-(CGPoint)firstHalfOfBendedLineVectorNormalizedShouldBeUpwards:(BOOL)arg1 ;
-(CGPoint)defaultBendedLineMidpointWithStartPoint:(CGPoint)arg1 ;
-(double)p_xShiftAmountWithEndpoint:(CGPoint)arg1 ;
-(CGPoint)bendedLineMidpointWithStartPoint:(CGPoint)arg1 length:(double)arg2 shouldBeUpwards:(BOOL)arg3 ;
-(BOOL)lineIntersectsWedgeWithLineStartPoint:(CGPoint)arg1 lineEndPoint:(CGPoint)arg2 ;
-(CGPoint)arcStartPoint;
-(BOOL)lineIntersectsLineWithStartPoint:(CGPoint)arg1 firstLineEndPoint:(CGPoint)arg2 secondLineStartPoint:(CGPoint)arg3 secondLineEndPoint:(CGPoint)arg4 outIntersectionPoint:(CGPoint*)arg5 ;
-(CGPoint)arcEndPoint;
-(BOOL)angleInRange:(double)arg1 startAngle:(double)arg2 endAngle:(double)arg3 ;
-(BOOL)pointWithinWedgeSpread:(CGPoint)arg1 percentage:(double)arg2 ;
-(void)setToLocalCoordinateSpace;
-(void)setToChartCoordinateSpaceWithChartBodyCenterPoint:(CGPoint)arg1 ;
-(BOOL)calloutLineIntersectsWedgeWithStartPoint:(CGPoint)arg1 midPoint:(CGPoint)arg2 ;
-(BOOL)pointWithinWedgeSpread:(CGPoint)arg1 ;
-(BOOL)wedgeBisectionIntersectsRect:(CGRect)arg1 outIntersectionPointClosestToWedgeTip:(CGPoint*)arg2 ;
-(TSCHChartPieWedgeElementLayoutSystem)layoutSystem;
@end


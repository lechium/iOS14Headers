/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:26 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSDrawables.framework/TSDrawables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSDrawables/TSDrawables-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@protocol OS_dispatch_semaphore, TSDLiveTexturedRectangleSource, MTLTexture;
@class CALayer, NSMutableDictionary, NSMutableArray, NSObject, TSDMetalShader, TSDTextureSet, NSString, TSUColor;

@interface TSDTexturedRectangle : NSObject <NSCopying> {

	CGPoint mOffset;
	CGPoint mOriginalPosition;
	CGSize mSize;
	CGRect mContentRect;
	CGRect mOriginalFrame;
	CALayer* mLayer;
	/*^block*/id mRenderBlock;
	CGImageRef mSourceImage;
	CGImageRef mBakedImage;
	int mTextureType;
	double mTextureOpacity;
	unsigned mSingleTextureName;
	BOOL mSingleTextureContainsMipmaps;
	BOOL mIsFlattened;
	NSMutableDictionary* mAttributes;
	NSMutableArray* mTags;
	CGColorSpaceRef mColorSpace;
	NSObject*<OS_dispatch_semaphore> _liveMetalTexturesSemaphore;
	id<TSDLiveTexturedRectangleSource> _liveTexturedRectangleSource;
	TSDTexturedRectangle* _liveTexturedRectangleSourceProxy;
	NSMutableArray* _liveMetalTexturePool;
	unsigned long long _liveMetalTexturePoolIndex;
	NSMutableDictionary* _liveMetalTextureToTimestamp;
	NSMutableDictionary* _liveMetalTimestampToTexture;
	TSDMetalShader* _liveTextureSourceShader;
	BOOL _shouldUseDisplayLinkPresentationTime;
	BOOL mShouldGenerateMipmap;
	BOOL _isVerticalText;
	TSDTextureSet* mParent;
	NSString* _text;
	double _textBaseline;
	TSUColor* _textColor;
	double _textXHeight;
	TSUColor* _backgroundColor;
	double _bakedScale;
	id<MTLTexture> _metalTexture;
	NSRange _textRange;
	CGRect mFrameOnCanvas;

}

@property (nonatomic,readonly) unsigned singleTextureName; 
@property (nonatomic,readonly) unsigned singleTextureTarget; 
@property (assign,nonatomic) CGPoint originalPosition; 
@property (assign,nonatomic) CGPoint offset; 
@property (nonatomic,readonly) CGSize size; 
@property (nonatomic,readonly) CGRect frame; 
@property (assign,nonatomic) CGRect contentRect; 
@property (assign,nonatomic,__weak) TSDTextureSet * parent; 
@property (nonatomic,readonly) CALayer * layer; 
@property (nonatomic,readonly) CGImageRef image; 
@property (nonatomic,readonly) float opacityFromAttributes; 
@property (nonatomic,readonly) CATransform3D transformFromAttributes; 
@property (nonatomic,retain) NSMutableDictionary * attributes; 
@property (assign,nonatomic) BOOL shouldUseDisplayLinkPresentationTime;              //@synthesize shouldUseDisplayLinkPresentationTime=_shouldUseDisplayLinkPresentationTime - In the implementation block
@property (nonatomic,retain) NSMutableArray * tags; 
@property (assign,nonatomic) int textureType; 
@property (assign,nonatomic) double textureOpacity; 
@property (nonatomic,readonly) double singleTextureOpacity; 
@property (assign,nonatomic) BOOL isFlattened; 
@property (assign,nonatomic) CGColorSpaceRef colorSpace; 
@property (nonatomic,readonly) BOOL isRenderable; 
@property (nonatomic,readonly) double bakedScale;                                    //@synthesize bakedScale=_bakedScale - In the implementation block
@property (nonatomic,readonly) BOOL isBackgroundTexture; 
@property (nonatomic,readonly) CALayer * parentLayer; 
@property (assign,nonatomic) CGRect frameOnCanvas; 
@property (assign,nonatomic) BOOL shouldGenerateMipmap; 
@property (nonatomic,copy) TSUColor * backgroundColor;                               //@synthesize backgroundColor=_backgroundColor - In the implementation block
@property (assign,nonatomic) BOOL isVerticalText;                                    //@synthesize isVerticalText=_isVerticalText - In the implementation block
@property (assign,nonatomic) double textBaseline;                                    //@synthesize textBaseline=_textBaseline - In the implementation block
@property (assign,nonatomic) double textXHeight;                                     //@synthesize textXHeight=_textXHeight - In the implementation block
@property (nonatomic,copy) TSUColor * textColor;                                     //@synthesize textColor=_textColor - In the implementation block
@property (nonatomic,copy) NSString * text;                                          //@synthesize text=_text - In the implementation block
@property (assign,nonatomic) NSRange textRange;                                      //@synthesize textRange=_textRange - In the implementation block
@property (nonatomic,readonly) id<MTLTexture> metalTexture;                          //@synthesize metalTexture=_metalTexture - In the implementation block
+(id)setupMetalShaderForContext:(id)arg1 ;
-(int)textureType;
-(CGColorSpaceRef)colorSpace;
-(void)setParent:(TSDTextureSet *)arg1 ;
-(CALayer *)layer;
-(id)initWithLayer:(id)arg1 ;
-(id)initWithCGImage:(CGImageRef)arg1 ;
-(NSMutableArray *)tags;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setTextColor:(TSUColor *)arg1 ;
-(void)setTags:(NSMutableArray *)arg1 ;
-(TSDTextureSet *)parent;
-(void)setColorSpace:(CGColorSpaceRef)arg1 ;
-(NSMutableDictionary *)attributes;
-(NSString *)text;
-(void)dealloc;
-(void)setOffset:(CGPoint)arg1 ;
-(CGPoint)offset;
-(void)teardown;
-(void)setText:(NSString *)arg1 ;
-(TSUColor *)backgroundColor;
-(CGRect)frame;
-(id<MTLTexture>)metalTexture;
-(TSUColor *)textColor;
-(void)setTextureType:(int)arg1 ;
-(CGImageRef)image;
-(NSRange)textRange;
-(void)setTextBaseline:(double)arg1 ;
-(void)setTextRange:(NSRange)arg1 ;
-(double)textBaseline;
-(void)setContentRect:(CGRect)arg1 ;
-(CGSize)size;
-(void)setAttributes:(NSMutableDictionary *)arg1 ;
-(void)setBackgroundColor:(TSUColor *)arg1 ;
-(id)description;
-(CGRect)contentRect;
-(void)setOriginalPosition:(CGPoint)arg1 ;
-(CGPoint)originalPosition;
-(CALayer *)parentLayer;
-(void)setIsVerticalText:(BOOL)arg1 ;
-(BOOL)isVerticalText;
-(id)initWithSize:(CGSize)arg1 offset:(CGPoint)arg2 renderBlock:(/*^block*/id)arg3 ;
-(void)setTextureOpacity:(double)arg1 ;
-(void)setupMetalTextureForDevice:(id)arg1 ;
-(CGRect)frameOnCanvas;
-(void)releaseSingleTexture;
-(void)setTextXHeight:(double)arg1 ;
-(CGColorSpaceRef)p_colorSpace;
-(CGImageRef)p_newImageAndBufferWithAngle:(double)arg1 scale:(double)arg2 offset:(CGPoint)arg3 ;
-(void)resetToSourceImage;
-(void)setupSingleTextureAndGenerateMipMaps:(BOOL)arg1 ;
-(void)setupSingleTexture;
-(CGRect)boundingRectForStage:(long long)arg1 isBuildIn:(BOOL)arg2 ;
-(id)p_allocateMetalTextureForDevice:(id)arg1 ;
-(char*)p_setupTextureDataWithSize:(CGSize)arg1 isBGRA:(BOOL)arg2 ;
-(double)singleTextureOpacity;
-(id)metalTextureWithContext:(id)arg1 ;
-(id)p_latestTextureNotAfterLayerTime:(double)arg1 ;
-(id)p_allocateMetalTextureForDevice:(id)arg1 renderTarget:(BOOL)arg2 writable:(BOOL)arg3 private:(BOOL)arg4 maxSize:(CGSize)arg5 ;
-(CGSize)p_textureSizeWithDevice:(id)arg1 maxSize:(CGSize)arg2 ;
-(id)initWithSize:(CGSize)arg1 image:(CGImageRef)arg2 ;
-(float)opacityFromAttributes;
-(CATransform3D)transformFromAttributes;
-(void)adjustAnchorRelativeToParentsCenterOfRotation:(CGPoint)arg1 isMagicMove:(BOOL)arg2 ;
-(void)resetAnchorPoint;
-(BOOL)isRenderable;
-(void)renderLayerContentsIfNeeded;
-(unsigned)singleTextureName;
-(unsigned)singleTextureTarget;
-(void)bakeLayerWithAngle:(double)arg1 scale:(double)arg2 ;
-(void)renderIntoContext:(CGContextRef)arg1 ;
-(BOOL)isBackgroundTexture;
-(BOOL)isMetalTextureSetup;
-(void)releaseMetalTexture;
-(void)drawFrameAtLayerTime:(double)arg1 context:(id)arg2 ;
-(void)setLiveTexturedRectangleSource:(id)arg1 ;
-(void)setLiveTexturedRectangleSourceProxy:(id)arg1 ;
-(BOOL)hasLiveTexturedRectangleSource;
-(BOOL)isFlattened;
-(void)setIsFlattened:(BOOL)arg1 ;
-(double)textureOpacity;
-(void)setFrameOnCanvas:(CGRect)arg1 ;
-(BOOL)shouldUseDisplayLinkPresentationTime;
-(void)setShouldUseDisplayLinkPresentationTime:(BOOL)arg1 ;
-(BOOL)shouldGenerateMipmap;
-(void)setShouldGenerateMipmap:(BOOL)arg1 ;
-(double)textXHeight;
-(double)bakedScale;
@end


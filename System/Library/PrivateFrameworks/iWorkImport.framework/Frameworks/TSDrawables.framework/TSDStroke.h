/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:25 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSDrawables.framework/TSDrawables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSDrawables/TSDrawables-Structs.h>
#import <TSDrawables/TSDPathPainter.h>
#import <TSDrawables/TSDMixing.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSMutableCopying.h>

@class TSUColor, TSDStrokePattern, NSString;

@interface TSDStroke : NSObject <TSDPathPainter, TSDMixing, NSCopying, NSMutableCopying> {

	int _cap;
	int _join;
	TSUColor* _color;
	double _width;
	double _miterLimit;
	TSDStrokePattern* _pattern;
	double _actualWidth;

}

@property (nonatomic,readonly) BOOL dontClearBackground; 
@property (nonatomic,readonly) BOOL empty; 
@property (nonatomic,readonly) BOOL solid; 
@property (nonatomic,copy) TSUColor * i_color;                                                      //@synthesize color=_color - In the implementation block
@property (assign,nonatomic) double i_width;                                                        //@synthesize width=_width - In the implementation block
@property (assign,nonatomic) double i_actualWidth;                                                  //@synthesize actualWidth=_actualWidth - In the implementation block
@property (assign,setter=i_setCap:,nonatomic) int i_cap;                                            //@synthesize cap=_cap - In the implementation block
@property (assign,nonatomic) int i_join;                                                            //@synthesize join=_join - In the implementation block
@property (assign,nonatomic) double i_miterLimit;                                                   //@synthesize miterLimit=_miterLimit - In the implementation block
@property (setter=i_setPattern:,nonatomic,copy) TSDStrokePattern * i_pattern;                       //@synthesize pattern=_pattern - In the implementation block
@property (nonatomic,copy,readonly) TSUColor * color; 
@property (nonatomic,readonly) double width; 
@property (nonatomic,readonly) double renderedWidth; 
@property (nonatomic,readonly) double actualWidth; 
@property (nonatomic,readonly) int cap; 
@property (nonatomic,readonly) int join; 
@property (nonatomic,readonly) double miterLimit; 
@property (nonatomic,copy,readonly) TSDStrokePattern * pattern; 
@property (nonatomic,readonly) BOOL isNullStroke; 
@property (nonatomic,readonly) BOOL isDash; 
@property (nonatomic,readonly) BOOL isRoundDash; 
@property (nonatomic,readonly) BOOL shouldRender; 
@property (nonatomic,readonly) BOOL supportsPattern; 
@property (nonatomic,readonly) BOOL supportsWidth; 
@property (nonatomic,readonly) BOOL supportsColor; 
@property (nonatomic,readonly) BOOL supportsLineOptions; 
@property (nonatomic,readonly) double suggestedMinimumLineWidth; 
@property (nonatomic,readonly) BOOL isFrame; 
@property (nonatomic,readonly) BOOL isNearlyWhite; 
@property (nonatomic,readonly) double dashSpacing; 
@property (nonatomic,readonly) BOOL drawsOutsideStrokeBounds; 
@property (nonatomic,readonly) BOOL needsToExtendJoinsForBoundsCalculation; 
@property (nonatomic,readonly) TSDStrokeOutsets outsets; 
@property (nonatomic,readonly) BOOL canApplyDirectlyToRepRenderable; 
@property (nonatomic,readonly) BOOL canApplyToShapeRenderable; 
@property (nonatomic,readonly) BOOL prefersToApplyToShapeRenderableDuringManipulation; 
@property (nonatomic,readonly) BOOL drawsInOneStep; 
@property (nonatomic,readonly) BOOL shouldAntialiasDefeat; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)stroke;
+(Class)mutableClass;
+(BOOL)canMixWithNilObjects;
+(id)i_newStroke;
+(id)i_newEmptyStroke;
+(id)emptyStroke;
+(id)strokeWithColor:(id)arg1 width:(double)arg2 ;
+(id)strokeWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 ;
+(long long)indexOfStroke:(id)arg1 strokeArray:(id)arg2 ;
+(id)editedStrokeFromModelStroke:(id)arg1 selectedStroke:(id)arg2 ;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(int)cap;
-(id)copyWithZone:(NSZone*)arg1 ;
-(int)join;
-(double)width;
-(TSDStrokePattern *)pattern;
-(void)applyToContext:(CGContextRef)arg1 ;
-(int)i_cap;
-(BOOL)solid;
-(BOOL)supportsColor;
-(id)init;
-(BOOL)isDash;
-(int)i_join;
-(BOOL)isEqual:(id)arg1 ;
-(double)miterLimit;
-(TSUColor *)color;
-(BOOL)empty;
-(unsigned long long)hash;
-(BOOL)isFrame;
-(NSString *)description;
-(BOOL)shouldRender;
-(TSUColor *)i_color;
-(double)i_width;
-(TSDStrokeOutsets)outsets;
-(double)actualWidth;
-(double)dashSpacing;
-(void)paintLineEnd:(id)arg1 atPoint:(CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(CGContextRef)arg5 useFastDrawing:(BOOL)arg6 ;
-(id)strokeLineEnd:(id)arg1 ;
-(void)paintLineEnd:(id)arg1 atPoint:(CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(CGContextRef)arg5 ;
-(BOOL)isNearlyWhite;
-(void)paintRect:(CGRect)arg1 inContext:(CGContextRef)arg2 ;
-(void)paintPath:(const CGPathRef)arg1 inContext:(CGContextRef)arg2 ;
-(void)drawSwatchInRect:(CGRect)arg1 inContext:(CGContextRef)arg2 ;
-(long long)mixingTypeWithObject:(id)arg1 ;
-(id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2 ;
-(BOOL)isRoundDash;
-(id)initWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 ;
-(id)initWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 miterLimit:(double)arg6 ;
-(void)setI_actualWidth:(double)arg1 ;
-(double)i_miterLimit;
-(TSDStrokePattern *)i_pattern;
-(void)i_setCap:(int)arg1 ;
-(double)i_actualWidth;
-(BOOL)supportsWidth;
-(BOOL)supportsLineOptions;
-(BOOL)supportsPattern;
-(const CGPathRef)pathToStrokeFromCGPath:(const CGPathRef)arg1 ;
-(void)setI_color:(TSUColor *)arg1 ;
-(void)setI_width:(double)arg1 ;
-(void)setI_join:(int)arg1 ;
-(void)setI_miterLimit:(double)arg1 ;
-(void)i_setPattern:(id)arg1 ;
-(void)applyToContext:(CGContextRef)arg1 insideStroke:(BOOL)arg2 ;
-(id)colorForCGContext:(CGContextRef)arg1 ;
-(void)paintRect:(CGRect)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(CGContextRef)arg3 ;
-(void)paintPath:(const CGPathRef)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(CGContextRef)arg3 ;
-(void)paintPath:(const CGPathRef)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(CGContextRef)arg3 useFastDrawing:(BOOL)arg4 parameterized:(BOOL)arg5 shouldReverseDrawOrder:(BOOL)arg6 ;
-(void)p_strokePathChunk:(const CGPathRef)arg1 inContext:(CGContextRef)arg2 wantsInteriorStroke:(BOOL)arg3 ;
-(double)horizontalMarginForSwatch;
-(BOOL)isNullStroke;
-(BOOL)canApplyDirectlyToRepRenderable;
-(BOOL)canApplyToShapeRenderable;
-(void)applyToShapeRenderable:(id)arg1 insideStroke:(BOOL)arg2 withScale:(double)arg3 ;
-(double)renderedWidth;
-(BOOL)drawsOutsideStrokeBounds;
-(BOOL)needsToExtendJoinsForBoundsCalculation;
-(id)pathToStrokeFromTSDBezierPath:(id)arg1 ;
-(CGRect)boundsForPath:(id)arg1 ;
-(void)i_setPropertiesFromStroke:(id)arg1 ;
-(void)i_setPatternPropertiesFromStroke:(id)arg1 ;
-(void)applyInteriorWrapPropertiesToContext:(CGContextRef)arg1 insideStroke:(BOOL)arg2 ;
-(double)lineEndInsetAdjustment;
-(CGRect)boundsForLineEnd:(id)arg1 atPoint:(CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 transform:(CGAffineTransform)arg5 ;
-(id)pathForLineEnd:(id)arg1 wrapPath:(BOOL)arg2 atPoint:(CGPoint)arg3 atAngle:(double)arg4 withScale:(double)arg5 ;
-(double)suggestedMinimumLineWidth;
-(void)applyToRepRenderable:(id)arg1 withScale:(double)arg2 ;
-(BOOL)prefersToApplyToShapeRenderableDuringManipulation;
-(void)applyToShapeRenderable:(id)arg1 withScale:(double)arg2 ;
-(BOOL)drawsInOneStep;
-(BOOL)shouldAntialiasDefeat;
-(id)strokeByTransformingByTransform:(CGAffineTransform)arg1 ;
-(BOOL)canDrawWithOtherStroke:(id)arg1 ;
-(BOOL)dontClearBackground;
-(BOOL)isEqualToStroke:(id)arg1 ;
@end


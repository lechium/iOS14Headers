/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:32 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSTables.framework/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <TSTables/TSCEFormulaOwning.h>

@class TSCECalculationEngine, TSTTableInfo, TSTCellDictionary, NSString;

@interface TSTCategoryAggregateFormulaOwner : NSObject <TSCEFormulaOwning> {

	TSCECalculationEngine* _calcEngine;
	TSTTableInfo* _tableInfo;
	UUIDData<TSP::UUIDData> _tableUID;
	UUIDData<TSP::UUIDData> _ownerUID;
	TSTCellDictionary* _cellsPendingWrite;

}

@property (assign,nonatomic) const UUIDData<TSP::UUIDData>* tableUID;              //@synthesize tableUID=_tableUID - In the implementation block
@property (assign,nonatomic) const UUIDData<TSP::UUIDData>* ownerUID;              //@synthesize ownerUID=_ownerUID - In the implementation block
@property (assign,nonatomic,__weak) TSTTableInfo * tableInfo; 
@property (nonatomic,readonly) TSTCellDictionary * cellsPendingWrite;              //@synthesize cellsPendingWrite=_cellsPendingWrite - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(long long)evaluationMode;
-(TSTTableInfo *)tableInfo;
-(TSTCellDictionary *)cellsPendingWrite;
-(void)setTableInfo:(TSTTableInfo *)arg1 ;
-(const UUIDData<TSP::UUIDData>*)tableUID;
-(const UUIDData<TSP::UUIDData>*)ownerUID;
-(unsigned short)ownerKind;
-(id)linkedResolver;
-(void)writeResultsForCalcEngine:(id)arg1 ;
-(void)invalidateForCalcEngine:(id)arg1 ;
-(TSCERecalculationState)evaluateFormulaAt:(TSUCellCoord)arg1 withCalcEngine:(id)arg2 recalcOptions:(TSCERecalculationState)arg3 ;
-(void)setTableUID:(const UUIDData<TSP::UUIDData>*)arg1 ;
-(void)setOwnerUID:(const UUIDData<TSP::UUIDData>*)arg1 ;
-(void)unregisterFromCalcEngine;
-(BOOL)isRegisteredWithCalcEngine:(id)arg1 ;
-(int)registerWithCalcEngine:(id)arg1 baseOwnerUID:(const UUIDData<TSP::UUIDData>*)arg2 ;
-(id)initWithTableUID:(const UUIDData<TSP::UUIDData>*)arg1 ownerUID:(const UUIDData<TSP::UUIDData>*)arg2 ;
@end


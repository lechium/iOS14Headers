/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:32 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSTables.framework/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <TSReading/TSPObject.h>
#import <TSTables/TSPCopying.h>

@class NSArray;

@interface TSTTableFilterSet : TSPObject <TSPCopying> {

	int _type;
	BOOL _isEnabled;
	NSArray* _rules;
	BOOL _needsFormulaRewriteForImport;
	vector<unsigned long, std::__1::allocator<unsigned long> >* _filterOffsets;

}

@property (nonatomic,readonly) unsigned long long filterCount; 
@property (nonatomic,readonly) unsigned long long ruleCount; 
@property (nonatomic,readonly) BOOL canAddRules; 
@property (nonatomic,readonly) unsigned long long newFilterIndex; 
@property (assign,nonatomic) BOOL isEnabled;                                   //@synthesize isEnabled=_isEnabled - In the implementation block
@property (assign,nonatomic) int filterSetType; 
@property (assign,nonatomic) BOOL needsFormulaRewriteForImport;                //@synthesize needsFormulaRewriteForImport=_needsFormulaRewriteForImport - In the implementation block
-(void)setIsEnabled:(BOOL)arg1 ;
-(unsigned long long)ruleCount;
-(BOOL)isEnabled;
-(BOOL)isEqual:(id)arg1 ;
-(id)copyWithContext:(id)arg1 ;
-(unsigned long long)hash;
-(unsigned long long)filterCount;
-(void)loadFromArchive:(const FilterSetArchive*)arg1 unarchiver:(id)arg2 ;
-(void)saveToArchive:(FilterSetArchive*)arg1 archiver:(id)arg2 ;
-(void)loadFromUnarchiver:(id)arg1 ;
-(void)saveToArchiver:(id)arg1 ;
-(id)initWithFilterRules:(id)arg1 type:(int)arg2 context:(id)arg3 ;
-(BOOL)containsFilterRulesInUIDForm;
-(id)copyByRewritingFilterRulesToGeometricFormWithContext:(id)arg1 withTableInfo:(id)arg2 ;
-(BOOL)needsFormulaRewriteForImport;
-(void)setNeedsFormulaRewriteForImport:(BOOL)arg1 ;
-(void)setFilterSetType:(int)arg1 ;
-(BOOL)allowsRowInsertion;
-(id)ruleAtAbsoluteIndex:(unsigned long long)arg1 ;
-(BOOL)rowIsShown:(unsigned)arg1 withHiddenStateExtent:(id)arg2 withCalcEngine:(id)arg3 ;
-(id)copyByRewritingFilterRulesToUidFormWithContext:(id)arg1 withTableInfo:(id)arg2 ;
-(void)enumerateFiltersInTable:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)removeRulesWithAbsoluteIndices:(id)arg1 ;
-(int)filterSetType;
-(BOOL)p_thresholdComparisonMatchesFilter:(long long)arg1 withPredicateType:(unsigned char)arg2 ;
-(unsigned long long)numberOfRulesInFilter:(unsigned long long)arg1 ;
-(void)p_addRules:(id)arg1 atRuleIndices:(id)arg2 inFilter:(unsigned long long)arg3 isNew:(BOOL)arg4 ;
-(id)filterAtIndex:(unsigned long long)arg1 inTable:(id)arg2 ;
-(id)baseColumnIndicesForRulesInTable:(id)arg1 ;
-(id)ruleInFilter:(unsigned long long)arg1 atIndex:(unsigned long long)arg2 ;
-(BOOL)canAddRules;
-(unsigned long long)newFilterIndex;
-(void)removeRulesWithIndices:(id)arg1 inFilter:(unsigned long long)arg2 ;
-(void)removeRulesForBaseColumnIndices:(id)arg1 withTableInfo:(id)arg2 ;
-(void)addRules:(id)arg1 inFilter:(unsigned long long)arg2 ;
-(void)replaceRule:(id)arg1 atRuleIndex:(unsigned long long)arg2 inFilter:(unsigned long long)arg3 ;
-(void)enumerateFilterIndicesInTable:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)enumerateFiltersForColumn:(TSUModelColumnIndex)arg1 withTable:(id)arg2 usingBlock:(/*^block*/id)arg3 ;
-(void)enumerateRulesInFilterIndex:(unsigned long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)filterIndicesForBaseColumn:(TSUModelColumnIndex)arg1 inTable:(id)arg2 ;
-(unsigned long long)firstFilterIndexForBaseColumn:(TSUModelColumnIndex)arg1 inTable:(id)arg2 ;
-(unsigned long long)ruleIndexInFilter:(unsigned long long)arg1 matchingCell:(id)arg2 ;
-(id)absoluteRuleIndicesForColumn:(TSUModelColumnIndex)arg1 inTable:(id)arg2 ;
-(id)viewColumnIndicesForRulesInTable:(id)arg1 ;
@end


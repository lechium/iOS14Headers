/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:31 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSTables.framework/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@class TSTUIDRectRef, NSNumber, NSDate, NSString;

@interface TSTFormulaPredArg : NSObject <NSCopying> {

	id _objcData;
	RefTypeHolder<TSCECellRef, 0> _baseCellRef;
	TSTUIDRectRef* _uidRectRef;
	TSCECategoryRef _categoryRef;
	TSCERelativeCellRef _relativeCellRef;
	BOOL _hasRelativeCellRef;
	int _type;
	TSUPreserveFlags _preserveFlags;
	TSUModelCellCoord _hostCellCoord;
	SCD_Union_TS225 _union;

}

@property (nonatomic,readonly) int type;                                   //@synthesize type=_type - In the implementation block
@property (assign,nonatomic) BOOL boolValue; 
@property (nonatomic,retain) NSNumber * number; 
@property (assign,nonatomic) double numberValue; 
@property (nonatomic,retain) NSDate * date; 
@property (nonatomic,copy) NSString * string; 
@property (assign,nonatomic) TSUPreserveFlags preserveFlags; 
@property (nonatomic,readonly) BOOL preserveColumn; 
@property (nonatomic,readonly) BOOL preserveRow; 
@property (nonatomic,readonly) BOOL hasRelativeCellRef;                    //@synthesize hasRelativeCellRef=_hasRelativeCellRef - In the implementation block
@property (nonatomic,retain) TSTUIDRectRef * uidRectRef;                   //@synthesize uidRectRef=_uidRectRef - In the implementation block
@property (nonatomic,readonly) BOOL hasCategoryRef; 
@property (assign,nonatomic) TSCECategoryRef categoryRef; 
@property (assign,nonatomic) double durationValue; 
@property (assign,nonatomic) int durationUnits; 
@property (assign,nonatomic) TSUModelCellCoord hostCellCoord;              //@synthesize hostCellCoord=_hostCellCoord - In the implementation block
+(id)defaultPredicateArg;
-(NSNumber *)number;
-(NSString *)string;
-(id)initWithDate:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setDate:(NSDate *)arg1 ;
-(NSDate *)date;
-(void)setNumberValue:(double)arg1 ;
-(void)setString:(NSString *)arg1 ;
-(double)numberValue;
-(BOOL)boolValue;
-(void)setNumber:(NSNumber *)arg1 ;
-(id)initWithNumber:(id)arg1 ;
-(id)init;
-(id)initWithDouble:(double)arg1 ;
-(id)initWithString:(id)arg1 ;
-(int)type;
-(BOOL)isEqual:(id)arg1 ;
-(void)setBoolValue:(BOOL)arg1 ;
-(id)initWithBool:(BOOL)arg1 ;
-(id)description;
-(id)cellReference;
-(void)setPreserveFlags:(TSUPreserveFlags)arg1 ;
-(TSUPreserveFlags)preserveFlags;
-(TSCECategoryRef)categoryRef;
-(void)setCategoryRef:(TSCECategoryRef)arg1 ;
-(void)setRelativeCellRef:(const TSCERelativeCellRef*)arg1 ;
-(BOOL)hasUidRectRef;
-(BOOL)hasCategoryRef;
-(TSUModelCellCoord)hostCellCoord;
-(TSCECellRef)cellRefForHostCoord:(TSUModelCellCoord)arg1 ;
-(TSTUIDRectRef *)uidRectRef;
-(const RefTypeHolder<TSCECellRef, 0>*)baseCellRef;
-(void)setBaseCellRef:(const RefTypeHolder<TSCECellRef, 0>*)arg1 ;
-(id)initWithBaseCellRef:(const RefTypeHolder<TSCECellRef, 0>*)arg1 preserveFlags:(const TSUPreserveFlags*)arg2 ;
-(void)setBaseCellRef:(const RefTypeHolder<TSCECellRef, 0>*)arg1 preserveFlags:(const TSUPreserveFlags*)arg2 ;
-(double)durationValue;
-(int)durationUnits;
-(id)initWithDuration:(double)arg1 units:(int)arg2 ;
-(BOOL)hasRelativeCellRef;
-(id)initWithRelativeCellRef:(const TSCERelativeCellRef*)arg1 ;
-(id)initWithUIDRectRef:(id)arg1 ;
-(id)initWithCategoryRef:(const TSCECategoryRef*)arg1 ;
-(const TSCERelativeCellRef*)relativeCellRef;
-(BOOL)preserveColumn;
-(BOOL)preserveRow;
-(void)setUIDRectRef:(id)arg1 ;
-(void)setBaseCellRef:(const RefTypeHolder<TSCECellRef, 0>*)arg1 preserveColumn:(BOOL)arg2 preserveRow:(BOOL)arg3 ;
-(id)initWithBaseCellReference:(id)arg1 preserveColumn:(BOOL)arg2 preserveRow:(BOOL)arg3 ;
-(void)setBaseCellReference:(id)arg1 ;
-(void)setBaseCellReference:(id)arg1 preserveColumn:(BOOL)arg2 preserveRow:(BOOL)arg3 ;
-(void)setDurationValue:(double)arg1 ;
-(void)setDurationUnits:(int)arg1 ;
-(BOOL)isEqual:(id)arg1 atHostCoord:(TSUModelCellCoord)arg2 ;
-(TSCEFormulaCreator)formulaCreatorForPredArgAtHostCell:(const TSCECellRef*)arg1 calcEngine:(id)arg2 ;
-(void)setUidRectRef:(TSTUIDRectRef *)arg1 ;
-(void)setHostCellCoord:(TSUModelCellCoord)arg1 ;
@end


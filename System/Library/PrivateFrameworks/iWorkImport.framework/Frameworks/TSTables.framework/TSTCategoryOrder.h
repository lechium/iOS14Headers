/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:32 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSTables.framework/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <TSReading/TSPObject.h>

@class TSTTableInfo, TSTColumnRowUIDMap;

@interface TSTCategoryOrder : TSPObject {

	BOOL _isRowOrderTemporary;
	TSTTableInfo* _tableInfo;
	TSTColumnRowUIDMap* _uidMap;

}

@property (__weak,readonly) TSTTableInfo * tableInfo;              //@synthesize tableInfo=_tableInfo - In the implementation block
@property (retain) TSTColumnRowUIDMap * uidMap;                    //@synthesize uidMap=_uidMap - In the implementation block
@property (assign) BOOL isRowOrderTemporary;                       //@synthesize isRowOrderTemporary=_isRowOrderTemporary - In the implementation block
+(UUIDData<TSP::UUIDData>)categoryColumnUID;
-(TSTColumnRowUIDMap *)uidMap;
-(id)initWithContext:(id)arg1 ;
-(void)setRowOrder:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)rowOrder;
-(TSTTableInfo *)tableInfo;
-(id)initWithTableInfo:(id)arg1 ;
-(void)loadFromArchive:(const CategoryOrderArchive*)arg1 unarchiver:(id)arg2 ;
-(void)saveToArchive:(CategoryOrderArchive*)arg1 archiver:(id)arg2 ;
-(void)loadFromUnarchiver:(id)arg1 ;
-(void)saveToArchiver:(id)arg1 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)setRowOrderUsingViewOrder;
-(id)columnRowUIDMap;
-(BOOL)hasValidInfo;
-(BOOL)hasValidUidMap;
-(id)initWithContext:(id)arg1 tableInfo:(id)arg2 rowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg3 ;
-(void)removeRowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)orderedRowUidsFromUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(id)sortedArrayFromArray:(id)arg1 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)orderedRowUidsWithLabels;
-(id)initWithTableInfo:(id)arg1 rowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 ;
-(id)copyWithContext:(id)arg1 tableInfo:(id)arg2 ;
-(id)targetGroupFromRowIndex:(unsigned)arg1 minSourceLevel:(unsigned char)arg2 templateRowUID:(UUIDData<TSP::UUIDData>*)arg3 ;
-(unsigned char)minimumCategoryLevelInRowRange:(NSRange)arg1 ;
-(void)setTemporaryRowOrder:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(void)insertRowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 beforeUid:(const UUIDData<TSP::UUIDData>*)arg2 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)groupUidsGivenRowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 selectedLevels:(const unordered_map<TSCECategoryLevel, int, std::__1::hash<TSCECategoryLevel>, std::__1::equal_to<TSCECategoryLevel>, std::__1::allocator<std::__1::pair<const TSCECategoryLevel, int> > >*)arg2 ;
-(void)setUidMap:(TSTColumnRowUIDMap *)arg1 ;
-(BOOL)isRowOrderTemporary;
-(void)setIsRowOrderTemporary:(BOOL)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:32 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSTables.framework/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <TSTables/TSCETableResolverFactoryProtocol.h>
#import <TSTables/TSCEResolverLocatingProtocol.h>

@class NSString;

@interface TSTTableResolverFactory : NSObject <TSCETableResolverFactoryProtocol, TSCEResolverLocatingProtocol> {

	TSCECalcEngine* _calcEngine;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(vector<TSCEValue, std::__1::allocator<TSCEValue> >*)valuesForCategoryRef:(const TSCECategoryRef*)arg1 atRowUid:(const UUIDData<TSP::UUIDData>*)arg2 error:(id*)arg3 ;
-(id)initWithCalcEngine:(TSCECalcEngine*)arg1 ;
-(vector<TSCECategoryRef, std::__1::allocator<TSCECategoryRef> >*)categoryRefsForSpanningCategoryRef:(const TSCECategoryRef*)arg1 ;
-(unsigned char)aggregateTypeForCategoryRef:(const TSCECategoryRef*)arg1 ;
-(vector<TSCECellRef, std::__1::allocator<TSCECellRef> >*)cellRefsForCategoryRef:(const TSCECategoryRef*)arg1 atRowUid:(const UUIDData<TSP::UUIDData>*)arg2 ;
-(TSCERangeRef)aggregateRangeRefForCategoryRef:(const TSCECategoryRef*)arg1 ;
-(UUIDData<TSP::UUIDData>)mapOwnerUID:(const UUIDData<TSP::UUIDData>*)arg1 ;
-(id)resolverContainerMatchingName:(id)arg1 inDocumentRoot:(id)arg2 ;
-(id)resolverMatchingName:(id)arg1 inDocumentRoot:(id)arg2 contextResolver:(id)arg3 ;
-(id)resolverMatchingNameWithContextContainer:(id)arg1 inDocumentRoot:(id)arg2 contextContainerName:(id)arg3 ;
-(vector<TSCECellRef, std::__1::allocator<TSCECellRef> >*)unorderedCellRefsForCategoryRef:(const TSCECategoryRef*)arg1 atRowUid:(const UUIDData<TSP::UUIDData>*)arg2 ;
-(TSCETableResolver*)newTableResolverForResolver:(id)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:32 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSTables.framework/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <TSReading/TSPObject.h>
#import <TSTables/TSPCopying.h>

@class NSMutableArray, NSArray;

@interface TSTConditionalStyleSet : TSPObject <TSPCopying> {

	NSMutableArray* _conditionalStyleSetRules;

}

@property (nonatomic,readonly) NSArray * currentRules;              //@synthesize conditionalStyleSetRules=_conditionalStyleSetRules - In the implementation block
-(id)rules;
-(unsigned long long)ruleCount;
-(BOOL)isEqual:(id)arg1 ;
-(id)copyWithContext:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)ruleAtIndex:(unsigned long long)arg1 ;
-(void)loadFromUnarchiver:(id)arg1 ;
-(void)saveToArchiver:(id)arg1 ;
-(id)copyByRepairingBadReferences:(TSCEFormulaRewriteContext*)arg1 ;
-(BOOL)containsUidReferences;
-(BOOL)hasBadRefWithUidInfo;
-(id)copyByClearingUids:(id)arg1 containingTableUID:(const UUIDData<TSP::UUIDData>*)arg2 ;
-(id)copyByRewritingWithContext:(TSCEFormulaRewriteContext*)arg1 rewriteBlock:(/*^block*/id)arg2 ;
-(id)copyByRemappingHostCellAgnosticOwnerUIDsWithMap:(const UUIDMap<TSP::UUIDMap>*)arg1 calcEngine:(id)arg2 ownerUID:(const UUIDData<TSP::UUIDData>*)arg3 error:(BOOL*)arg4 ;
-(id)copyByRemappingOwnerUIDsWithMap:(const UUIDMap<TSP::UUIDMap>*)arg1 calcEngine:(id)arg2 error:(BOOL*)arg3 ;
-(id)copyToGeometricFormWithRewriteContext:(TSCEFormulaRewriteContext*)arg1 ;
-(id)copyByConvertingToRelativeAncestorsWithRewriteContext:(TSCEFormulaRewriteContext*)arg1 ;
-(id)copyToUidFormForTableInfo:(id)arg1 inCellCoordinate:(TSUCellCoord)arg2 preserveHostCell:(BOOL)arg3 ;
-(id)initWithContext:(id)arg1 rules:(id)arg2 ;
-(BOOL)tst_dataObjectIsEqual:(id)arg1 ;
-(id)copyByUpgradingToLinkedRefAtHostCellRef:(const TSCECellRef*)arg1 ;
-(unsigned long long)tst_dataObjectHash;
-(void)setHostCell:(const UUIDData<TSP::UUIDData>*)arg1 hostColumnUID:(const UUIDData<TSP::UUIDData>*)arg2 hostRowUID:(const UUIDData<TSP::UUIDData>*)arg3 ;
-(id)copyByRewritingWithSpec:(id)arg1 inOwner:(id)arg2 inCellCoordinate:(TSUCellCoord)arg3 ;
-(id)copyByOffsettingRelativeReferencesWithOffset:(TSUColumnRowOffset)arg1 ;
-(BOOL)isEqualForInspector:(id)arg1 ;
-(id)copyByUpdatingHostCellRef:(const TSCECellRef*)arg1 ;
-(id)initWithConditionalStyleSet:(id)arg1 ;
-(void)iterateFormulasWithContext:(TSCEFormulaRewriteContext*)arg1 block:(/*^block*/id)arg2 ;
-(id)copyByReparenting:(id)arg1 groupByUID:(const UUIDData<TSP::UUIDData>*)arg2 rewriteContext:(TSCEFormulaRewriteContext*)arg3 ;
-(id)copyByResolvingRelativeAncestorsWithRewriteContext:(TSCEFormulaRewriteContext*)arg1 ;
-(id)precedentsWithCalcEngine:(id)arg1 hostOwnerUID:(const UUIDData<TSP::UUIDData>*)arg2 hostCellID:(const TSUCellCoord*)arg3 ;
-(id)rulesDescription;
-(NSArray *)currentRules;
@end


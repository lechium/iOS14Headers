/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:31 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSTables.framework/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <TSTables/TSTExpressionNode.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSString, TSCECalculationEngine, TSTUIDRectRef, TSTReferenceColorHelper, TSKDocumentRoot, TSKChangeNotifier, TSTTableInfo, TSTGroupBy;

@interface TSTReferenceNode : TSTExpressionNode <NSCopying> {

	NSString* _refString;
	NSString* _formulaPlainText;
	unsigned char _rangeContext;
	BOOL _rangeWithFunction;
	BOOL _isBlankForKeyboardInsertion;
	BOOL _suppressAutomaticNamedReferenceInvalidation;
	BOOL _isCategoryRef;
	BOOL _hasCachedIsValidReference;
	BOOL _cachedIsValidReference;
	TSCECalculationEngine* _calcEngine;
	TSTUIDRectRef* _uidRectRef;
	TSTReferenceColorHelper* _referenceColorHelper;
	TSCECellRef _hostCellRef;
	TSCECategoryRef _categoryRef;

}

@property (nonatomic,readonly) TSKDocumentRoot * documentRoot; 
@property (nonatomic,readonly) TSKChangeNotifier * changeNotifier; 
@property (assign,nonatomic) BOOL hasCachedIsValidReference;                                  //@synthesize hasCachedIsValidReference=_hasCachedIsValidReference - In the implementation block
@property (assign,nonatomic) BOOL cachedIsValidReference;                                     //@synthesize cachedIsValidReference=_cachedIsValidReference - In the implementation block
@property (nonatomic,__weak,readonly) TSCECalculationEngine * calcEngine;                     //@synthesize calcEngine=_calcEngine - In the implementation block
@property (nonatomic,readonly) TSTUIDRectRef * uidRectRef;                                    //@synthesize uidRectRef=_uidRectRef - In the implementation block
@property (nonatomic,readonly) UUIDData<TSP::UUIDData> tableUID; 
@property (assign,nonatomic) UUIDData<TSP::UUIDData> hostTableUID; 
@property (assign,nonatomic) TSCECellRef hostCellRef;                                         //@synthesize hostCellRef=_hostCellRef - In the implementation block
@property (nonatomic,readonly) TSTTableInfo * tableInfo; 
@property (nonatomic,readonly) TSTGroupBy * groupBy; 
@property (readonly) TSUViewCellCoord viewTopLeftCoord; 
@property (readonly) TSUViewCellCoord viewBottomRightCoord; 
@property (readonly) TSUModelCellCoord baseTopLeftCoord; 
@property (readonly) TSUModelCellCoord baseBottomRightCoord; 
@property (readonly) TSCERangeCoordinate viewBoundingBox; 
@property (readonly) TSCERangeCoordinate baseBoundingBox; 
@property (assign,nonatomic) unsigned char basePreserveFlags; 
@property (assign,nonatomic) unsigned char viewPreserveFlags; 
@property (assign,nonatomic) unsigned char rangeContext;                                      //@synthesize rangeContext=_rangeContext - In the implementation block
@property (nonatomic,readonly) BOOL isNonSpanningRangeExpression; 
@property (nonatomic,readonly) BOOL isRangeExpression; 
@property (nonatomic,readonly) BOOL isLocalReference; 
@property (assign,getter=isRangeWithFunction,nonatomic) BOOL rangeWithFunction;               //@synthesize rangeWithFunction=_rangeWithFunction - In the implementation block
@property (assign,nonatomic) BOOL isBlankForKeyboardInsertion;                                //@synthesize isBlankForKeyboardInsertion=_isBlankForKeyboardInsertion - In the implementation block
@property (nonatomic,readonly) BOOL suppressAutomaticNamedReferenceInvalidation;              //@synthesize suppressAutomaticNamedReferenceInvalidation=_suppressAutomaticNamedReferenceInvalidation - In the implementation block
@property (nonatomic,readonly) BOOL spansAllColumns; 
@property (nonatomic,readonly) BOOL spansAllRows; 
@property (nonatomic,readonly) BOOL isSingleColumnSpanningReference; 
@property (nonatomic,readonly) BOOL isSingleRowSpanningReference; 
@property (nonatomic,readonly) BOOL isCategoryRef;                                            //@synthesize isCategoryRef=_isCategoryRef - In the implementation block
@property (nonatomic,readonly) BOOL isCategorySummaryRef; 
@property (nonatomic,readonly) BOOL isSpanningCategorySummaryRef; 
@property (assign,nonatomic) TSCECategoryRef categoryRef;                                     //@synthesize categoryRef=_categoryRef - In the implementation block
@property (nonatomic,readonly) UUIDData<TSP::UUIDData> categoryRefTableUID; 
@property (nonatomic,readonly) BOOL isResizable; 
@property (nonatomic,retain) TSTReferenceColorHelper * referenceColorHelper;                  //@synthesize referenceColorHelper=_referenceColorHelper - In the implementation block
+(RefTypeHolder<TSCERangeRef, 1>)p_expandedViewRangeRefForViewRangeRef:(const RefTypeHolder<TSCERangeRef, 1>*)arg1 forLabelRowsInTable:(id)arg2 ;
+(TSCECategoryRef)p_singleCategoryRefForViewRangeRef:(const RefTypeHolder<TSCERangeRef, 1>*)arg1 rangeContext:(unsigned char)arg2 calculationEngine:(id)arg3 hostCellRef:(const TSCECellRef*)arg4 ;
+(TSCECategoryRef)p_spanningCategoryRefForViewRangeRef:(const RefTypeHolder<TSCERangeRef, 1>*)arg1 groupByUid:(UUIDData<TSP::UUIDData>)arg2 categoryLevel:(unsigned char)arg3 calculationEngine:(id)arg4 ;
+(BOOL)p_rangeRef:(const TSCERangeRef*)arg1 isContainedWithinSummaryAndLabelRowsInTable:(id)arg2 ;
+(TSUCellRect)p_cellRangeForSingleCategoryRefInViewRangeRef:(const RefTypeHolder<TSCERangeRef, 1>*)arg1 inTable:(id)arg2 rangeContext:(unsigned char)arg3 ;
+(unsigned char)preserveFlagsForReference:(const TSCERangeRef*)arg1 calcEngine:(id)arg2 ;
-(id)string;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)invalidate;
-(void)dealloc;
-(TSKDocumentRoot *)documentRoot;
-(int)tokenType;
-(TSTGroupBy *)groupBy;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(TSKChangeNotifier *)changeNotifier;
-(TSTTableInfo *)tableInfo;
-(void)loadFromArchive:(const ReferenceNodeArchive*)arg1 unarchiver:(id)arg2 ;
-(void)saveToArchive:(ReferenceNodeArchive*)arg1 archiver:(id)arg2 ;
-(void)loadFromUnarchiver:(id)arg1 ;
-(void)saveToArchiver:(id)arg1 ;
-(UUIDData<TSP::UUIDData>)tableUID;
-(BOOL)spansAllRows;
-(TSCECalculationEngine *)calcEngine;
-(BOOL)spansAllColumns;
-(void)processChanges:(id)arg1 forChangeSource:(id)arg2 ;
-(void)setHostTableUID:(UUIDData<TSP::UUIDData>)arg1 ;
-(UUIDData<TSP::UUIDData>)hostTableUID;
-(BOOL)isLocalReference;
-(TSCERangeCoordinate)baseBoundingBox;
-(unsigned char)basePreserveFlags;
-(void)setBaseRangeRef:(const RefTypeHolder<TSCERangeRef, 0>Ref)arg1 preserveFlags:(unsigned char)arg2 ;
-(void)setReferenceColorHelper:(TSTReferenceColorHelper *)arg1 ;
-(BOOL)isEqualToExpressionNode:(id)arg1 ;
-(id)formulaPlainText;
-(void)setViewRangeRef:(const RefTypeHolder<TSCERangeRef, 1>*)arg1 preserveFlags:(unsigned char)arg2 ;
-(void)setChromeRangeRef:(const RefTypeHolder<TSCERangeRef, 2>*)arg1 preserveFlags:(unsigned char)arg2 ;
-(id)viewTractRef;
-(void)setViewPreserveFlags:(unsigned char)arg1 ;
-(unsigned char)viewPreserveFlags;
-(TSUViewCellCoord)viewTopLeftCoord;
-(TSUViewCellCoord)viewBottomRightCoord;
-(TSUModelCellCoord)baseTopLeftCoord;
-(TSUModelCellCoord)baseBottomRightCoord;
-(BOOL)isValidReference;
-(void)setBasePreserveFlags:(unsigned char)arg1 ;
-(void)insertFormulaText:(id)arg1 includeWhitespace:(BOOL)arg2 ;
-(id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3 ;
-(TSTCSENodeData)recordHashesForSubexpressions:(id)arg1 ;
-(void)buildASTNodeArray:(TSCEASTNodeArray*)arg1 hostCell:(TSUCellCoord)arg2 symbolTable:(TSCESymbolTable*)arg3 ;
-(id)exportString;
-(BOOL)isCategoryRef;
-(TSCECategoryRef)categoryRef;
-(void)setCategoryRef:(TSCECategoryRef)arg1 ;
-(id)initWithContext:(id)arg1 calculationEngine:(id)arg2 uidRectRef:(id)arg3 hostCellRef:(const TSCECellRef*)arg4 referenceColorHelper:(id)arg5 suppressAutomaticNamedReferenceInvalidation:(BOOL)arg6 ;
-(id)initWithContext:(id)arg1 calculationEngine:(id)arg2 baseRangeRef:(const RefTypeHolder<TSCERangeRef, 0>Ref)arg3 preserveFlags:(unsigned char)arg4 hostCellRef:(const TSCECellRef*)arg5 referenceColorHelper:(id)arg6 suppressAutomaticNamedReferenceInvalidation:(BOOL)arg7 ;
-(id)initWithReferenceStart:(id)arg1 referenceEnd:(id)arg2 suppressAutomaticNamedReferenceInvalidation:(BOOL)arg3 ;
-(void)setRangeWithFunction:(BOOL)arg1 ;
-(id)initWithContext:(id)arg1 calculationEngine:(id)arg2 categoryRef:(const TSCECategoryRef*)arg3 hostCellRef:(const TSCECellRef*)arg4 referenceColorHelper:(id)arg5 ;
-(TSTUIDRectRef *)uidRectRef;
-(id)initWithContext:(id)arg1 calculationEngine:(id)arg2 uidRectRef:(id)arg3 categoryRef:(const TSCECategoryRef*)arg4 hostCellRef:(const TSCECellRef*)arg5 referenceColorHelper:(id)arg6 suppressAutomaticNamedReferenceInvalidation:(BOOL)arg7 ;
-(BOOL)isRangeExpression;
-(TSCECellRef)hostCellRef;
-(TSTReferenceColorHelper *)referenceColorHelper;
-(void)p_resetMenu;
-(RefTypeHolder<TSCERangeRef, 1>)p_boundingViewRangeRef;
-(BOOL)isSpanningCategorySummaryRef;
-(unsigned char)rangeContext;
-(id)p_categoryRefViewTractRef;
-(BOOL)isSingleColumnSpanningReference;
-(BOOL)isSingleRowSpanningReference;
-(BOOL)isCategorySummaryRef;
-(BOOL)isRangeWithFunction;
-(id)p_subregionForRange:(id)arg1 rangeContext:(unsigned char)arg2 ;
-(id)referenceAsStringWithContext:(id)arg1 ;
-(void)p_buildASTNodeArray:(TSCEASTNodeArray*)arg1 forCoord:(TSUCellCoord)arg2 preserveFlags:(unsigned char)arg3 hostCell:(TSUCellCoord)arg4 ;
-(id)initWithContext:(id)arg1 calculationEngine:(id)arg2 viewRangeRef:(const RefTypeHolder<TSCERangeRef, 1>*)arg3 preserveFlags:(unsigned char)arg4 hostCellRef:(const RefTypeHolder<TSCECellRef, 0>*)arg5 referenceColorHelper:(id)arg6 suppressAutomaticNamedReferenceInvalidation:(BOOL)arg7 ;
-(id)initWithContext:(id)arg1 calculationEngine:(id)arg2 chromeRangeRef:(const RefTypeHolder<TSCERangeRef, 2>*)arg3 preserveFlags:(unsigned char)arg4 hostCellRef:(const RefTypeHolder<TSCECellRef, 0>*)arg5 referenceColorHelper:(id)arg6 suppressAutomaticNamedReferenceInvalidation:(BOOL)arg7 ;
-(TSCERangeCoordinate)viewBoundingBox;
-(RefTypeHolder<TSCERangeRef, 1>)viewRangeRefDeprecated;
-(UUIDData<TSP::UUIDData>)categoryRefTableUID;
-(BOOL)isNonSpanningRangeExpression;
-(void)setIsBlankForKeyboardInsertion:(BOOL)arg1 ;
-(BOOL)isResizable;
-(id)subregionForReference:(id)arg1 range:(id)arg2 ;
-(id)subregionForRange:(id)arg1 ;
-(void)setHostCellRef:(TSCECellRef)arg1 ;
-(void)setRangeContext:(unsigned char)arg1 ;
-(BOOL)isBlankForKeyboardInsertion;
-(BOOL)suppressAutomaticNamedReferenceInvalidation;
-(BOOL)hasCachedIsValidReference;
-(void)setHasCachedIsValidReference:(BOOL)arg1 ;
-(BOOL)cachedIsValidReference;
-(void)setCachedIsValidReference:(BOOL)arg1 ;
@end


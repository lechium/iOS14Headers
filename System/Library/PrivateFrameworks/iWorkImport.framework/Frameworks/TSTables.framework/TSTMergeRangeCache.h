/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:30 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSTables.framework/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TSTables/TSTables-Structs.h>
@class TSTMergeOwner, NSMutableIndexSet;

@interface TSTMergeRangeCache : NSObject {

	unordered_map<unsigned long, TSUModelCellRect, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSUModelCellRect> > >* _mergeRanges;
	TSCEBitGrid* _mergedAtCellIds;
	TSCEBitGridTransaction* _transaction;
	TSTMergeOwner* _mergeOwner;
	NSMutableIndexSet* _mergeIndexes;
	unsigned long long _count;

}

@property (nonatomic,retain) NSMutableIndexSet * mergeIndexes;               //@synthesize mergeIndexes=_mergeIndexes - In the implementation block
@property (assign,nonatomic,__weak) TSTMergeOwner * mergeOwner;              //@synthesize mergeOwner=_mergeOwner - In the implementation block
@property (assign,nonatomic) unsigned long long count;                       //@synthesize count=_count - In the implementation block
@property (nonatomic,readonly) BOOL isEmpty; 
-(void)clear;
-(void)dealloc;
-(void)setCount:(unsigned long long)arg1 ;
-(unsigned long long)count;
-(BOOL)isEmpty;
-(id)description;
-(id)mergedGridIndicesForDimension:(long long)arg1 ;
-(vector<TSUModelCellRect, std::__1::allocator<TSUModelCellRect> >*)mergeRanges;
-(TSTMergeOwner *)mergeOwner;
-(vector<TSUModelCellRect, std::__1::allocator<TSUModelCellRect> >*)mergeRangesIntersectingBaseCellRegion:(id)arg1 ;
-(TSUModelCellRect)mergedRangeForBaseCellCoord:(TSUModelCellCoord)arg1 ;
-(BOOL)hasRangeSpanningRowsForCellRange:(TSUModelCellRect)arg1 ;
-(NSMutableIndexSet *)mergeIndexes;
-(TSUModelCellRect)mergeRangeAtIndex:(unsigned long long)arg1 ;
-(void)p_updateGridForReplacingRange:(TSUModelCellRect)arg1 withRange:(TSUModelCellRect)arg2 ;
-(void)enumerateCacheItemsUsingBlock:(/*^block*/id)arg1 ;
-(void)enumerateCacheItemsIntersectingBaseCellRect:(TSUModelCellRect)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)enumerateCacheItemsIntersectingBaseCellRegion:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)initWithMergeOwner:(id)arg1 ;
-(void)openRewritingTransaction;
-(void)commitRewritingTransaction;
-(void)setMerge:(TSUModelCellRect)arg1 atIndex:(unsigned long long)arg2 ;
-(void)removeMergeRangeAtIndex:(unsigned long long)arg1 ;
-(vector<TSUModelCellRect, std::__1::allocator<TSUModelCellRect> >*)mergeRangesIntersectingBaseCellRect:(TSUModelCellRect)arg1 ;
-(BOOL)partiallyIntersectsBaseCellRect:(TSUModelCellRect)arg1 ;
-(BOOL)partiallyIntersectsBaseCellRegion:(id)arg1 ;
-(BOOL)hasRangeSpanningRowsForCellRect:(TSUModelCellRect)arg1 ;
-(TSUModelCellRect)expandBaseCellRectToCoverMergedCells:(TSUModelCellRect)arg1 ;
-(id)expandBaseCellRegionToCoverMergedCells:(id)arg1 ;
-(BOOL)hasRangeSpanningRowsForCellRegion:(id)arg1 ;
-(void)setMergeOwner:(TSTMergeOwner *)arg1 ;
-(void)setMergeIndexes:(NSMutableIndexSet *)arg1 ;
@end


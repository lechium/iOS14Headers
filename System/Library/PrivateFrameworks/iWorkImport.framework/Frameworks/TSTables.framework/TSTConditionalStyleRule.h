/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:32 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSTables.framework/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@class TSTFormulaPredicate, TSWPParagraphStyle, TSTCellStyle, TSCEFormulaObject, NSString;

@interface TSTConditionalStyleRule : NSObject <NSCopying> {

	TSTFormulaPredicate* _predicate;
	TSWPParagraphStyle* _textStyle;
	TSTCellStyle* _cellStyle;
	unsigned char mPredicateType;

}

@property (nonatomic,readonly) TSCEFormulaObject * formula; 
@property (nonatomic,copy,readonly) TSTFormulaPredicate * predicate; 
@property (nonatomic,readonly) NSString * predicateDescription; 
@property (nonatomic,readonly) unsigned char predicateType; 
@property (nonatomic,copy,readonly) TSTCellStyle * cellStyle; 
@property (nonatomic,copy,readonly) TSWPParagraphStyle * textStyle; 
+(id)conditionalStyleRuleWithRule:(id)arg1 ;
-(TSTCellStyle *)cellStyle;
-(id)copyWithZone:(NSZone*)arg1 ;
-(TSTFormulaPredicate *)predicate;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned char)predicateType;
-(id)copyWithContext:(id)arg1 ;
-(unsigned long long)hash;
-(TSWPParagraphStyle *)textStyle;
-(TSCEFormulaObject *)formula;
-(id)description;
-(id)copyByRepairingBadReferences:(TSCEFormulaRewriteContext*)arg1 ;
-(BOOL)containsUidReferences;
-(BOOL)hasBadRefWithUidInfo;
-(id)copyByClearingUids:(id)arg1 containingTableUID:(const UUIDData<TSP::UUIDData>*)arg2 ;
-(id)copyByRewritingWithContext:(TSCEFormulaRewriteContext*)arg1 rewriteBlock:(/*^block*/id)arg2 ;
-(id)copyByRemappingHostCellAgnosticOwnerUIDsWithMap:(const UUIDMap<TSP::UUIDMap>*)arg1 calcEngine:(id)arg2 ownerUID:(const UUIDData<TSP::UUIDData>*)arg3 error:(BOOL*)arg4 ;
-(id)copyByRemappingOwnerUIDsWithMap:(const UUIDMap<TSP::UUIDMap>*)arg1 calcEngine:(id)arg2 error:(BOOL*)arg3 ;
-(id)copyToGeometricFormWithRewriteContext:(TSCEFormulaRewriteContext*)arg1 ;
-(id)copyToUidFormForTableInfo:(id)arg1 inCellCoordinate:(TSUCellCoord)arg2 preserveHostCell:(BOOL)arg3 ;
-(id)copyByUpgradingToLinkedRefAtHostCellRef:(const TSCECellRef*)arg1 ;
-(void)setHostCell:(const UUIDData<TSP::UUIDData>*)arg1 hostColumnUID:(const UUIDData<TSP::UUIDData>*)arg2 hostRowUID:(const UUIDData<TSP::UUIDData>*)arg3 ;
-(void)getPrecedents:(TSCEReferenceSet*)arg1 calcEngine:(id)arg2 hostOwnerUID:(const UUIDData<TSP::UUIDData>*)arg3 hostCellID:(const TSUCellCoord*)arg4 ;
-(id)copyByRewritingWithSpec:(id)arg1 inOwner:(id)arg2 inCellCoordinate:(TSUCellCoord)arg3 ;
-(id)copyByOffsettingRelativeReferencesWithOffset:(TSUColumnRowOffset)arg1 ;
-(void)iterateFormulasWithContext:(TSCEFormulaRewriteContext*)arg1 shouldStop:(BOOL*)arg2 block:(/*^block*/id)arg3 ;
-(id)initWithPredicate:(id)arg1 cellStyle:(id)arg2 textStyle:(id)arg3 ;
-(BOOL)isEqualForInspector:(id)arg1 ;
-(id)privateCellStyle;
-(id)privateTextStyle;
-(void)setCellStyle:(id)arg1 textStyle:(id)arg2 ;
-(BOOL)evaluateFormulaAtCellID:(TSUCellCoord)arg1 withCalcEngine:(id)arg2 onSubOwnerID:(const TSCESubFormulaOwnerID*)arg3 ;
-(NSString *)predicateDescription;
-(id)copyByUpdatingHostCellRef:(const TSCECellRef*)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:32 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSTables.framework/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <TSTables/TSCETableTranslatorProtocol.h>

@class TSTTableInfo, TSTTableModel, TSCECoordMapper, TSTColumnRowUIDMap, NSArray, NSString;

@interface TSTTableTranslator : NSObject <TSCETableTranslatorProtocol> {

	TSTTableInfo* _tableInfo;
	TSTTableModel* _baseTableModel;
	TSCECoordMapper* _coordMapper;

}

@property (assign,nonatomic) TSTTableInfo * tableInfo;                                 //@synthesize tableInfo=_tableInfo - In the implementation block
@property (assign,nonatomic) BOOL wasCut; 
@property (nonatomic,readonly) TSUViewRowIndex numberOfRows; 
@property (nonatomic,readonly) TSUViewColumnIndex numberOfColumns; 
@property (nonatomic,readonly) unsigned minNumberOfHeaderColumns; 
@property (nonatomic,readonly) unsigned maxNumberOfHeaderColumns; 
@property (nonatomic,readonly) TSUViewCellRect range; 
@property (nonatomic,readonly) TSUViewCellRect bodyRange; 
@property (nonatomic,readonly) TSUViewCellRect bodyColumnRange; 
@property (nonatomic,readonly) TSUViewCellRect bodyRowRange; 
@property (nonatomic,readonly) TSUViewCellRect headerRowRange; 
@property (nonatomic,readonly) TSUViewCellRect footerRowRange; 
@property (nonatomic,readonly) TSUViewCellRect headerColumnRange; 
@property (nonatomic,readonly) TSUViewCellRect actualHeaderColumnRange; 
@property (nonatomic,readonly) TSUViewCellRect topCornerRange; 
@property (nonatomic,readonly) TSUViewCellRect bottomCornerRange; 
@property (nonatomic,readonly) TSUViewCellRect categoryColumnRange; 
@property (nonatomic,readonly) TSUViewCellRect baseColumnRange; 
@property (nonatomic,readonly) TSTTableModel * baseTableModel;                         //@synthesize baseTableModel=_baseTableModel - In the implementation block
@property (nonatomic,readonly) TSTColumnRowUIDMap * baseMap; 
@property (nonatomic,readonly) TSTColumnRowUIDMap * summaryMap; 
@property (nonatomic,readonly) TSTColumnRowUIDMap * viewMap; 
@property (nonatomic,readonly) unsigned long long numberOfPopulatedCells; 
@property (nonatomic,readonly) unsigned long long numberOfComments; 
@property (nonatomic,retain,readonly) NSArray * rowHeights; 
@property (nonatomic,retain,readonly) NSArray * columnWidths; 
@property (assign,nonatomic) TSUViewRowIndex numberOfHeaderRows; 
@property (assign,nonatomic) TSUViewColumnIndex numberOfHeaderColumns; 
@property (assign,nonatomic) TSUViewRowIndex numberOfFooterRows; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(TSUViewRowIndex)numberOfRows;
-(TSUViewCellRect)range;
-(id)documentRoot;
-(TSUViewCellRect)bodyRange;
-(void)teardown;
-(TSUViewColumnIndex)numberOfColumns;
-(id)init;
-(BOOL)wasCut;
-(NSArray *)columnWidths;
-(double)widthOfColumnAtIndex:(TSUViewColumnIndex)arg1 ;
-(NSArray *)rowHeights;
-(void)removeRowsAtIndexes:(id)arg1 ;
-(TSTTableInfo *)tableInfo;
-(TSUViewRowIndex)numberOfHeaderRows;
-(TSUViewColumnIndex)numberOfHeaderColumns;
-(unsigned long long)tableAreaForCellID:(TSUViewCellCoord)arg1 ;
-(TSUViewCellRect)bodyRowRange;
-(TSUViewRowIndex)numberOfFooterRows;
-(TSUViewCellRect)headerRowRange;
-(TSUViewCellRect)footerRowRange;
-(TSUViewCellRect)headerColumnRange;
-(TSUViewCellRect)bodyColumnRange;
-(void)setNumberOfHeaderRows:(TSUViewRowIndex)arg1 ;
-(void)setNumberOfFooterRows:(TSUViewRowIndex)arg1 ;
-(void)setNumberOfHeaderColumns:(TSUViewColumnIndex)arg1 ;
-(TSUViewCellRect)cellRangeForTableArea:(unsigned long long)arg1 ;
-(BOOL)hasMergeRanges;
-(id)initWithTableInfo:(id)arg1 ;
-(void)setTableInfo:(TSTTableInfo *)arg1 ;
-(id)mergedGridIndicesForDimension:(long long)arg1 ;
-(id)objectLocale;
-(TSTTableModel *)baseTableModel;
-(id)baseCellRegionForViewCellRegion:(id)arg1 ;
-(id)viewTractRefForBaseTractRef:(id)arg1 ;
-(TSUModelRowIndex)baseRowIndexForViewRowIndex:(TSUViewRowIndex)arg1 ;
-(id)chromeTractRefForBaseTractRef:(id)arg1 ;
-(TSUModelCellCoord)baseCellCoordForChromeCellCoord:(TSUChromeCellCoord)arg1 ;
-(TSUViewColumnIndex)viewColumnIndexForBaseColumnIndex:(TSUModelColumnIndex)arg1 ;
-(TSUViewColumnIndex)viewColumnIndexForColumnUID:(const UUIDData<TSP::UUIDData>*)arg1 ;
-(TSUModelColumnIndex)baseColumnIndexForViewColumnIndex:(TSUViewColumnIndex)arg1 ;
-(UUIDData<TSP::UUIDData>)columnUIDForViewColumnIndex:(const TSUViewColumnIndex*)arg1 ;
-(id)viewCellRegionForBaseCellRegion:(id)arg1 ;
-(UUIDData<TSP::UUIDData>)rowUIDForViewRowIndex:(const TSUViewRowIndex*)arg1 ;
-(TSUViewCellCoord)viewCellCoordForCellUID:(const TSTCellUID*)arg1 ;
-(id)baseTractRefForViewTractRef:(id)arg1 ;
-(unsigned long long)numberOfComments;
-(id)viewCellRegionForBaseCellRect:(TSUModelCellRect)arg1 ;
-(int)setCellsWithCellMap:(id)arg1 ignoreFormulas:(BOOL)arg2 skipDirtyingNonFormulaCells:(BOOL)arg3 ;
-(TSUViewRowIndex)viewRowIndexForChromeRowIndex:(TSUChromeRowIndex)arg1 ;
-(TSUViewRowIndex)viewRowIndexForBaseRowIndex:(TSUModelRowIndex)arg1 ;
-(TSUChromeRowIndex)chromeRowIndexForViewRowIndex:(TSUViewRowIndex)arg1 ;
-(id)viewColumnIndexesForBaseColumnIndexes:(id)arg1 ;
-(TSUModelColumnIndex)baseColumnIndexForChromeColumnIndex:(TSUChromeColumnIndex)arg1 ;
-(TSUModelRowIndex)baseRowIndexForChromeRowIndex:(TSUChromeRowIndex)arg1 ;
-(TSUChromeColumnIndex)chromeColumnIndexForBaseColumnIndex:(TSUModelColumnIndex)arg1 ;
-(TSUChromeRowIndex)chromeRowIndexForBaseRowIndex:(TSUModelRowIndex)arg1 ;
-(TSUChromeColumnIndex)chromeColumnIndexForViewColumnIndex:(TSUViewColumnIndex)arg1 ;
-(TSUViewColumnIndex)viewColumnIndexForChromeColumnIndex:(TSUChromeColumnIndex)arg1 ;
-(TSUModelCellCoord)baseCellCoordForViewCellCoord:(TSUViewCellCoord)arg1 ;
-(TSUChromeCellCoord)chromeCellCoordForBaseCellCoord:(TSUModelCellCoord)arg1 ;
-(TSUChromeCellCoord)chromeCellCoordForViewCellCoord:(TSUViewCellCoord)arg1 ;
-(TSUViewCellCoord)viewCellCoordForBaseCellCoord:(TSUModelCellCoord)arg1 ;
-(TSUViewCellCoord)viewCellCoordForChromeCellCoord:(TSUChromeCellCoord)arg1 ;
-(id)viewTractRefForChromeTractRef:(id)arg1 ;
-(id)baseColumnIndexesForViewColumnIndexes:(id)arg1 ;
-(id)baseRowIndexesForViewRowIndexes:(id)arg1 ;
-(id)chromeTractRefForViewTractRef:(id)arg1 ;
-(id)chromeColumnIndexesForViewColumnIndexes:(id)arg1 ;
-(id)chromeRowIndexesForViewRowIndexes:(id)arg1 ;
-(id)viewRowIndexesForBaseRowIndexes:(id)arg1 ;
-(id)viewColumnIndexesForChromeColumnIndexes:(id)arg1 ;
-(id)viewRowIndexesForChromeRowIndexes:(id)arg1 ;
-(RefTypeHolder<TSCECellRef, 0>)baseCellRefForViewCellRef:(const RefTypeHolder<TSCECellRef, 1>*)arg1 ;
-(RefTypeHolder<TSCECellRef, 2>)chromeCellRefForBaseCellRef:(const RefTypeHolder<TSCECellRef, 0>*)arg1 ;
-(RefTypeHolder<TSCECellRef, 2>)chromeCellRefForViewCellRef:(const RefTypeHolder<TSCECellRef, 1>*)arg1 ;
-(RefTypeHolder<TSCECellRef, 1>)viewCellRefForBaseCellRef:(const RefTypeHolder<TSCECellRef, 0>*)arg1 ;
-(RefTypeHolder<TSCECellRef, 1>)viewCellRefForChromeCellRef:(const RefTypeHolder<TSCECellRef, 2>*)arg1 ;
-(RefTypeHolder<TSCERangeRef, 2>)chromeRangeRefForViewRangeRef:(const RefTypeHolder<TSCERangeRef, 1>*)arg1 ;
-(RefTypeHolder<TSCERangeRef, 1>)viewRangeRefForChromeRangeRef:(const RefTypeHolder<TSCERangeRef, 2>*)arg1 ;
-(id)baseTractRefForChromeTractRef:(id)arg1 ;
-(id)baseShuffleMapForViewShuffleMap:(id)arg1 ;
-(UUIDData<TSP::UUIDData>)rowUIDForBaseRowIndex:(const TSUModelRowIndex*)arg1 ;
-(TSUViewCellRect)expandCellRangeToCoverMergedCells:(TSUViewCellRect)arg1 ;
-(TSUViewCellCoord)mergeOriginForCellID:(TSUViewCellCoord)arg1 ;
-(TSUViewCellRect)mergeRangeAtCellID:(TSUViewCellCoord)arg1 ;
-(int)getCell:(id)arg1 atCellID:(TSUViewCellCoord)arg2 ;
-(vector<TSUViewCellRect, std::__1::allocator<TSUViewCellRect> >*)mergeRangesIntersectingRange:(TSUViewCellRect)arg1 ;
-(UUIDData<TSP::UUIDData>)columnUIDForBaseColumnIndex:(const TSUModelColumnIndex*)arg1 ;
-(double)heightOfRowAtIndex:(TSUViewRowIndex)arg1 isDefault:(out BOOL*)arg2 ;
-(void)setHeight:(double)arg1 ofRowAtIndex:(TSUViewRowIndex)arg2 ;
-(double)widthOfColumnAtIndex:(TSUViewColumnIndex)arg1 isDefault:(out BOOL*)arg2 ;
-(void)setWidth:(double)arg1 ofColumnAtIndex:(TSUViewColumnIndex)arg2 ;
-(id)coordinateMapper;
-(unsigned long long)numberOfPopulatedCells;
-(id)defaultCellStyleForTableStyleArea:(unsigned long long)arg1 ;
-(id)defaultTextStyleForTableStyleArea:(unsigned long long)arg1 ;
-(TSUViewCellRect)actualHeaderColumnRange;
-(TSUViewCellRect)topCornerRange;
-(TSUViewCellRect)bottomCornerRange;
-(int)getDefaultCell:(out id)arg1 forTableStyleArea:(unsigned long long)arg2 ;
-(BOOL)cellExistsAtCellID:(TSUViewCellCoord)arg1 ;
-(BOOL)hasFormulaAtCellID:(TSUViewCellCoord)arg1 ;
-(id)formulaAtCellID:(TSUViewCellCoord)arg1 ;
-(id)cellStyleOfRowAtIndex:(TSUViewRowIndex)arg1 isDefault:(out BOOL*)arg2 ;
-(id)cellStyleOfColumnAtIndex:(TSUViewColumnIndex)arg1 isDefault:(out BOOL*)arg2 ;
-(id)textStyleOfRowAtIndex:(TSUViewRowIndex)arg1 isDefault:(out BOOL*)arg2 ;
-(id)textStyleOfColumnAtIndex:(TSUViewColumnIndex)arg1 isDefault:(out BOOL*)arg2 ;
-(id)conditionalStyleSetAtCellID:(TSUViewCellCoord)arg1 ;
-(double)heightOfRowAtIndex:(TSUViewRowIndex)arg1 ;
-(double)computeDefaultFontHeightForTableStyleArea:(unsigned long long)arg1 ;
-(void)removeColumnsAtIndexes:(id)arg1 ;
-(void)removeRowsAtIndex:(TSUViewRowIndex)arg1 count:(TSUViewRowIndex)arg2 ;
-(void)removeColumnsAtIndex:(TSUViewColumnIndex)arg1 count:(TSUViewColumnIndex)arg2 ;
-(void)swapRowAtIndex:(TSUViewRowIndex)arg1 withRowAtIndex:(TSUViewRowIndex)arg2 ;
-(void)addReceiverToGroupBy:(id)arg1 ;
-(void)setWasCut:(BOOL)arg1 ;
-(unsigned long long)tableAreaForRow:(TSUViewRowIndex)arg1 ;
-(unsigned long long)tableAreaForColumn:(TSUViewColumnIndex)arg1 ;
-(unsigned long long)tableStyleAreaForRow:(TSUViewRowIndex)arg1 ;
-(int)insertColumnsAtIndex:(TSUViewColumnIndex)arg1 uids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 metadatas:(id)arg3 tableArea:(unsigned long long)arg4 ;
-(int)insertRowsAtIndex:(TSUViewRowIndex)arg1 uids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 metadatas:(id)arg3 tableArea:(unsigned long long)arg4 unsetFilterHidingAction:(BOOL)arg5 ;
-(id)expandCellRegionToCoverMergedCells:(id)arg1 ;
-(id)defaultCellStyleForCellID:(TSUViewCellCoord)arg1 ;
-(id)defaultTextStyleForCellID:(TSUViewCellCoord)arg1 ;
-(int)setCell:(id)arg1 atCellUID:(const TSTCellUID*)arg2 ignoreFormula:(BOOL)arg3 clearImportWarnings:(BOOL)arg4 ;
-(unsigned)minNumberOfHeaderColumns;
-(unsigned)maxNumberOfHeaderColumns;
-(id)cellStyleForCellWithEmptyStyleAtCellID:(TSUViewCellCoord)arg1 isDefault:(out BOOL*)arg2 ;
-(id)textStyleForCellWithEmptyStyleAtCellID:(TSUViewCellCoord)arg1 isDefault:(out BOOL*)arg2 ;
-(void)removeAnnotationsFromRowsAtIndexes:(id)arg1 ;
-(void)removeAnnotationsFromColumnsAtIndexes:(id)arg1 ;
-(BOOL)hasCommentAtCellID:(TSUViewCellCoord)arg1 ;
-(int)setCommentStorage:(id)arg1 atCellUID:(const TSTCellUID*)arg2 ;
-(int)removeCommentStorageAtCellUID:(const TSTCellUID*)arg1 ;
-(void)postCommentNotificationForStorage:(id)arg1 atViewCellCoord:(TSUViewCellCoord)arg2 notificationKey:(id)arg3 ;
-(id)commentHostingAtCellID:(TSUViewCellCoord)arg1 forCommentStorage:(id)arg2 ;
-(id)commentHostingAtCellID:(TSUViewCellCoord)arg1 ;
-(id)textStyleAtCellID:(TSUViewCellCoord)arg1 isDefault:(out BOOL*)arg2 ;
-(id)cellStyleAtCellID:(TSUViewCellCoord)arg1 isDefault:(out BOOL*)arg2 ;
-(unsigned long long)tableAreaForDroppingRowAtIndex:(TSUViewRowIndex)arg1 ;
-(unsigned long long)tableStyleAreaForCellUID:(const TSTCellUID*)arg1 ;
-(unsigned long long)tableStyleAreaForCellID:(TSUViewCellCoord)arg1 ;
-(int)getDefaultCell:(out id)arg1 forCellID:(TSUViewCellCoord)arg2 ;
-(int)getCell:(id)arg1 atCellID:(TSUViewCellCoord)arg2 suppressCellBorder:(BOOL)arg3 ;
-(int)setCell:(id)arg1 atCellUID:(const TSTCellUID*)arg2 ignoreFormula:(BOOL)arg3 clearImportWarnings:(BOOL)arg4 formulaReplacer:(id)arg5 ;
-(int)getCell:(id)arg1 atCellUID:(const TSTCellUID*)arg2 ;
-(id)mergeActionForRegion:(id)arg1 ;
-(int)cellValueTypeAtCellID:(TSUViewCellCoord)arg1 ;
-(int)cellValueTypeAtCellUID:(const TSTCellUID*)arg1 ;
-(int)setCellStyle:(id)arg1 ofRowAtUID:(const UUIDData<TSP::UUIDData>*)arg2 ;
-(int)setTextStyle:(id)arg1 ofRowAtUID:(const UUIDData<TSP::UUIDData>*)arg2 ;
-(int)setCellStyle:(id)arg1 ofColumnAtUID:(const UUIDData<TSP::UUIDData>*)arg2 ;
-(int)setTextStyle:(id)arg1 ofColumnAtUID:(const UUIDData<TSP::UUIDData>*)arg2 ;
-(BOOL)cellStyle:(id)arg1 isEqualToDefaultCellStyleForCellID:(TSUViewCellCoord)arg2 ;
-(BOOL)textStyle:(id)arg1 isEqualToDefaultTextStyleForCellID:(TSUViewCellCoord)arg2 ;
-(id)cellStyleAtCellUID:(const TSTCellUID*)arg1 isDefault:(out BOOL*)arg2 ;
-(id)textStyleAtCellUID:(const TSTCellUID*)arg1 isDefault:(out BOOL*)arg2 ;
-(int)getValue:(out TSCEValue*)arg1 atCellID:(TSUViewCellCoord)arg2 fetchRichTextAttributesIfPlainText:(BOOL)arg3 ;
-(id)translatedCellRangeName:(const RefTypeHolder<TSCERangeRef, 1>*)arg1 usedSymbolicName:(out BOOL*)arg2 ;
-(TSUViewCellRect)bodyRangeForLowestLevelGroupEnclosingCellAtCellID:(TSUCellCoord)arg1 ;
-(TSUViewCellRect)categoryColumnRange;
-(TSUViewCellRect)baseColumnRange;
-(void)moveRowRange:(NSRange)arg1 toRowIndex:(TSUViewRowIndex)arg2 ;
-(void)moveColumnRange:(NSRange)arg1 toColumnIndex:(TSUViewColumnIndex)arg2 ;
-(id)stringAtCellID:(TSUViewCellCoord)arg1 optionalCell:(id)arg2 ;
-(id)characterFillAtCellID:(TSUViewCellCoord)arg1 optionalCell:(id)arg2 ;
-(BOOL)mergeCellRange:(TSUViewCellRect)arg1 ;
-(BOOL)unmergeCellRange:(TSUViewCellRect)arg1 ;
-(BOOL)mergeRangesPartiallyIntersectCellRange:(TSUViewCellRect)arg1 ;
-(BOOL)mergeRangesPartiallyIntersectCellRegion:(id)arg1 ;
-(BOOL)hasMergeRangeSpanningRowsForCellRange:(TSUViewCellRect)arg1 ;
-(BOOL)hasMergeRangesIntersectingCellRegion:(id)arg1 ;
-(id)regionForValueOrCommentCellsInRange:(TSUViewCellRect)arg1 ;
-(BOOL)hasRangeSpanningRowsForCellRange:(TSUViewCellRect)arg1 ;
-(id)shrinkReturningInverseForRegion:(id)arg1 ;
-(id)removeReturningInverseForRegion:(id)arg1 ;
-(id)mergeActionForRegion:(id)arg1 nonOriginPartialsOnly:(BOOL)arg2 ;
-(void)enumerateMergesIntersectingCellRegion:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(vector<TSUViewCellRect, std::__1::allocator<TSUViewCellRect> >*)mergeRangesIntersectingCellRegion:(id)arg1 ;
-(vector<TSUViewCellRect, std::__1::allocator<TSUViewCellRect> >*)mergeRangesAndCrumbsIntersectingRange:(TSUViewCellRect)arg1 ;
-(BOOL)isValidMergeRange:(TSUViewCellRect)arg1 ;
-(id)cellValueFromCell:(id)arg1 atCellID:(TSUViewCellCoord)arg2 ;
-(TSUViewCellCoord)cellIDForCellContainingRichTextStorage:(id)arg1 ;
-(id)summaryRowIndexes;
-(id)labelRowIndexes;
-(unsigned char)categoryGroupLevelAtSummaryRow:(TSUViewRowIndex)arg1 ;
-(unsigned char)categoryGroupLevelAtLabelRow:(TSUViewRowIndex)arg1 ;
-(int)getDefaultCell:(out id)arg1 forCellUID:(const TSTCellUID*)arg2 ;
-(int)getCell:(id)arg1 atCellUID:(const TSTCellUID*)arg2 suppressCellBorder:(BOOL)arg3 ;
-(BOOL)checkMapsAndAssert:(BOOL)arg1 ;
-(void)resetViewMap;
-(id)populatedCategoryGroupLevelsInColumn:(TSUViewColumnIndex)arg1 ;
-(void)didMakeGroupingChangesInRowUIDs:(id)arg1 ;
-(Class)iteratorClass;
-(TSTColumnRowUIDMap *)viewMap;
-(id)viewColumnIndexesForUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(id)viewRowIndexesForUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(TSUModelRowIndex)baseRowIndexForRowUID:(const UUIDData<TSP::UUIDData>*)arg1 ;
-(TSUViewRowIndex)viewRowIndexForRowUID:(const UUIDData<TSP::UUIDData>*)arg1 ;
-(TSUModelColumnIndex)baseColumnIndexForColumnUID:(const UUIDData<TSP::UUIDData>*)arg1 ;
-(id)baseRowIndexesForUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(BOOL)areMapsStale;
-(id)mutableBaseRowIndexesForUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(id)mutableBaseColumnIndexesForUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(TSTColumnRowUIDMap *)summaryMap;
-(TSTColumnRowUIDMap *)baseMap;
-(TSUViewCellCoord)viewCellCoordForSummaryCellCoord:(TSUModelCellCoord)arg1 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)columnUIDsForBaseColumnIndexes:(id)arg1 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)rowUIDsForBaseRowIndexes:(id)arg1 ;
-(id)baseColumnIndexesForUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(id)viewColumnGridIndexesForBaseColumnGridIndexes:(id)arg1 ;
-(id)metadataForRowIndex:(TSUViewRowIndex)arg1 ;
-(id)metadataForColumnIndex:(TSUViewColumnIndex)arg1 ;
-(TSUModelCellCoord)baseCellCoordForCellUID:(const TSTCellUID*)arg1 ;
-(TSTCellUID)cellUIDforBaseCellCoord:(const TSUModelCellCoord*)arg1 ;
-(TSTCellUID)cellUIDForSummaryCellCoord:(const TSUModelCellCoord*)arg1 ;
-(id)baseCellRegionForUIDRange:(const UUIDRect<TSP::UUIDRect>*)arg1 ;
-(id)baseCellRegionForViewCellRect:(TSUViewCellRect)arg1 ;
-(TSUModelColumnIndex)summaryColumnIndexForViewColumnIndex:(TSUViewColumnIndex)arg1 ;
-(id)cellAtGroupLevel:(unsigned char)arg1 columnUID:(const UUIDData<TSP::UUIDData>*)arg2 ;
-(void)forceGroupingChangeReset;
-(void)resetViewMapAndNotify;
@end


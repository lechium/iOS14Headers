/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:21 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSCalculationEngine.framework/TSCalculationEngine
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSCalculationEngine/TSCalculationEngine-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@interface TSCEUndoTract : NSObject <NSCopying> {

	vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >* _columnUids;
	vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >* _rowUids;
	unsigned char _purpose;
	BOOL _isRangeRef;
	BOOL _preserveRectangularRange;

}

@property (assign,nonatomic) BOOL isRangeRef;                                      //@synthesize isRangeRef=_isRangeRef - In the implementation block
@property (assign,nonatomic) BOOL preserveRectangularRange;                        //@synthesize preserveRectangularRange=_preserveRectangularRange - In the implementation block
@property (assign,nonatomic) unsigned char purpose;                                //@synthesize purpose=_purpose - In the implementation block
@property (readonly) vector<TSU::UUIDData<TSP::UUIDData>* columnUids;              //@synthesize columnUids=_columnUids - In the implementation block
@property (readonly) vector<TSU::UUIDData<TSP::UUIDData>* rowUids;                 //@synthesize rowUids=_rowUids - In the implementation block
+(void)saveToArchive:(ASTNodeArrayArchive_ASTUidTract*)arg1 columnUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 rowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg3 purpose:(unsigned char)arg4 isRangeRef:(BOOL)arg5 preserveRectangularRange:(BOOL)arg6 ;
+(BOOL)p_remapUidVector:(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 usingUidMap:(const UUIDMap<TSP::UUIDMap>*)arg2 clearIfMissing:(BOOL)arg3 ;
+(id)stringForPurpose:(unsigned char)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)initWithArchive:(const ASTNodeArrayArchive_ASTUidTract*)arg1 ;
-(void)saveToArchive:(ASTNodeArrayArchive_ASTUidTract*)arg1 ;
-(void)setPurpose:(unsigned char)arg1 ;
-(unsigned char)purpose;
-(vector<TSU::UUIDData<TSP::UUIDData>*)columnUids;
-(vector<TSU::UUIDData<TSP::UUIDData>*)rowUids;
-(void)setIsRangeRef:(BOOL)arg1 ;
-(void)setPreserveRectangularRange:(BOOL)arg1 ;
-(BOOL)isRangeRef;
-(BOOL)preserveRectangularRange;
-(id)initWithColumnUid:(const UUIDData<TSP::UUIDData>*)arg1 rowUid:(const UUIDData<TSP::UUIDData>*)arg2 purpose:(unsigned char)arg3 ;
-(id)initWithColumnUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 rowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 purpose:(unsigned char)arg3 ;
-(BOOL)remapUsingUidMap:(const UUIDMap<TSP::UUIDMap>*)arg1 ;
-(BOOL)remapUsingColumnUidMap:(const UUIDMap<TSP::UUIDMap>*)arg1 rowUidMap:(const UUIDMap<TSP::UUIDMap>*)arg2 clearIfMissing:(BOOL)arg3 ;
@end


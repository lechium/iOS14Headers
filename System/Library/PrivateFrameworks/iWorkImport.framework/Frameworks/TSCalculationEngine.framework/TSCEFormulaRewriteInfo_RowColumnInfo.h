/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:21 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSCalculationEngine.framework/TSCalculationEngine
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TSCalculationEngine/TSCalculationEngine-Structs.h>
@class TSCEFormulaRewrite_Uids, NSArray, TSUMutableUUIDSet, NSIndexSet, TSUUUIDSet;

@interface TSCEFormulaRewriteInfo_RowColumnInfo : NSObject {

	UUIDData<TSP::UUIDData> _tableUID;
	UUIDData<TSP::UUIDData> _conditionalStyleOwnerUID;
	UUIDData<TSP::UUIDData> _groupByUID;
	TSCEFormulaRewrite_Uids* _rowOrColumnUids;
	vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >* _rowOrColumnUuids;
	BOOL _isRows;
	NSArray* _rangeEntries;
	TSCERangeCoordinate _tableRange;
	TSCEFormulaRewriteInfo_RowColumnInfo* _auxRowColumnInfo;
	TSUMutableUUIDSet* _expandedRowColumnUuids;
	UUIDData<TSP::UUIDData> _insertAtUid;
	UUIDData<TSP::UUIDData> _insertOppositeUid;
	BOOL _useWholeTableForInsertionDependencies;

}

@property (nonatomic,readonly) const UUIDData<TSP::UUIDData>* tableUID;                                  //@synthesize tableUID=_tableUID - In the implementation block
@property (nonatomic,readonly) const UUIDData<TSP::UUIDData>* conditionalStyleOwnerUID;                  //@synthesize conditionalStyleOwnerUID=_conditionalStyleOwnerUID - In the implementation block
@property (nonatomic,readonly) const UUIDData<TSP::UUIDData>* groupByUID;                                //@synthesize groupByUID=_groupByUID - In the implementation block
@property (nonatomic,readonly) BOOL isRows;                                                              //@synthesize isRows=_isRows - In the implementation block
@property (nonatomic,readonly) BOOL isColumns; 
@property (nonatomic,retain,readonly) TSCEFormulaRewrite_Uids * rowOrColumnUids;                         //@synthesize rowOrColumnUids=_rowOrColumnUids - In the implementation block
@property (nonatomic,readonly) const vector<TSU::UUIDData<TSP::UUIDData>* rowOrColumnUuids;              //@synthesize rowOrColumnUuids=_rowOrColumnUuids - In the implementation block
@property (nonatomic,retain,readonly) NSIndexSet * rowOrColumnIndices; 
@property (nonatomic,retain,readonly) TSUUUIDSet * expandedRowColumnUuids;                               //@synthesize expandedRowColumnUuids=_expandedRowColumnUuids - In the implementation block
@property (nonatomic,retain) TSCEFormulaRewriteInfo_RowColumnInfo * auxRowColumnInfo;                    //@synthesize auxRowColumnInfo=_auxRowColumnInfo - In the implementation block
@property (assign,nonatomic) BOOL useWholeTableForInsertionDependencies;                                 //@synthesize useWholeTableForInsertionDependencies=_useWholeTableForInsertionDependencies - In the implementation block
@property (assign,nonatomic) UUIDData<TSP::UUIDData> insertAtUid;                                        //@synthesize insertAtUid=_insertAtUid - In the implementation block
@property (assign,nonatomic) UUIDData<TSP::UUIDData> insertOppositeUid;                                  //@synthesize insertOppositeUid=_insertOppositeUid - In the implementation block
-(BOOL)isRows;
-(id)description;
-(TSCERangeCoordinate)tableRange;
-(BOOL)isColumns;
-(void)saveToMessage:(ColumnOrRowUuidsInfoArchive*)arg1 ;
-(const UUIDData<TSP::UUIDData>*)tableUID;
-(vector<TSCERangeCoordinate, std::__1::allocator<TSCERangeCoordinate> >*)coordRangesForInsertRemove;
-(BOOL)isForTable:(const UUIDData<TSP::UUIDData>*)arg1 ;
-(TSCECellRef)originalCellRefForRewriteType:(int)arg1 updatedCellRef:(const TSCECellRef*)arg2 ;
-(unsigned)offsetForRowIndex:(unsigned)arg1 ;
-(TSCECellRef)updatedCellRefForRewriteType:(int)arg1 originalCellRef:(const TSCECellRef*)arg2 ;
-(TSCEFormulaRewriteInfo_RowColumnInfo *)auxRowColumnInfo;
-(TSCEFormulaRewrite_Uids *)rowOrColumnUids;
-(UUIDData<TSP::UUIDData>)insertAtUid;
-(UUIDData<TSP::UUIDData>)insertOppositeUid;
-(id)initFromMessage:(const ColumnOrRowUuidsInfoArchive*)arg1 ;
-(const UUIDData<TSP::UUIDData>*)conditionalStyleOwnerUID;
-(BOOL)indexIsAffected:(unsigned)arg1 ;
-(UUIDData<TSP::UUIDData>)uuidForIndex:(unsigned)arg1 ;
-(NSIndexSet *)rowOrColumnIndices;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)uuidsForIndexes:(id)arg1 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)uuidsInRange:(NSRange)arg1 ;
-(const vector<TSU::UUIDData<TSP::UUIDData>*)rowOrColumnUuids;
-(const UUIDData<TSP::UUIDData>*)groupByUID;
-(TSUUUIDSet *)expandedRowColumnUuids;
-(TSCERangeCoordinate)affectedRangeForRemoveRows;
-(TSCERangeCoordinate)affectedRangeForInsertRows;
-(TSCERangeCoordinate)affectedRangeForMoveRows;
-(void)unloadIndexes;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)orderedUuidsForRange:(NSRange)arg1 inTable:(id)arg2 areRows:(BOOL)arg3 shuffleMap:(id)arg4 ;
-(void)setInsertAtUid:(UUIDData<TSP::UUIDData>)arg1 ;
-(void)setInsertOppositeUid:(UUIDData<TSP::UUIDData>)arg1 ;
-(id)initWithFormulaOwnerUID:(const UUIDData<TSP::UUIDData>*)arg1 uuids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 areRows:(BOOL)arg3 ;
-(unsigned)offsetForUpdatedRowIndex:(unsigned)arg1 isRemoveRows:(BOOL)arg2 ;
-(id)initWithTableUID:(const UUIDData<TSP::UUIDData>*)arg1 condStyleOwnerUID:(const UUIDData<TSP::UUIDData>*)arg2 groupByUID:(const UUIDData<TSP::UUIDData>*)arg3 uuids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg4 atIndexes:(const vector<unsigned int, std::__1::allocator<unsigned int> >*)arg5 areRows:(BOOL)arg6 ;
-(void)loadIndexesForTable:(id)arg1 uidResolver:(id)arg2 forRemoveRows:(BOOL)arg3 shuffleMap:(id)arg4 ;
-(void)createAuxRowColumnInfoForMove;
-(unsigned short)columnIndexForUuid:(const UUIDData<TSP::UUIDData>*)arg1 ;
-(unsigned)rowIndexForUuid:(const UUIDData<TSP::UUIDData>*)arg1 ;
-(void)setAuxRowColumnInfo:(TSCEFormulaRewriteInfo_RowColumnInfo *)arg1 ;
-(BOOL)useWholeTableForInsertionDependencies;
-(void)setUseWholeTableForInsertionDependencies:(BOOL)arg1 ;
@end


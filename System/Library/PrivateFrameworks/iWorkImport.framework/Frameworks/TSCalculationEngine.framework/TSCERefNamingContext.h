/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:21 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSCalculationEngine.framework/TSCalculationEngine
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSCalculationEngine/TSCalculationEngine-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSString;

@interface TSCERefNamingContext : NSObject <NSCopying> {

	BOOL _suppressIdenticalEndReference;
	BOOL _useSymbolicNames;
	BOOL _allowTableName;
	BOOL _allowSpanningColumnReferenceBodyQualifier;
	BOOL _showGeometricAsBase;
	BOOL _quoteComponents;
	BOOL _forceEscaping;
	BOOL _forceTableName;
	BOOL _forceSheetName;
	BOOL _forFormulaPlainText;
	BOOL _usedSymbolicName;
	NSString* _contextSheetName;
	UUIDData<TSP::UUIDData> _hostTableUID;

}

@property (nonatomic,retain) NSString * contextSheetName;                                 //@synthesize contextSheetName=_contextSheetName - In the implementation block
@property (assign,nonatomic) UUIDData<TSP::UUIDData> hostTableUID;                        //@synthesize hostTableUID=_hostTableUID - In the implementation block
@property (assign,nonatomic) BOOL suppressIdenticalEndReference;                          //@synthesize suppressIdenticalEndReference=_suppressIdenticalEndReference - In the implementation block
@property (assign,nonatomic) BOOL useSymbolicNames;                                       //@synthesize useSymbolicNames=_useSymbolicNames - In the implementation block
@property (assign,nonatomic) BOOL allowTableName;                                         //@synthesize allowTableName=_allowTableName - In the implementation block
@property (assign,nonatomic) BOOL allowSpanningColumnReferenceBodyQualifier;              //@synthesize allowSpanningColumnReferenceBodyQualifier=_allowSpanningColumnReferenceBodyQualifier - In the implementation block
@property (assign,nonatomic) BOOL showGeometricAsBase;                                    //@synthesize showGeometricAsBase=_showGeometricAsBase - In the implementation block
@property (assign,nonatomic) BOOL quoteComponents;                                        //@synthesize quoteComponents=_quoteComponents - In the implementation block
@property (assign,nonatomic) BOOL forceEscaping;                                          //@synthesize forceEscaping=_forceEscaping - In the implementation block
@property (assign,nonatomic) BOOL forceTableName;                                         //@synthesize forceTableName=_forceTableName - In the implementation block
@property (assign,nonatomic) BOOL forceSheetName;                                         //@synthesize forceSheetName=_forceSheetName - In the implementation block
@property (assign,nonatomic) BOOL forFormulaPlainText;                                    //@synthesize forFormulaPlainText=_forFormulaPlainText - In the implementation block
@property (assign,nonatomic) BOOL usedSymbolicName;                                       //@synthesize usedSymbolicName=_usedSymbolicName - In the implementation block
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)reset;
-(id)init;
-(void)setHostTableUID:(UUIDData<TSP::UUIDData>)arg1 ;
-(void)setContextSheetName:(NSString *)arg1 ;
-(void)setAllowTableName:(BOOL)arg1 ;
-(void)setShowGeometricAsBase:(BOOL)arg1 ;
-(void)setQuoteComponents:(BOOL)arg1 ;
-(void)setForceSheetName:(BOOL)arg1 ;
-(void)setForceTableName:(BOOL)arg1 ;
-(void)setSuppressIdenticalEndReference:(BOOL)arg1 ;
-(void)setAllowSpanningColumnReferenceBodyQualifier:(BOOL)arg1 ;
-(void)setUseSymbolicNames:(BOOL)arg1 ;
-(NSString *)contextSheetName;
-(UUIDData<TSP::UUIDData>)hostTableUID;
-(BOOL)suppressIdenticalEndReference;
-(BOOL)useSymbolicNames;
-(BOOL)allowTableName;
-(BOOL)allowSpanningColumnReferenceBodyQualifier;
-(BOOL)showGeometricAsBase;
-(BOOL)quoteComponents;
-(BOOL)forceEscaping;
-(void)setForceEscaping:(BOOL)arg1 ;
-(BOOL)forceTableName;
-(BOOL)forceSheetName;
-(BOOL)forFormulaPlainText;
-(void)setForFormulaPlainText:(BOOL)arg1 ;
-(BOOL)usedSymbolicName;
-(void)setUsedSymbolicName:(BOOL)arg1 ;
@end


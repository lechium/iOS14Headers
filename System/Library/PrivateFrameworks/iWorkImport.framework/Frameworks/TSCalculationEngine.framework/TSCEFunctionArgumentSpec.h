/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:21 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSCalculationEngine.framework/TSCalculationEngine
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TSCalculationEngine/TSCalculationEngine-Structs.h>
@interface TSCEFunctionArgumentSpec : NSObject {

	TSCEFunctionArgSpec* _argSpec;

}
+(TSCEFunctionArgSpec*)argSpecWithType:(int)arg1 accessorMode:(int)arg2 rangeContext:(unsigned char)arg3 ;
+(TSCEFunctionArgSpec*)argSpecWithType:(int)arg1 accessorMode:(int)arg2 rangeContext:(unsigned char)arg3 minValue:(double)arg4 minInclusive:(BOOL)arg5 maxValue:(double)arg6 maxInclusive:(BOOL)arg7 disallowedTypes:(const unordered_set<TSCEArgumentType, std::__1::hash<TSCEArgumentType>, std::__1::equal_to<TSCEArgumentType>, std::__1::allocator<TSCEArgumentType> >*)arg8 disallowDuration:(BOOL)arg9 disallowCurrency:(BOOL)arg10 ;
+(TSCEFunctionArgSpec*)argSpecWithType:(int)arg1 accessorMode:(int)arg2 rangeContext:(unsigned char)arg3 argumentContext:(int)arg4 minValue:(double)arg5 minInclusive:(BOOL)arg6 maxValue:(double)arg7 maxInclusive:(BOOL)arg8 isInteger:(BOOL)arg9 disallowedTypes:(const unordered_set<TSCEArgumentType, std::__1::hash<TSCEArgumentType>, std::__1::equal_to<TSCEArgumentType>, std::__1::allocator<TSCEArgumentType> >*)arg10 disallowDuration:(BOOL)arg11 disallowCurrency:(BOOL)arg12 modeValues:(const vector<TSCEValue, std::__1::allocator<TSCEValue> >*)arg13 defaultModeIndex:(short)arg14 referenceForGeometryOnly:(BOOL)arg15 forceArrayMode:(BOOL)arg16 ;
+(TSCEFunctionArgSpec*)argSpecWithType:(int)arg1 accessorMode:(int)arg2 rangeContext:(unsigned char)arg3 disallowedTypes:(const unordered_set<TSCEArgumentType, std::__1::hash<TSCEArgumentType>, std::__1::equal_to<TSCEArgumentType>, std::__1::allocator<TSCEArgumentType> >*)arg4 disallowDuration:(BOOL)arg5 disallowCurrency:(BOOL)arg6 ;
+(TSCEFunctionArgSpec*)argSpecWithType:(int)arg1 accessorMode:(int)arg2 rangeContext:(unsigned char)arg3 modeValues:(const vector<TSCEValue, std::__1::allocator<TSCEValue> >*)arg4 defaultModeIndex:(short)arg5 ;
+(TSCEFunctionArgSpec*)argSpecWithType:(int)arg1 accessorMode:(int)arg2 rangeContext:(unsigned char)arg3 argumentContext:(int)arg4 ;
@end


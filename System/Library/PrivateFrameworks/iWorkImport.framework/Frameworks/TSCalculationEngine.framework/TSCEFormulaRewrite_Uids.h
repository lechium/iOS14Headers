/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:31:21 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSCalculationEngine.framework/TSCalculationEngine
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TSCalculationEngine/TSCalculationEngine-Structs.h>
@class NSIndexSet;

@interface TSCEFormulaRewrite_Uids : NSObject {

	vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >* _uids;
	NSIndexSet* _indexes;
	unordered_map<TSU::UUIDData<TSP::UUIDData>, unsigned int, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned int> > >* _indexesForUids;
	unordered_map<unsigned int, TSU::UUIDData<TSP::UUIDData>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSU::UUIDData<TSP::UUIDData> > > >* _uidsForIndexes;
	vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >* _viewOrderUids;

}

@property (readonly) const vector<TSU::UUIDData<TSP::UUIDData>* uids;                       //@synthesize uids=_uids - In the implementation block
@property (readonly) const vector<TSU::UUIDData<TSP::UUIDData>* viewOrderUids;              //@synthesize viewOrderUids=_viewOrderUids - In the implementation block
@property (readonly) NSIndexSet * indexes;                                                  //@synthesize indexes=_indexes - In the implementation block
-(NSIndexSet *)indexes;
-(const vector<TSU::UUIDData<TSP::UUIDData>*)uids;
-(BOOL)containsIndex:(unsigned)arg1 ;
-(id)description;
-(void)saveToMessage:(IndexedUidsArchive*)arg1 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)uidsForIndexes:(id)arg1 ;
-(id)initFromMessage:(const IndexedUidsArchive*)arg1 ;
-(UUIDData<TSP::UUIDData>)uidForIndex:(unsigned)arg1 ;
-(unsigned short)columnIndexForUid:(const UUIDData<TSP::UUIDData>*)arg1 ;
-(unsigned)rowIndexForUid:(const UUIDData<TSP::UUIDData>*)arg1 ;
-(id)indexSetBySubtractingOurIndexesFromIndexSet:(id)arg1 ;
-(void)unloadIndexes;
-(id)initWithUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(id)initWithUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 atIndexes:(const vector<unsigned int, std::__1::allocator<unsigned int> >*)arg2 ;
-(void)loadIndexesForTable:(id)arg1 isRows:(BOOL)arg2 shuffleMap:(id)arg3 ;
-(const vector<TSU::UUIDData<TSP::UUIDData>*)viewOrderUids;
@end


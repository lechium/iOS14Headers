/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:27:08 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/EquationKit.framework/EquationKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString, EQKitMathMLTokenContent;

typedef struct _compressed_pair<EQKitTypes::Crossout::Enum *, std::__1::allocator<EQKitTypes::Crossout::Enum> > {
	int __value_;
} compressed_pair<EQKitTypes::Crossout::Enum *, std::__1::allocator<EQKitTypes::Crossout::Enum> >;

typedef struct vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum> > {
	int __begin_;
	int __end_;
	compressed_pair<EQKitTypes::Crossout::Enum *, std::__1::allocator<EQKitTypes::Crossout::Enum> > __end_cap_;
} vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum> >;

typedef struct CGPoint {
	double x;
	double y;
} CGPoint;

typedef const struct set<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum> >* set<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum> >Ref;

typedef struct AttributeCollection* AttributeCollectionRef;

typedef struct CGContext* CGContextRef;

typedef struct CGPDFDocument* CGPDFDocumentRef;

typedef struct _xmlTextWriter* xmlTextWriterRef;

typedef union {
	unsigned mChar;
	NSString* mString;
	EQKitMathMLTokenContent* mContent;
} SCD_Union_EQ8;

typedef struct _NSZone* NSZoneRef;

typedef struct CGColor* CGColorRef;

typedef struct __CTLine* CTLineRef;

typedef struct CGSize {
	double width;
	double height;
} CGSize;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct CGPath* CGPathRef;

typedef struct _compressed_pair<EQKitMathMLParserState **, std::__1::allocator<EQKitMathMLParserState *> > {
	int __value_;
} compressed_pair<EQKitMathMLParserState **, std::__1::allocator<EQKitMathMLParserState *> >;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<EQKitMathMLParserState> > {
	unsigned long long __value_;
} compressed_pair<unsigned long, std::__1::allocator<EQKitMathMLParserState> >;

typedef struct _split_buffer<EQKitMathMLParserState *, std::__1::allocator<EQKitMathMLParserState *> > {
	int __first_;
	int __begin_;
	int __end_;
	compressed_pair<EQKitMathMLParserState **, std::__1::allocator<EQKitMathMLParserState *> > __end_cap_;
} split_buffer<EQKitMathMLParserState *, std::__1::allocator<EQKitMathMLParserState *> >;

typedef struct deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState> > {
	split_buffer<EQKitMathMLParserState *, std::__1::allocator<EQKitMathMLParserState *> > __map_;
	unsigned long long __start_;
	compressed_pair<unsigned long, std::__1::allocator<EQKitMathMLParserState> > __size_;
} deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState> >;

typedef struct stack<EQKitMathMLParserState, std::__1::deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState> > > {
	deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState> > c;
} stack<EQKitMathMLParserState, std::__1::deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState> > >;

typedef struct __CTRunDelegate* CTRunDelegateRef;


/*
                       * This header is generated by classdump-dyld 1.0
                       * on Monday, September 28, 2020 at 5:55:15 PM Mountain Standard Time
                       * Operating System: Version 14.0 (Build 18A373)
                       * Image Source: /System/Library/PrivateFrameworks/GameCenterUI.framework/GameCenterUI
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
                       */

#import <UIKitCore/UINavigationController.h>
#import <libobjc.A.dylib/GKExtensionParentViewControllerProtocol.h>
#import <UIKit/UIViewControllerAnimatedTransitioning.h>
#import <UIKit/UIViewControllerTransitioningDelegate.h>

@protocol GKGameCenterControllerDelegate;
@class NSString, GKDashboardHostViewController, GKLeaderboard, UIAlertController;

@interface GKGameCenterViewController : UINavigationController <GKExtensionParentViewControllerProtocol, UIViewControllerAnimatedTransitioning, UIViewControllerTransitioningDelegate> {

	BOOL _isArcade;
	BOOL _presenting;
	id<GKGameCenterControllerDelegate> _gameCenterDelegate;
	long long _viewState;
	NSString* _leaderboardIdentifier;
	long long _leaderboardTimeScope;
	long long _leaderboardPlayerScope;
	GKDashboardHostViewController* _remoteViewController;
	GKLeaderboard* _leaderboard;
	NSString* _achievementIdentifier;
	UIAlertController* _alertController;

}

@property (nonatomic,retain) GKDashboardHostViewController * remoteViewController;                      //@synthesize remoteViewController=_remoteViewController - In the implementation block
@property (nonatomic,retain) NSString * leaderboardIdentifier;                                          //@synthesize leaderboardIdentifier=_leaderboardIdentifier - In the implementation block
@property (nonatomic,retain) GKLeaderboard * leaderboard;                                               //@synthesize leaderboard=_leaderboard - In the implementation block
@property (nonatomic,retain) NSString * achievementIdentifier;                                          //@synthesize achievementIdentifier=_achievementIdentifier - In the implementation block
@property (nonatomic,retain) UIAlertController * alertController;                                       //@synthesize alertController=_alertController - In the implementation block
@property (nonatomic,retain) NSString * leaderboardCategory; 
@property (assign,nonatomic) long long leaderboardTimeScope;                                            //@synthesize leaderboardTimeScope=_leaderboardTimeScope - In the implementation block
@property (assign,nonatomic) long long leaderboardPlayerScope;                                          //@synthesize leaderboardPlayerScope=_leaderboardPlayerScope - In the implementation block
@property (assign,nonatomic) long long viewState;                                                       //@synthesize viewState=_viewState - In the implementation block
@property (assign,nonatomic) BOOL isArcade;                                                             //@synthesize isArcade=_isArcade - In the implementation block
@property (assign,getter=isPresenting,nonatomic) BOOL presenting;                                       //@synthesize presenting=_presenting - In the implementation block
@property (assign,nonatomic,__weak) id<GKGameCenterControllerDelegate> gameCenterDelegate;              //@synthesize gameCenterDelegate=_gameCenterDelegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)accessInstanceVariablesDirectly;
+(BOOL)_preventsAppearanceProxyCustomization;
-(unsigned long long)supportedInterfaceOrientations;
-(id)initWithState:(long long)arg1 ;
-(void)setIsArcade:(BOOL)arg1 ;
-(GKDashboardHostViewController *)remoteViewController;
-(BOOL)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers;
-(BOOL)shouldAutorotateToInterfaceOrientation:(long long)arg1 ;
-(BOOL)shouldAutomaticallyForwardRotationMethods;
-(void)checkArcadeStateWithCompletion:(/*^block*/id)arg1 ;
-(BOOL)shouldShowPlayForChallenge;
-(void)setPresenting:(BOOL)arg1 ;
-(void)setAlertController:(UIAlertController *)arg1 ;
-(void)setLeaderboardIdentifier:(NSString *)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(void)animationEnded:(BOOL)arg1 ;
-(void)dealloc;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)setLeaderboardCategory:(NSString *)arg1 ;
-(NSString *)leaderboardCategory;
-(NSString *)leaderboardIdentifier;
-(id)initWithLeaderboardID:(id)arg1 playerScope:(long long)arg2 timeScope:(long long)arg3 ;
-(id)initWithLeaderboard:(id)arg1 playerScope:(long long)arg2 ;
-(id)initWithAchievementID:(id)arg1 ;
-(long long)leaderboardTimeScope;
-(void)setLeaderboardTimeScope:(long long)arg1 ;
-(long long)leaderboardPlayerScope;
-(void)setLeaderboardPlayerScope:(long long)arg1 ;
-(void)setGameCenterDelegate:(id<GKGameCenterControllerDelegate>)arg1 ;
-(NSString *)achievementIdentifier;
-(id)animationControllerForDismissedController:(id)arg1 ;
-(void)setAchievementIdentifier:(NSString *)arg1 ;
-(void)setViewStateFromExtension:(long long)arg1 ;
-(void)setLeaderboardIdentifierFromExtension:(id)arg1 ;
-(void)setLeaderboardTimeScopeFromExtension:(long long)arg1 ;
-(void)setLeaderboardPlayerScopeFromExtension:(long long)arg1 ;
-(UIAlertController *)alertController;
-(void)loadView;
-(void)setViewState:(long long)arg1 ;
-(id)init;
-(BOOL)shouldAutomaticallyForwardAppearanceMethods;
-(void)setRemoteViewController:(GKDashboardHostViewController *)arg1 ;
-(BOOL)isArcade;
-(GKLeaderboard *)leaderboard;
-(void)setLeaderboard:(GKLeaderboard *)arg1 ;
-(void)_setupRemoteViewController;
-(long long)viewState;
-(BOOL)isPresenting;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)_setupChildViewController;
-(void)extensionDidFinishWithError:(id)arg1 ;
-(BOOL)shouldShowPlayForTurnBasedMatch;
-(BOOL)shouldShowQuitForTurnBasedMatch;
-(id<GKGameCenterControllerDelegate>)gameCenterDelegate;
-(void)animateTransition:(id)arg1 ;
-(double)transitionDuration:(id)arg1 ;
-(void)notifyDelegateOnWillFinish;
-(id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3 ;
@end


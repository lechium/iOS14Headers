/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:54:07 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/Catalyst.framework/Catalyst
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol CATCollectionControllerDelegate;
@class NSMutableArray, NSMutableSet, NSString, NSMutableIndexSet, NSSet, NSTimer, NSValueTransformer, NSArray, NSPredicate, NSIndexSet;

@interface CATCollectionController : NSObject {

	NSMutableArray* mPendingArrangedObjects;
	NSMutableArray* mPendingInsertedObjects;
	NSMutableArray* mPendingDeletedObjects;
	NSMutableSet* mContent;
	id mTarget;
	NSString* mKeyPath;
	NSMutableIndexSet* mChangingSelection;
	BOOL mDelegateKnowsContentIsChanging;
	NSSet* mKeysAffectingArrangement;
	NSMutableSet* mObjectsToRearrange;
	NSTimer* mRearrangeTimer;
	NSValueTransformer* mTransformer;
	id mOriginalObjects;
	BOOL _automaticallyRearrangesObjects;
	id<CATCollectionControllerDelegate> _delegate;
	NSArray* _sortDescriptors;
	NSPredicate* _filterPredicate;
	NSIndexSet* _selectionIndexes;
	NSArray* _arrangedObjects;

}

@property (retain) NSArray * arrangedObjects;                                 //@synthesize arrangedObjects=_arrangedObjects - In the implementation block
@property (__weak) id<CATCollectionControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (copy) NSArray * sortDescriptors;                                   //@synthesize sortDescriptors=_sortDescriptors - In the implementation block
@property (retain) NSPredicate * filterPredicate;                             //@synthesize filterPredicate=_filterPredicate - In the implementation block
@property (copy) NSIndexSet * selectionIndexes;                               //@synthesize selectionIndexes=_selectionIndexes - In the implementation block
@property (assign) BOOL automaticallyRearrangesObjects;                       //@synthesize automaticallyRearrangesObjects=_automaticallyRearrangesObjects - In the implementation block
@property (nonatomic,readonly) NSSet * content; 
@property (readonly) NSArray * selectedObjects; 
-(NSPredicate *)filterPredicate;
-(void)setFilterPredicate:(NSPredicate *)arg1 ;
-(void)removeObject:(id)arg1 ;
-(id)initWithObjects:(id)arg1 ;
-(NSArray *)sortDescriptors;
-(void)setSortDescriptors:(NSArray *)arg1 ;
-(void)addObject:(id)arg1 ;
-(void)dealloc;
-(NSSet *)content;
-(id)init;
-(void)setDelegate:(id<CATCollectionControllerDelegate>)arg1 ;
-(NSArray *)arrangedObjects;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id<CATCollectionControllerDelegate>)delegate;
-(void)updateObject:(id)arg1 ;
-(void)updateKeysAffectingArrangementForceUpdate:(BOOL)arg1 includeAllContent:(BOOL)arg2 ;
-(NSIndexSet *)selectionIndexes;
-(void)unbindContent;
-(void)bindContentToObject:(id)arg1 withKeyPath:(id)arg2 usingTransformer:(id)arg3 ;
-(void)removeObserversFromObject:(id)arg1 forKeyPaths:(id)arg2 ;
-(void)setArrangedObjects:(NSArray *)arg1 ;
-(void)changeContent:(/*^block*/id)arg1 ;
-(void)scheduleRearrangeTimerIfNeed;
-(void)addObserversToObject:(id)arg1 forKeyPaths:(id)arg2 ;
-(void)arrangeObject:(id)arg1 ;
-(void)changeObject:(id)arg1 atIndex:(unsigned long long)arg2 forChangeType:(unsigned long long)arg3 newIndex:(unsigned long long)arg4 ;
-(unsigned long long)newIndexForObject:(id)arg1 inArrangedObjects:(id)arg2 ;
-(void)rearrangeTimerDidFire:(id)arg1 ;
-(BOOL)automaticallyRearrangesObjects;
-(void)notifyArrangedObjectsWillChange;
-(void)notifyArrangedObjectsDidChangeWithPreviousArrangedObjects:(id)arg1 ;
-(void)setAutomaticallyRearrangesObjects:(BOOL)arg1 ;
-(void)setSelectionIndexes:(NSIndexSet *)arg1 ;
-(NSArray *)selectedObjects;
-(unsigned long long)numberOfArrangedObjects;
-(id)arrangedObjectAtIndex:(unsigned long long)arg1 ;
-(id)arrangedObjectsAtIndexes:(id)arg1 ;
-(void)resolveArrangedObjectsAtIndexes:(id)arg1 reply:(/*^block*/id)arg2 ;
-(unsigned long long)arrangedIndexOfObject:(id)arg1 ;
-(void)bindContentToObject:(id)arg1 withKeyPath:(id)arg2 ;
-(void)rearrangeObjects;
@end


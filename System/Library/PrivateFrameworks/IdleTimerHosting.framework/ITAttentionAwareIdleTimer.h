/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:54:38 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/IdleTimerHosting.framework/IdleTimerHosting
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <IdleTimerHosting/IdleTimerHosting-Structs.h>
#import <libobjc.A.dylib/ITAttentionAwarenessClientDelegate.h>

@protocol ITIdleTimerDelegate;
@class NSString, ITAttentionAwarenessClient, ITIdleTimerDescriptor, ITAttentionAwarenessContext;

@interface ITAttentionAwareIdleTimer : NSObject <ITAttentionAwarenessClientDelegate> {

	os_unfair_recursive_lock_s _accessLock;
	NSString* _configurationIdentifier;
	ITAttentionAwarenessClient* _access_client;
	ITIdleTimerDescriptor* _access_descriptor;
	ITAttentionAwarenessContext* _access_context;
	id<ITIdleTimerDelegate> _delegate;

}

@property (nonatomic,__weak,readonly) id<ITIdleTimerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) ITAttentionAwarenessContext * _context; 
@property (assign,getter=isEnabled,nonatomic) BOOL enabled; 
@property (nonatomic,copy,readonly) ITIdleTimerDescriptor * descriptor; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_timeoutDictionaryForTimeouts:(id)arg1 ;
+(id)_configurationWithIdentifier:(id)arg1 descriptor:(id)arg2 context:(id)arg3 ;
-(ITIdleTimerDescriptor *)descriptor;
-(BOOL)isEnabled;
-(id)descriptionBuilderWithMultilinePrefix:(id)arg1 ;
-(void)reset;
-(ITAttentionAwarenessContext *)_context;
-(id)init;
-(id<ITIdleTimerDelegate>)delegate;
-(id)succinctDescriptionBuilder;
-(void)setEnabled:(BOOL)arg1 ;
-(id)succinctDescription;
-(id)descriptionWithMultilinePrefix:(id)arg1 ;
-(NSString *)description;
-(id)initWithConfigurationIdentifier:(id)arg1 delegate:(id)arg2 calloutQueue:(id)arg3 ;
-(void)setDescriptor:(id)arg1 resettingTimer:(BOOL)arg2 ;
-(void)client:(id)arg1 attentionLostTimeoutDidExpire:(id)arg2 forContext:(id)arg3 ;
-(void)clientDidReset:(id)arg1 forUserAttentionEvent:(id)arg2 withContext:(id)arg3 ;
-(id)_initWithConfigurationIdentifier:(id)arg1 delegate:(id)arg2 calloutQueue:(id)arg3 client:(id)arg4 ;
-(void)_access_reconfigureAttentionClientAndReset:(BOOL)arg1 ;
-(id)_access_generateConfiguration;
-(id)initWithConfigurationIdentifier:(id)arg1 delegate:(id)arg2 ;
@end


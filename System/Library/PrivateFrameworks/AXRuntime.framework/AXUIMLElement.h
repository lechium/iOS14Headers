/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:43:37 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AXRuntime/AXRuntime-Structs.h>
#import <AXRuntime/AXUIElement.h>

@class AXUIElement, NSString, NSMutableArray;

@interface AXUIMLElement : AXUIElement {

	AXUIElement* _parent;
	AXUIElement* _hostingParent;
	CGRect _touchExpandedFrame;
	unsigned long long _traits;
	NSString* _value;
	long long _uiClass;
	NSMutableArray* _customActions;
	BOOL _isReconciling;
	NSString* _label;
	unsigned long long _mlGeneration;
	CGPoint _rotatedCenterPoint;
	CGRect _portraitUpFrame;
	CGRect _rotatedFrame;
	CGRect _screenFrame;

}

@property (nonatomic,retain) NSString * label;                             //@synthesize label=_label - In the implementation block
@property (assign,nonatomic) CGRect portraitUpFrame;                       //@synthesize portraitUpFrame=_portraitUpFrame - In the implementation block
@property (assign,nonatomic) CGRect rotatedFrame;                          //@synthesize rotatedFrame=_rotatedFrame - In the implementation block
@property (assign,nonatomic) CGPoint rotatedCenterPoint;                   //@synthesize rotatedCenterPoint=_rotatedCenterPoint - In the implementation block
@property (assign,nonatomic) CGRect screenFrame;                           //@synthesize screenFrame=_screenFrame - In the implementation block
@property (assign,nonatomic) unsigned long long mlGeneration;              //@synthesize mlGeneration=_mlGeneration - In the implementation block
+(void)initialize;
+(void)clearCaches;
+(void)_fireRefreshTimer;
+(void)setFrameDelegate:(id)arg1 ;
+(id)cachedElementForParent:(AXUIElementRef)arg1 ;
+(id)elementsInDirection:(long long)arg1 withElement:(id)arg2 nextElements:(id)arg3 ;
+(void)_queue_createMLElements:(id)arg1 postDelegateCallback:(BOOL)arg2 ;
+(void)_setCachedMLElements:(id)arg1 forID:(id)arg2 ;
+(id)_cachedMLElementsForID:(id)arg1 ;
+(long long)_interfaceOrientationForElement:(id)arg1 ;
+(CGRect)_appRelativeRectForRect:(CGRect)arg1 contextId:(unsigned)arg2 ;
+(CGRect)_convertFrameToPortraitUp:(CGRect)arg1 fromOrientation:(long long)arg2 appFrame:(CGRect)arg3 ;
+(void)_applyAXTraitsForElement:(id)arg1 uiClass:(long long)arg2 ;
+(BOOL)performFuzzyHitTestNextTime;
+(void)setPerformFuzzyHitTestNextTime:(BOOL)arg1 ;
+(id)sharedFingerController;
+(CGRect)_screenRelativeRectForRect:(CGRect)arg1 contextId:(unsigned)arg2 ;
+(void)clearCachesForAppsExcluding:(id)arg1 ;
+(void)setAutoRefresh:(BOOL)arg1 forApp:(id)arg2 ;
-(void)disableCache;
-(CGRect)frame;
-(BOOL)performAXAction:(int)arg1 ;
-(void)setLabel:(NSString *)arg1 ;
-(BOOL)isValid;
-(NSString *)label;
-(id)initWithParentElement:(AXUIElementRef)arg1 ;
-(AXUIElementRef)copyElementAtPosition:(CGPoint)arg1 ;
-(void*)copyAttributeValue:(long long)arg1 ;
-(void*)copyAttributeValue:(long long)arg1 parameter:(void*)arg2 ;
-(id)stringWithAXAttribute:(long long)arg1 ;
-(CGRect)rectWithAXAttribute:(long long)arg1 ;
-(id)numberWithAXAttribute:(long long)arg1 ;
-(CGPoint)pointWithAXAttribute:(long long)arg1 ;
-(NSRange)rangeWithAXAttribute:(long long)arg1 ;
-(id)objectWithAXAttribute:(long long)arg1 parameter:(void*)arg2 ;
-(id)objectWithAXAttribute:(long long)arg1 ;
-(void)enableCache:(BOOL)arg1 ;
-(BOOL)canPerformAXAction:(int)arg1 ;
-(id)arrayWithAXAttribute:(long long)arg1 ;
-(BOOL)boolWithAXAttribute:(long long)arg1 ;
-(CGPathRef)pathWithAXAttribute:(long long)arg1 ;
-(id)uiElementsWithAttribute:(long long)arg1 ;
-(id)uiElementsWithAttribute:(long long)arg1 parameter:(void*)arg2 ;
-(BOOL)performAXAction:(int)arg1 withValue:(id)arg2 fencePort:(unsigned)arg3 ;
-(id)previousElementsWithCount:(unsigned long long)arg1 ;
-(id)nextElementsWithCount:(unsigned long long)arg1 ;
-(id)uiElementsWithAttribute:(long long)arg1 parameter:(void*)arg2 fetchAttributes:(BOOL)arg3 ;
-(BOOL)isValidForApplication:(id)arg1 ;
-(void)updateCacheWithAttributes:(id)arg1 ;
-(void)updateCache:(long long)arg1 ;
-(void)setAXAttribute:(long long)arg1 withBOOL:(BOOL)arg2 ;
-(void)setAXAttribute:(long long)arg1 withString:(id)arg2 ;
-(void)setAXAttribute:(long long)arg1 withLong:(long long)arg2 ;
-(void)setAXAttribute:(long long)arg1 withFloat:(float)arg2 ;
-(void)setAXAttribute:(long long)arg1 withNumber:(id)arg2 ;
-(void)setAXAttribute:(long long)arg1 withPoint:(CGPoint)arg2 ;
-(void)setAXAttribute:(long long)arg1 withSize:(CGSize)arg2 ;
-(void)setAXAttribute:(long long)arg1 withRange:(NSRange)arg2 ;
-(void)setAXAttribute:(long long)arg1 withUIElement:(id)arg2 ;
-(void)setAXAttribute:(long long)arg1 withUIElementArray:(id)arg2 ;
-(void)setAXAttribute:(long long)arg1 withArray:(id)arg2 ;
-(void)setAXAttribute:(long long)arg1 withObject:(id)arg2 ;
-(void)setAXAttribute:(long long)arg1 withObject:(id)arg2 synchronous:(BOOL)arg3 ;
-(BOOL)isMLElement;
-(id)valueArrayWithAXAttributes:(CFArrayRef)arg1 ;
-(CGColorRef)colorWithAXAttribute:(long long)arg1 ;
-(CGRect)rotatedFrame;
-(id)_topLevelMLElement;
-(BOOL)_isTopLevelMLElement;
-(id)_topLevelAppElement;
-(CGPoint)rotatedCenterPoint;
-(BOOL)_handleScroll:(int)arg1 ;
-(BOOL)_handleScrollToVisible:(id)arg1 ;
-(id)_appElement;
-(void)_forceMLElementRefresh:(id)arg1 postDelegateCallback:(BOOL)arg2 completionBlock:(/*^block*/id)arg3 ;
-(BOOL)_simulateScrollAction:(int)arg1 withScreenDistanceFactor:(double)arg2 forVisibleAction:(BOOL)arg3 ;
-(id)nextElementsWithCount:(unsigned long long)arg1 baseElement:(id)arg2 ;
-(id)previousElementsWithCount:(unsigned long long)arg1 baseElement:(id)arg2 ;
-(id)_currentMLElements;
-(id)_reconcileElements:(id)arg1 ;
-(void)setPortraitUpFrame:(CGRect)arg1 ;
-(void)setRotatedFrame:(CGRect)arg1 ;
-(void)setRotatedCenterPoint:(CGPoint)arg1 ;
-(void)setMlGeneration:(unsigned long long)arg1 ;
-(void)_applyCustomActionsForFeature:(id)arg1 screenScale:(double)arg2 screenRect:(CGRect)arg3 ;
-(BOOL)isProbablyEqual:(id)arg1 ;
-(unsigned long long)mlGeneration;
-(void*)copyAttributeValue:(long long)arg1 parameter:(void*)arg2 baseElement:(id)arg3 ;
-(id)_findMatchingElementForMLElement:(id)arg1 flattenedAppElements:(id)arg2 ;
-(BOOL)_shouldPromoteElement:(id)arg1 ;
-(BOOL)_shouldDemoteElement:(id)arg1 withMLElements:(id)arg2 ;
-(CGRect)portraitUpFrame;
-(id)topLevelMLElement;
-(id)_reconciledElements;
-(id)_reconcileAppElementsWithMLElements:(id)arg1 flattenedElements:(id)arg2 ;
-(id)_flattenedAppElements;
-(CGRect)screenFrame;
-(void)setScreenFrame:(CGRect)arg1 ;
@end


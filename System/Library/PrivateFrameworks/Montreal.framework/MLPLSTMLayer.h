/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:41:18 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/Montreal.framework/Montreal
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Montreal/Montreal-Structs.h>
#import <Montreal/MLPLayer.h>
#import <libobjc.A.dylib/MLPLayerOptimizerProtocol.h>

@class MPSLSTMDescriptor, MPSRNNMatrixTrainingLayer, NSMutableArray, NSArray, NSString;

@interface MLPLSTMLayer : MLPLayer <MLPLayerOptimizerProtocol> {

	int _inputGateActivation;
	int _forgetGateActivation;
	int _cellGateActivation;
	int _outputGateActivation;
	int _cellToOutputActivation;
	unsigned long long _inputSize;
	unsigned long long _outputSize;
	MPSLSTMDescriptor* _lstmDesc;
	MPSRNNMatrixTrainingLayer* _filter;
	NSMutableArray* _optimizers;
	NSMutableArray* _weights;
	NSMutableArray* _weightGradients;
	NSMutableArray* _trainingStates;
	float* _initialWeights_0;
	float* _initialWeights_1;
	float* _initialBias_0;
	float* _initialBias_1;
	unsigned long long _weightAttributes;
	NSArray* _srcMatrices;

}

@property (assign) unsigned long long inputSize;                     //@synthesize inputSize=_inputSize - In the implementation block
@property (assign) unsigned long long outputSize;                    //@synthesize outputSize=_outputSize - In the implementation block
@property (assign) int inputGateActivation;                          //@synthesize inputGateActivation=_inputGateActivation - In the implementation block
@property (assign) int forgetGateActivation;                         //@synthesize forgetGateActivation=_forgetGateActivation - In the implementation block
@property (assign) int cellGateActivation;                           //@synthesize cellGateActivation=_cellGateActivation - In the implementation block
@property (assign) int outputGateActivation;                         //@synthesize outputGateActivation=_outputGateActivation - In the implementation block
@property (assign) int cellToOutputActivation;                       //@synthesize cellToOutputActivation=_cellToOutputActivation - In the implementation block
@property (retain) MPSLSTMDescriptor * lstmDesc;                     //@synthesize lstmDesc=_lstmDesc - In the implementation block
@property (retain) MPSRNNMatrixTrainingLayer * filter;               //@synthesize filter=_filter - In the implementation block
@property (retain) NSMutableArray * optimizers;                      //@synthesize optimizers=_optimizers - In the implementation block
@property (retain) NSMutableArray * weights;                         //@synthesize weights=_weights - In the implementation block
@property (retain) NSMutableArray * weightGradients;                 //@synthesize weightGradients=_weightGradients - In the implementation block
@property (retain) NSMutableArray * trainingStates;                  //@synthesize trainingStates=_trainingStates - In the implementation block
@property (assign) float* initialWeights_0;                          //@synthesize initialWeights_0=_initialWeights_0 - In the implementation block
@property (assign) float* initialWeights_1;                          //@synthesize initialWeights_1=_initialWeights_1 - In the implementation block
@property (assign) float* initialBias_0;                             //@synthesize initialBias_0=_initialBias_0 - In the implementation block
@property (assign) float* initialBias_1;                             //@synthesize initialBias_1=_initialBias_1 - In the implementation block
@property (assign) unsigned long long weightAttributes;              //@synthesize weightAttributes=_weightAttributes - In the implementation block
@property (retain) NSArray * srcMatrices;                            //@synthesize srcMatrices=_srcMatrices - In the implementation block
@property (readonly) NSArray * mlpOptimizers; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(MPSRNNMatrixTrainingLayer *)filter;
-(id)generateNode:(id)arg1 model:(id)arg2 weightIter:(unsigned long long*)arg3 ;
-(id)initWithName:(id)arg1 parameters:(SCD_Struct_Mo4*)arg2 ;
-(void)createKernel;
-(id)seqForward:(id)arg1 input:(id)arg2 dataBatch:(id)arg3 runInference:(BOOL)arg4 ;
-(id)seqBackward:(id)arg1 dataBatch:(id)arg2 inputGradient:(id)arg3 ;
-(NSArray *)mlpOptimizers;
-(void)setWeights:(NSMutableArray *)arg1 ;
-(void)setWeightGradients:(NSMutableArray *)arg1 ;
-(unsigned long long)inputSize;
-(NSMutableArray *)weightGradients;
-(id)initWithName:(id)arg1 inputSize:(unsigned long long)arg2 outputSize:(unsigned long long)arg3 weightAttributes:(unsigned long long)arg4 ;
-(void)setOutputSize:(unsigned long long)arg1 ;
-(void)setWeightAttributes:(unsigned long long)arg1 ;
-(void)setInputGateActivation:(int)arg1 ;
-(void)setForgetGateActivation:(int)arg1 ;
-(void)setCellGateActivation:(int)arg1 ;
-(void)setOutputGateActivation:(int)arg1 ;
-(void)setCellToOutputActivation:(int)arg1 ;
-(void)setInitialWeights_0:(float*)arg1 ;
-(NSMutableArray *)optimizers;
-(void)setInitialWeights_1:(float*)arg1 ;
-(void)setInitialBias_0:(float*)arg1 ;
-(void)setInitialBias_1:(float*)arg1 ;
-(void)populateActivation:(int*)arg1 montrealActivationType:(long long)arg2 ;
-(void)setOptimizers:(NSMutableArray *)arg1 ;
-(void)setTrainingStates:(NSMutableArray *)arg1 ;
-(void)setLstmDesc:(MPSLSTMDescriptor *)arg1 ;
-(int)inputGateActivation;
-(int)forgetGateActivation;
-(int)cellGateActivation;
-(int)outputGateActivation;
-(int)cellToOutputActivation;
-(NSMutableArray *)trainingStates;
-(void)updateSourceMatrix:(id)arg1 inference:(BOOL)arg2 ;
-(id)seqForwardDifferentMatrices:(id)arg1 input:(id)arg2 ;
-(id)seqForwardCombinedMatrix:(id)arg1 input:(id)arg2 ;
-(id)seqBackwardCombinedMatrix:(id)arg1 inputGradient:(id)arg2 ;
-(NSArray *)srcMatrices;
-(void)exportWeightsWithWeightMatrix:(id)arg1 weightID:(unsigned long long)arg2 destination:(float*)arg3 recurrent:(BOOL)arg4 ;
-(float*)initialBias_0;
-(float*)initialBias_1;
-(id)seqBackwardDifferentMatrices:(id)arg1 inputGradient:(id)arg2 ;
-(void)setSrcMatrices:(NSArray *)arg1 ;
-(unsigned long long)weightAttributes;
-(id)matrixIDToString:(unsigned long long)arg1 ;
-(float*)initialWeights_0;
-(float*)initialWeights_1;
-(NSMutableArray *)weights;
-(MPSLSTMDescriptor *)lstmDesc;
-(void)setInputSize:(unsigned long long)arg1 ;
-(void)setFilter:(MPSRNNMatrixTrainingLayer *)arg1 ;
-(unsigned long long)outputSize;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:51:45 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/PhotosGraph.framework/PhotosGraph
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/PLMetricEvent.h>

@class NSString, NSDictionary, PGManager, PGPhotosChallengeMetricEventFetchHelper, PGPrecisionRecallEvaluation;

@interface PGPhotosChallengeMetricEvent : NSObject <PLMetricEvent> {

	unsigned short _questionMetricType;
	NSString* _identifier;
	NSDictionary* _payload;
	PGManager* _manager;
	PGPhotosChallengeMetricEventFetchHelper* _metricsCache;
	unsigned long long _algorithmVersion;
	unsigned long long _graphSchemaVersion;
	NSString* _photoLibrarySize;
	unsigned long long _photosModelVersion;
	NSString* _questionTypeString;
	unsigned long long _questionVersion;
	PGPrecisionRecallEvaluation* _evaluation;

}

@property (nonatomic,retain) PGManager * manager;                                                 //@synthesize manager=_manager - In the implementation block
@property (assign,nonatomic) unsigned long long algorithmVersion;                                 //@synthesize algorithmVersion=_algorithmVersion - In the implementation block
@property (assign,nonatomic) unsigned long long graphSchemaVersion;                               //@synthesize graphSchemaVersion=_graphSchemaVersion - In the implementation block
@property (nonatomic,readonly) NSString * photoLibrarySize;                                       //@synthesize photoLibrarySize=_photoLibrarySize - In the implementation block
@property (assign,nonatomic) unsigned long long photosModelVersion;                               //@synthesize photosModelVersion=_photosModelVersion - In the implementation block
@property (nonatomic,retain) NSString * questionTypeString;                                       //@synthesize questionTypeString=_questionTypeString - In the implementation block
@property (assign,nonatomic) unsigned short questionMetricType;                                   //@synthesize questionMetricType=_questionMetricType - In the implementation block
@property (assign,nonatomic) unsigned long long questionVersion;                                  //@synthesize questionVersion=_questionVersion - In the implementation block
@property (nonatomic,retain) PGPrecisionRecallEvaluation * evaluation;                            //@synthesize evaluation=_evaluation - In the implementation block
@property (nonatomic,retain) PGPhotosChallengeMetricEventFetchHelper * metricsCache;              //@synthesize metricsCache=_metricsCache - In the implementation block
@property (nonatomic,readonly) NSString * identifier;                                             //@synthesize identifier=_identifier - In the implementation block
@property (nonatomic,readonly) NSDictionary * payload;                                            //@synthesize payload=_payload - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)stringFromQuestionMetricType:(unsigned short)arg1 ;
+(id)relationshipLabelFromRelationshipQuestionMetricType:(unsigned short)arg1 ;
+(id)meaningLabelFromMeaningQuestionMetricType:(unsigned short)arg1 ;
+(unsigned long long)algorithmVersionFromQuestionMetricType:(unsigned short)arg1 ;
+(id)allMetricEventsWithGraphManager:(id)arg1 ;
+(unsigned short)questionTypeFromQuestionMetricType:(unsigned short)arg1 ;
+(unsigned short)questionEntityTypeFromQuestionMetricType:(unsigned short)arg1 ;
-(NSString *)identifier;
-(NSDictionary *)payload;
-(void)setManager:(PGManager *)arg1 ;
-(PGManager *)manager;
-(NSString *)description;
-(void)gatherMetricsWithProgressBlock:(/*^block*/id)arg1 ;
-(unsigned long long)graphSchemaVersion;
-(void)setGraphSchemaVersion:(unsigned long long)arg1 ;
-(id)initWithGraphManager:(id)arg1 questionMetricType:(unsigned short)arg2 metricEventFetchHelper:(id)arg3 ;
-(void)_gatherMetricsForMeaningQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(/*^block*/id)arg3 ;
-(id)_meaningInferenceResultsForMeaningLabel:(id)arg1 assetIds:(id)arg2 ;
-(void)_gatherMetricsForRelationshipQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(/*^block*/id)arg3 ;
-(id)_relationshipInferenceResultsForQuestionMetricType:(unsigned short)arg1 personIds:(id)arg2 ;
-(void)_gatherMetricsForBusinessQuestions:(id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(id)_groundTruthForBusinessFromQuestions:(id)arg1 ;
-(id)_businessInferenceResultsForBusinessIdByAssetIds:(id)arg1 ;
-(void)_gatherMetricsForPublicEventQuestions:(id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(id)_groundTruthForPublicEventFromQuestions:(id)arg1 ;
-(id)_publicEventInferenceResultsForPublicEventIdByAssetIds:(id)arg1 ;
-(void)_gatherMetricsForTripKeyQuestions:(id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(void)_gatherMetricsForHolidayQuestions:(id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(id)_groundTruthForHolidayFromQuestions:(id)arg1 ;
-(id)_holidayInferenceResultsForHolidayNameByAssetIds:(id)arg1 ;
-(void)_gatherMetricsForFrequentLocationQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(/*^block*/id)arg3 ;
-(id)_groundTruthForFrequentLocationFromQuestions:(id)arg1 ;
-(id)_frequentLocationInferenceResultsForLocationByAssetIds:(id)arg1 locationType:(id)arg2 ;
-(void)_gatherMetricsForNamingQuestions:(id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(id)_groundTruthForNamingFromQuestions:(id)arg1 ;
-(id)_namingInferenceResultsForContactIdByPersonIds:(id)arg1 ;
-(void)_gatherMetricsForAgeCategoryQuestions:(id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(id)_groundTruthForAgeCategoryFromQuestions:(id)arg1 ;
-(id)_ageCategoryInferenceResultsForAgeCategoryByPersonIds:(id)arg1 ;
-(void)_gatherMetricsForPetQuestions:(id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(id)_petInferenceResultsForAssetIds:(id)arg1 ;
-(void)_gatherMetricsForPetKnowledgeQuestions:(id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(void)_gatherMetricsForMemoryQuestions:(id)arg1 fromGraph:(id)arg2 questionMetricType:(unsigned short)arg3 progressBlock:(/*^block*/id)arg4 ;
-(void)_gatherMetricsForFeaturedPhotoQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(/*^block*/id)arg3 ;
-(id)_groundTruthForFeaturedPhotoFromQuestions:(id)arg1 ;
-(id)_featuredPhotoInferenceResultsForAnswerDateByAssetIds:(id)arg1 questionMetricType:(unsigned short)arg2 ;
-(id)_groundTruthByAssetIdentifiersFromQuestions:(id)arg1 ;
-(id)_groundTruthByPersonIdentifiersFromQuestions:(id)arg1 ;
-(id)payloadForVerification;
-(id)memoryCategorySubCategoryByQuestionMetricType;
-(PGPhotosChallengeMetricEventFetchHelper *)metricsCache;
-(void)setMetricsCache:(PGPhotosChallengeMetricEventFetchHelper *)arg1 ;
-(unsigned long long)algorithmVersion;
-(void)setAlgorithmVersion:(unsigned long long)arg1 ;
-(NSString *)photoLibrarySize;
-(unsigned long long)photosModelVersion;
-(void)setPhotosModelVersion:(unsigned long long)arg1 ;
-(unsigned short)questionMetricType;
-(void)setQuestionMetricType:(unsigned short)arg1 ;
-(NSString *)questionTypeString;
-(void)setQuestionTypeString:(NSString *)arg1 ;
-(unsigned long long)questionVersion;
-(void)setQuestionVersion:(unsigned long long)arg1 ;
-(PGPrecisionRecallEvaluation *)evaluation;
-(void)setEvaluation:(PGPrecisionRecallEvaluation *)arg1 ;
@end


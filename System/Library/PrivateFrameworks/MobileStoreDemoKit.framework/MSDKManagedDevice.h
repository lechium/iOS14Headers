/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:54:44 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/MobileStoreDemoKit.framework/MobileStoreDemoKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol MSDKManagedDeviceDelegate, OS_xpc_object, MSDKF200EventObserverProtocol;
@class NSObject, NSMutableDictionary;

@interface MSDKManagedDevice : NSObject {

	id<MSDKManagedDeviceDelegate> _delegate;
	NSObject*<OS_xpc_object> _connection;
	NSObject*<OS_xpc_object> _helperConnection;
	NSMutableDictionary* _xpc_cache;
	id<MSDKF200EventObserverProtocol> _F200EventObserver;

}

@property (retain) NSObject*<OS_xpc_object> connection;                                  //@synthesize connection=_connection - In the implementation block
@property (retain) NSObject*<OS_xpc_object> helperConnection;                            //@synthesize helperConnection=_helperConnection - In the implementation block
@property (retain) NSMutableDictionary * xpc_cache;                                      //@synthesize xpc_cache=_xpc_cache - In the implementation block
@property (retain) id<MSDKF200EventObserverProtocol> F200EventObserver;                  //@synthesize F200EventObserver=_F200EventObserver - In the implementation block
@property (assign,nonatomic,__weak) id<MSDKManagedDeviceDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
+(id)sharedInstance;
-(BOOL)setupConnection;
-(NSObject*<OS_xpc_object>)helperConnection;
-(void)handleMessage:(id)arg1 ;
-(NSObject*<OS_xpc_object>)connection;
-(void)setHelperConnection:(NSObject*<OS_xpc_object>)arg1 ;
-(BOOL)prepare;
-(id)init;
-(void)setDelegate:(id<MSDKManagedDeviceDelegate>)arg1 ;
-(BOOL)cancelOperation;
-(id<MSDKManagedDeviceDelegate>)delegate;
-(void)setConnection:(NSObject*<OS_xpc_object>)arg1 ;
-(BOOL)needOwnershipWarning:(id*)arg1 ;
-(BOOL)isEnrolled;
-(void)setXpc_cache:(NSMutableDictionary *)arg1 ;
-(BOOL)isDeviceClassSupported;
-(NSMutableDictionary *)xpc_cache;
-(int)readDemoMode;
-(id)getCacheIdentifier;
-(void)setF200EventObserver:(id<MSDKF200EventObserverProtocol>)arg1 ;
-(id<MSDKF200EventObserverProtocol>)F200EventObserver;
-(id)errorWithXPCDictionary:(id)arg1 ;
-(BOOL)fetchF200EventsWithOptions:(id)arg1 replyQueue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(BOOL)sendF200MessageWithCommand:(unsigned char)arg1 messageOptions:(id)arg2 payloadData:(id)arg3 replyQueue:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(BOOL)sendF200QueryCommandWithOptions:(id)arg1 payloadDictionary:(id)arg2 replyQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(BOOL)sendF200ConfigCommandWithOptions:(id)arg1 payloadDictionary:(id)arg2 replyQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(BOOL)sendF200ArmCommandWithOptions:(id)arg1 payloadDictionary:(id)arg2 replyQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(BOOL)sendF200DisarmCommandWithOptions:(id)arg1 payloadDictionary:(id)arg2 replyQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)readNVRam:(id)arg1 ;
-(BOOL)setupHelperConnection;
-(BOOL)setupConnection:(id)arg1 withMachService:(id)arg2 ;
-(void)handleContentUpdateStatus:(const char*)arg1 event:(id)arg2 ;
-(void)handleF200EventMessage:(id)arg1 ;
-(BOOL)prepareWithWiFi:(id)arg1 password:(id)arg2 ;
-(BOOL)isContentFrozen_xpc;
-(unsigned long long)typeOfDemoDevice;
-(long long)getDemoInstallState;
-(BOOL)isContentFrozen;
-(BOOL)lockDemoContent;
-(BOOL)unlockDemoContent;
-(BOOL)revertDemoContent;
-(BOOL)unenroll:(BOOL)arg1 ;
-(id)getDeviceOptions;
-(id)getStoreID;
-(id)getFriendlyDeviceName;
-(BOOL)setStoreOpenAt:(long long)arg1 openMinute:(long long)arg2 closeHour:(long long)arg3 closeMinute:(long long)arg4 ;
-(BOOL)setIdleDelay:(long long)arg1 ;
-(BOOL)configureWiFi:(id)arg1 password:(id)arg2 ;
-(BOOL)checkInBlockingUI;
-(BOOL)storeDataBlob:(id)arg1 ;
-(id)retrieveDataBlob;
-(BOOL)deleteDataBlob;
-(id)getPersistentWiFiSsid;
-(id)fetchF200StatusInfo;
-(BOOL)acknowledgeAlarmSoundingRequest;
-(BOOL)registerF200EventObserver:(id)arg1 ;
-(BOOL)unregisterF200EventObserver;
-(BOOL)fetchF200EventsWithOptions:(id)arg1 replyQueue:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(BOOL)sendF200EchoCommandWithOptions:(id)arg1 payloadString:(id)arg2 replyQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(BOOL)sendF200QueryCommandWithOptions:(id)arg1 replyQueue:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(BOOL)sendF200ConfigCommandWithOptions:(id)arg1 replyQueue:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(BOOL)sendF200ArmCommandWithOptions:(id)arg1 storePasscode:(id)arg2 replyQueue:(id)arg3 withCompletion:(/*^block*/id)arg4 ;
-(BOOL)sendF200DisarmCommandWithOptions:(id)arg1 storePasscode:(id)arg2 replyQueue:(id)arg3 withCompletion:(/*^block*/id)arg4 ;
-(BOOL)sendF200GenericCommandWithOptions:(id)arg1 payloadData:(id)arg2 replyQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(BOOL)clearOwnershipWarning;
-(id)saveStoreHour:(id)arg1 ;
-(id)saveScreenSaverIdleDelay:(id)arg1 ;
-(id)getScreenSaverConfig;
-(BOOL)saveScreenSaverConfig:(id)arg1 ;
@end


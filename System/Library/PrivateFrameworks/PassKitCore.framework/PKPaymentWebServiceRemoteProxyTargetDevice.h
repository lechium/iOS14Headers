/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:40:22 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/PKPaymentWebServiceProxyObjectExportedInterface.h>

@protocol OS_dispatch_queue, PKPaymentWebServiceTargetDeviceProtocol;
@class NSObject, PKPaymentWebService, NSXPCConnection, NSString;

@interface PKPaymentWebServiceRemoteProxyTargetDevice : NSObject <PKPaymentWebServiceProxyObjectExportedInterface> {

	NSObject*<OS_dispatch_queue> _handlerQueue;
	PKPaymentWebService* _webService;
	id<PKPaymentWebServiceTargetDeviceProtocol> _targetDevice;
	NSXPCConnection* _connection;

}

@property (nonatomic,readonly) NSXPCConnection * connection;              //@synthesize connection=_connection - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)enforceUpgradedPasscodePolicyWithCompletion:(/*^block*/id)arg1 ;
-(void)endRequiringUpgradedPasscodeIfNecessary;
-(void)featureApplicationsForProvisioningWithCompletion:(/*^block*/id)arg1 ;
-(void)updatedAccountsForProvisioningWithCompletion:(/*^block*/id)arg1 ;
-(void)noteProvisioningUserInterfaceDidAppear;
-(void)noteProvisioningUserInterfaceDidDisappear;
-(void)applePayTrustKeyForIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)claimSecureElementForCurrentUserWithCompletion:(/*^block*/id)arg1 ;
-(void)renewAppleAccountWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)passOwnershipTokenWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)familyMembersWithCompletion:(/*^block*/id)arg1 ;
-(void)setDefaultPaymentPassUniqueIdentifier:(id)arg1 ;
-(void)getContextWithCompletion:(/*^block*/id)arg1 ;
-(void)getConfigurationDataWithCompletion:(/*^block*/id)arg1 ;
-(void)getRegistrationDataWithCompletion:(/*^block*/id)arg1 ;
-(void)setNewAuthRandom:(/*^block*/id)arg1 ;
-(void)getTrustedDeviceEnrollmentInfoWithCompletion:(/*^block*/id)arg1 ;
-(void)signData:(id)arg1 signatureEntanglementMode:(unsigned long long)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)getProvisioningDataIncludingDeviceMetadata:(BOOL)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)didRegisterWithRegionMap:(id)arg1 primaryRegionTopic:(id)arg2 ;
-(void)paymentSupportedInCurrentRegion:(/*^block*/id)arg1 ;
-(void)registrationSupportedInCurrentRegionWithCompletion:(/*^block*/id)arg1 ;
-(void)hasPassesOfType:(unsigned long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)setNewAuthRandomIfNecessaryReturningPairingState:(/*^block*/id)arg1 ;
-(void)passesOfType:(unsigned long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)validateAddPreconditionsWithCompletion:(/*^block*/id)arg1 ;
-(void)canProvisionPaymentPassWithPrimaryAccountIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)validateTransferPreconditionsWithCompletion:(/*^block*/id)arg1 ;
-(void)secureElementOwnershipStateForCurrentUserWithCompletion:(/*^block*/id)arg1 ;
-(void)handlePotentialExpressPass:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)addPassData:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)removePass:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)supportsPeerPaymentRegistrationWithCompletion:(/*^block*/id)arg1 ;
-(void)appleAccountInformationWithCompletion:(/*^block*/id)arg1 ;
-(void)willPassWithUniqueIdentifierAutomaticallyBecomeDefault:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)updateAccountWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)supportsAccountsWithCompletion:(/*^block*/id)arg1 ;
-(void)supportedFeatureIdentifiersWithCompletion:(/*^block*/id)arg1 ;
-(void)supportedFeatureIdentifiersForAccountProvisioningWithCompletion:(/*^block*/id)arg1 ;
-(void)deviceMetadataWithFields:(unsigned long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)invalidateRemoteProxyTargetDevice;
-(NSXPCConnection *)connection;
-(id)initWithWebService:(id)arg1 connection:(id)arg2 ;
-(void)notePasscodeUpgradeFlowWillBeginWithCompletion:(/*^block*/id)arg1 ;
-(void)dealloc;
-(void)noteProvisioningDidEnd;
-(void)archiveContext:(id)arg1 ;
-(void)deleteApplicationWithAID:(id)arg1 ;
-(void)storePassOwnershipToken:(id)arg1 withIdentifier:(id)arg2 ;
-(id)init;
-(void)queueConnectionToTrustedServiceManagerForPushTopic:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)notePasscodeUpgradeFlowDidEnd;
-(void)downloadAllPaymentPasses;
-(void)startRequiringUpgradedPasscodeWithPasscodeMeetsPolicy:(BOOL)arg1 ;
-(void)performDeviceCheckInWithCompletion:(/*^block*/id)arg1 ;
-(void)createApplePayTrustKeyWithRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)noteProvisioningDidBegin;
-(void)archiveBackgroundContext:(id)arg1 ;
-(void)deleteApplePayTrustKeyWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
@end


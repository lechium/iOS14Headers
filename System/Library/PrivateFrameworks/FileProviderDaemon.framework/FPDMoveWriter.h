/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:54:28 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/FileProviderDaemon.framework/FileProviderDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/FPCancellable.h>

@protocol FPDMoveWriterExecutor, OS_dispatch_queue;
@class FPMoveInfo, FPDActionOperationQueue, FPDCoordinator, NSMutableArray, NSMutableDictionary, NSError, NSObject, NSObservation, FPDMoveOperation;

@interface FPDMoveWriter : NSObject <FPCancellable> {

	FPMoveInfo* _info;
	FPDActionOperationQueue* _moveQueue;
	id<FPDMoveWriterExecutor> _providerWriter;
	FPDCoordinator* _preemptiveDownloadCoordinator;
	NSMutableArray* _sourceFoldersStack;
	NSMutableArray* _destinationFoldersStack;
	NSMutableDictionary* _errorsByRoot;
	NSMutableDictionary* _progressByRoot;
	id _waitedOnID;
	/*^block*/id _waiterBlock;
	BOOL _cancelled;
	NSError* _error;
	NSObject*<OS_dispatch_queue> _asyncQueue;
	NSObject*<OS_dispatch_queue> _queue;
	unsigned long long _logSection;
	NSObservation* _importProgressObservation;
	FPDMoveOperation* _operation;
	/*^block*/id _itemCopyProgressBlock;
	/*^block*/id _itemCompletionBlock;
	/*^block*/id _rootCreatedBlock;
	/*^block*/id _rootCompletionBlock;
	/*^block*/id _completionBlock;
	id<FPDMoveWriterExecutor> _diskWriter;
	FPDCoordinator* _coordinator;

}

@property (nonatomic,retain) id<FPDMoveWriterExecutor> diskWriter;               //@synthesize diskWriter=_diskWriter - In the implementation block
@property (nonatomic,readonly) FPMoveInfo * info;                                //@synthesize info=_info - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> queue;               //@synthesize queue=_queue - In the implementation block
@property (nonatomic,retain) FPDCoordinator * coordinator;                       //@synthesize coordinator=_coordinator - In the implementation block
@property (nonatomic,__weak,readonly) FPDMoveOperation * operation;              //@synthesize operation=_operation - In the implementation block
@property (nonatomic,copy) id itemCopyProgressBlock;                             //@synthesize itemCopyProgressBlock=_itemCopyProgressBlock - In the implementation block
@property (nonatomic,copy) id itemCompletionBlock;                               //@synthesize itemCompletionBlock=_itemCompletionBlock - In the implementation block
@property (nonatomic,copy) id rootCreatedBlock;                                  //@synthesize rootCreatedBlock=_rootCreatedBlock - In the implementation block
@property (nonatomic,copy) id rootCompletionBlock;                               //@synthesize rootCompletionBlock=_rootCompletionBlock - In the implementation block
@property (nonatomic,copy) id completionBlock;                                   //@synthesize completionBlock=_completionBlock - In the implementation block
+(void)initialize;
+(id)acquireDownloadSlotForItem:(id)arg1 ;
+(void)releaseDownloadSlot:(id)arg1 ;
-(FPMoveInfo *)info;
-(void)setCompletionBlock:(id)arg1 ;
-(void)cancel;
-(id)completionBlock;
-(void)cancelRoot:(id)arg1 ;
-(void)_finishWithError:(id)arg1 ;
-(void)dumpStateTo:(id)arg1 ;
-(FPDMoveOperation *)operation;
-(void)start;
-(void)_step;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setCoordinator:(FPDCoordinator *)arg1 ;
-(FPDCoordinator *)coordinator;
-(void)failWithError:(id)arg1 ;
-(id)initWithOperation:(id)arg1 queue:(id)arg2 ;
-(void)startDownloadOfItem:(id)arg1 shouldMaterializeRecursively:(BOOL)arg2 ;
-(void)setItemCopyProgressBlock:(id)arg1 ;
-(void)setItemCompletionBlock:(id)arg1 ;
-(void)setRootCreatedBlock:(id)arg1 ;
-(void)setRootCompletionBlock:(id)arg1 ;
-(void)setProgress:(id)arg1 forRoot:(id)arg2 ;
-(void)performCreateFolder:(id)arg1 inside:(id)arg2 as:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)performCopyOfItem:(id)arg1 to:(id)arg2 as:(id)arg3 sourceMaterializeOption:(unsigned long long)arg4 targetMaterializeOption:(unsigned long long)arg5 completion:(/*^block*/id)arg6 ;
-(id)waitForResultOfSourceID:(id)arg1 root:(id)arg2 error:(id*)arg3 ;
-(void)_handleCompletionOfAtom:(id)arg1 source:(id)arg2 result:(id)arg3 error:(id)arg4 ;
-(void)handleCreationForAtom:(id)arg1 result:(id)arg2 ;
-(void)performCopyOfItem:(id)arg1 to:(id)arg2 as:(id)arg3 sourceMaterializeOption:(unsigned long long)arg4 targetMaterializeOption:(unsigned long long)arg5 useDiskWriter:(BOOL)arg6 completion:(/*^block*/id)arg7 ;
-(void)performMoveOfItem:(id)arg1 to:(id)arg2 as:(id)arg3 sourceMaterializeOption:(unsigned long long)arg4 targetMaterializeOption:(unsigned long long)arg5 useDiskWriter:(BOOL)arg6 completion:(/*^block*/id)arg7 ;
-(void)_performCopyOrMoveOfItem:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)performMoveOfFolder:(id)arg1 to:(id)arg2 as:(id)arg3 sourceMaterializeOption:(unsigned long long)arg4 targetMaterializeOption:(unsigned long long)arg5 atomically:(BOOL)arg6 useDiskWriter:(BOOL)arg7 completion:(/*^block*/id)arg8 ;
-(void)_unblockWaiterForSourceID:(id)arg1 withResult:(id)arg2 error:(id)arg3 ;
-(void)_performCopyOrMoveOfFolder:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)itemCompletionBlock;
-(id)rootCreatedBlock;
-(void)_removeRoot:(id)arg1 ;
-(id)rootCompletionBlock;
-(void)_handleItem:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_handleFolder:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_handlePostFolder:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)handleAtom:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)itemCopyProgressBlock;
-(id<FPDMoveWriterExecutor>)diskWriter;
-(id)defaultExecutor;
-(void)setDiskWriter:(id<FPDMoveWriterExecutor>)arg1 ;
@end


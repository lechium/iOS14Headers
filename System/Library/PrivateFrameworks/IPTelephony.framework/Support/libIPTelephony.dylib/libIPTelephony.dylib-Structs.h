/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:44:54 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/IPTelephony.framework/Support/libIPTelephony.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

typedef struct weak_ptr<AVCRTPAudioSession> {
	AVCRTPAudioSession __ptr_;
	__shared_weak_count __cntrl_;
} weak_ptr<AVCRTPAudioSession>;

typedef struct shared_ptr<AVCRTPStackController> {
	AVCRTPStackController __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<AVCRTPStackController>;

typedef struct weak_ptr<AVCRTPRTTSession> {
	AVCRTPRTTSession __ptr_;
	__shared_weak_count __cntrl_;
} weak_ptr<AVCRTPRTTSession>;

typedef struct _long {
	char* __data_;
	unsigned long long __size_;
	unsigned long long __cap_;
} long;

typedef struct {
	unsigned char __size_;
} SCD_Struct_Ke4;

typedef struct _raw {
	unsigned long long __words[3];
} raw;

typedef struct _short {
	char __data_[23];
	SCD_Struct_Ke4 ;
} short;

typedef struct _rep {
	/*function pointer*/void* ;
	long __l;
	short __s;
	const aw) __r;
} rep;

typedef struct _compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > {
	const ep __value_;
} compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {
	compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > __r_;
} basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >;

typedef struct __WiFiManagerClient* WiFiManagerClientRef;


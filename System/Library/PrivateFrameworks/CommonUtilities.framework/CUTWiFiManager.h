/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:40:45 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/CommonUtilities.framework/CommonUtilities
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <CommonUtilities/CommonUtilities-Structs.h>
@class NSMutableSet, NSRecursiveLock, NSHashTable, NSDictionary, NSThread, NSRunLoop, NSObject, NSNumber, NSString;

@interface CUTWiFiManager : NSObject {

	BOOL _shouldAutoAssociateAsForeground;
	BOOL _isHostingHotSpot;
	BOOL _isWifiEnabled;
	BOOL _isWakeOnWiFiEnabled;
	BOOL _isWakeOnWiFiSupported;
	BOOL _isPrimaryCellularCached;
	int _linkToken;
	NSMutableSet* _wiFiAutoAssociationTokens;
	NSRecursiveLock* _lock;
	NSHashTable* _delegateMap;
	NSHashTable* _wowClients;
	void* _currentNetwork;
	void* _wifiManager;
	void* _wifiDevice;
	void* _dynamicStore;
	NSDictionary* _lastWiFiPowerInfo;
	NSThread* _wifiThread;
	CFRunLoopSourceRef _runLoopSource;
	NSRunLoop* _wifiRunLoop;
	NSObject*<OS_dispatch_queue> _incomingCallbacksQueue;

}

@property (nonatomic,retain) NSRecursiveLock * lock;                                           //@synthesize lock=_lock - In the implementation block
@property (nonatomic,retain) NSThread * wifiThread;                                            //@synthesize wifiThread=_wifiThread - In the implementation block
@property (nonatomic,retain) NSRunLoop * wifiRunLoop;                                          //@synthesize wifiRunLoop=_wifiRunLoop - In the implementation block
@property (assign,nonatomic) CFRunLoopSourceRef runLoopSource;                                 //@synthesize runLoopSource=_runLoopSource - In the implementation block
@property (assign,nonatomic) void* wifiManager;                                                //@synthesize wifiManager=_wifiManager - In the implementation block
@property (assign,nonatomic) void* wifiDevice;                                                 //@synthesize wifiDevice=_wifiDevice - In the implementation block
@property (assign,nonatomic) void* currentNetwork;                                             //@synthesize currentNetwork=_currentNetwork - In the implementation block
@property (assign,nonatomic) void* dynamicStore;                                               //@synthesize dynamicStore=_dynamicStore - In the implementation block
@property (assign,nonatomic) int linkToken;                                                    //@synthesize linkToken=_linkToken - In the implementation block
@property (nonatomic,retain) NSHashTable * delegateMap;                                        //@synthesize delegateMap=_delegateMap - In the implementation block
@property (nonatomic,retain) NSHashTable * wowClients;                                         //@synthesize wowClients=_wowClients - In the implementation block
@property (nonatomic,copy) NSDictionary * lastWiFiPowerInfo;                                   //@synthesize lastWiFiPowerInfo=_lastWiFiPowerInfo - In the implementation block
@property (nonatomic,retain) NSMutableSet * wiFiAutoAssociationTokens;                         //@synthesize wiFiAutoAssociationTokens=_wiFiAutoAssociationTokens - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> incomingCallbacksQueue;              //@synthesize incomingCallbacksQueue=_incomingCallbacksQueue - In the implementation block
@property (assign) BOOL isPrimaryCellularCached;                                               //@synthesize isPrimaryCellularCached=_isPrimaryCellularCached - In the implementation block
@property (nonatomic,readonly) BOOL isWiFiEnabled;                                             //@synthesize isWifiEnabled=_isWifiEnabled - In the implementation block
@property (nonatomic,readonly) BOOL isWiFiAssociated; 
@property (nonatomic,readonly) BOOL isWiFiCaptive; 
@property (nonatomic,readonly) BOOL isHostingWiFiHotSpot;                                      //@synthesize isHostingHotSpot=_isHostingHotSpot - In the implementation block
@property (nonatomic,readonly) BOOL isWoWSupported;                                            //@synthesize isWakeOnWiFiSupported=_isWakeOnWiFiSupported - In the implementation block
@property (nonatomic,readonly) BOOL isWoWEnabled;                                              //@synthesize isWakeOnWiFiEnabled=_isWakeOnWiFiEnabled - In the implementation block
@property (nonatomic,readonly) BOOL willTryToSearchForWiFiNetwork; 
@property (nonatomic,readonly) BOOL willTryToAutoAssociateWiFiNetwork; 
@property (nonatomic,readonly) NSNumber * wiFiSignalStrength; 
@property (nonatomic,readonly) NSNumber * wiFiScaledRSSI; 
@property (nonatomic,readonly) NSNumber * wiFiScaledRate; 
@property (nonatomic,readonly) NSString * currentSSID; 
@property (assign,nonatomic) BOOL autoAssociateWiFiAsForegroundClient;                         //@synthesize shouldAutoAssociateAsForeground=_shouldAutoAssociateAsForeground - In the implementation block
@property (nonatomic,readonly) BOOL autoAssociateWiFi; 
+(id)sharedInstance;
-(void)_createDynamicStore;
-(void)_threadedMain;
-(void)removeDelegate:(id)arg1 ;
-(void)addDelegate:(id)arg1 ;
-(void)_adjustWoWState;
-(NSThread *)wifiThread;
-(void)setLock:(NSRecursiveLock *)arg1 ;
-(void)_adjustWiFiAutoAssociationLocked;
-(void)showNetworkOptions;
-(void)setLinkToken:(int)arg1 ;
-(BOOL)isWoWSupported;
-(void)setAutoAssociateWiFiAsForegroundClient:(BOOL)arg1 ;
-(NSRecursiveLock *)lock;
-(void)_handlePotentialDeviceChange:(WiFiDeviceClientRef)arg1 ;
-(void)setDynamicStore:(void*)arg1 ;
-(void)_updateIsWiFiEnabled;
-(void)setRunLoopSource:(CFRunLoopSourceRef)arg1 ;
-(BOOL)isWoWEnabled;
-(void*)dynamicStore;
-(NSNumber *)wiFiScaledRSSI;
-(void)addWiFiAutoAssociationClientToken:(id)arg1 ;
-(void)dealloc;
-(void*)currentNetwork;
-(void)setDelegateMap:(NSHashTable *)arg1 ;
-(BOOL)willTryToSearchForWiFiNetwork;
-(void)_performCurrentNetworkBlock:(/*^block*/id)arg1 withDevice:(WiFiDeviceClientRef)arg2 async:(BOOL)arg3 ;
-(NSString *)currentSSID;
-(void)_setCurrentNetwork:(WiFiNetworkRef)arg1 ;
-(BOOL)isWiFiAssociated;
-(void)setIncomingCallbacksQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(BOOL)willTryToAutoAssociateWiFiNetwork;
-(void)_performDeviceBlock:(/*^block*/id)arg1 ;
-(void)setLastWiFiPowerInfo:(NSDictionary *)arg1 ;
-(id)_ssidFromNetwork:(WiFiNetworkRef)arg1 ;
-(void)setWifiDevice:(void*)arg1 ;
-(id)init;
-(NSNumber *)wiFiSignalStrength;
-(BOOL)autoAssociateWiFi;
-(NSHashTable *)wowClients;
-(NSHashTable *)delegateMap;
-(BOOL)isHostingWiFiHotSpot;
-(NSRunLoop *)wifiRunLoop;
-(void)_adjustWiFiAutoAssociation;
-(BOOL)autoAssociateWiFiAsForegroundClient;
-(NSMutableSet *)wiFiAutoAssociationTokens;
-(void)setIsPrimaryCellularCached:(BOOL)arg1 ;
-(void)setWifiRunLoop:(NSRunLoop *)arg1 ;
-(BOOL)_isPrimaryCellular;
-(double)_wifiMeasurementErrorForInterval:(double)arg1 ;
-(NSObject*<OS_dispatch_queue>)incomingCallbacksQueue;
-(NSNumber *)wiFiScaledRate;
-(void)currentWiFiNetworkPowerUsageWithCompletion:(/*^block*/id)arg1 ;
-(BOOL)isWiFiEnabled;
-(void)setWiFiAutoAssociationTokens:(NSMutableSet *)arg1 ;
-(void)_updateInitialWiFiState;
-(void*)wifiDevice;
-(NSDictionary *)lastWiFiPowerInfo;
-(void)_performDeviceBlock:(/*^block*/id)arg1 useCache:(BOOL)arg2 ;
-(void)_performCurrentNetworkBlock:(/*^block*/id)arg1 ;
-(void)setWowClients:(NSHashTable *)arg1 ;
-(CFRunLoopSourceRef)runLoopSource;
-(BOOL)isWiFiCaptive;
-(void)removeWiFiAutoAssociationClientToken:(id)arg1 ;
-(void)_performCurrentNetworkBlock:(/*^block*/id)arg1 withDevice:(WiFiDeviceClientRef)arg2 ;
-(void)setWifiThread:(NSThread *)arg1 ;
-(BOOL)isPrimaryCellularCached;
-(int)linkToken;
-(void)setCurrentNetwork:(void*)arg1 ;
-(void)_updateIsWiFiAssociatedAsync:(BOOL)arg1 ;
-(void)addWoWClient:(id)arg1 ;
-(void)_handleDevicePowerCallback;
-(BOOL)hasWiFiAutoAssociationClientToken:(id)arg1 ;
-(void)_setupWifiNotifications;
-(void)_handleDeviceAttachedCallback;
-(void*)wifiManager;
-(void)removeWoWClient:(id)arg1 ;
-(BOOL)hasWoWClient:(id)arg1 ;
-(void)setWifiManager:(void*)arg1 ;
-(void)_performBackgroundInit;
-(void)_performPowerReading;
@end


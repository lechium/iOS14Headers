/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:43:14 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/IMCore.framework/IMCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <IMCore/IMCore-Structs.h>
#import <IMCore/IMSystemMonitorListener.h>

@class IMPeople, NSRecursiveLock, NSMapTable, IMHandle, NSArray, NSString, NSDictionary, NSMutableDictionary, NSDate, NSData, NSAttributedString, IMServiceImpl;

@interface IMAccount : NSObject <IMSystemMonitorListener> {

	IMPeople* _buddyList;
	NSRecursiveLock* _lock;
	NSMapTable* _imHandles;
	IMHandle* _loginIMHandle;
	NSArray* _cachedAllowList;
	NSArray* _cachedBlockList;
	NSString* _loginID;
	NSString* _displayName;
	NSString* _uniqueID;
	long long _accountType;
	NSString* _strippedLogin;
	NSDictionary* _data;
	NSMutableDictionary* _dataChanges;
	NSMutableDictionary* _localCache;
	NSDictionary* _profile;
	NSMutableDictionary* _profileChanges;
	NSString* _countryCode;
	long long _profileStatus;
	NSDictionary* _accountPreferences;
	NSMutableDictionary* _accountPreferencesChanges;
	NSDictionary* _accountPersistentProperties;
	NSMutableDictionary* _accountPersistentPropertiesChanges;
	NSArray* _groups;
	NSMutableDictionary* _sortOrders;
	NSDictionary* _members;
	NSMutableDictionary* _coalescedChanges;
	NSArray* _targetGroupState;
	NSArray* _lastReceivedGroupState;
	NSDictionary* _subtypeInfo;
	NSArray* _vettedAliases;
	NSArray* _aliases;
	unsigned long long _myStatus;
	NSMutableDictionary* _currentAccountStatus;
	NSString* _myStatusMessage;
	NSDictionary* _myNowPlaying;
	NSDate* _myIdleSince;
	NSData* _myPictureData;
	NSData* _accountImageData;
	unsigned long long _capabilities;
	unsigned long long _defaultHandleCapabilities;
	BOOL _hasCheckedDefaultHandleCapabilities;
	NSAttributedString* _myProfile;
	long long _registrationStatus;
	long long _registrationFailureReason;
	NSDictionary* _registrationAlertInfo;
	unsigned long long _loginStatus;
	BOOL _isActive;
	BOOL _hasPostedOfflineNotification;
	BOOL _justLoggedIn;
	BOOL _useMeCardName;
	unsigned _cachedBlockingMode;
	BOOL _blockIdleStatus;
	BOOL _syncedWithRemoteBuddyList;
	BOOL _hasReceivedSync;
	int _numHolding;
	int _coalesceCount;
	BOOL _needToCheckForWatchedIMHandles;
	BOOL _iconChecked;
	BOOL _hasBeenRemoved;
	IMServiceImpl* _service;
	id _smallImage;
	id _accountImage;
	BOOL _asleep;

}

@property (nonatomic,readonly) BOOL isAwaitingTargetGroupState; 
@property (nonatomic,readonly) BOOL hasTargetGroupStateBeenMet; 
@property (nonatomic,readonly) BOOL hasSyncedWithRemoteBuddies; 
@property (nonatomic,readonly) NSDictionary * _persistentProperties; 
@property (nonatomic,readonly) BOOL isAsleep; 
@property (nonatomic,readonly) BOOL _isUsableForSending; 
@property (nonatomic,__weak,readonly) IMServiceImpl * service;                           //@synthesize service=_service - In the implementation block
@property (nonatomic,readonly) NSDictionary * dictionary; 
@property (nonatomic,readonly) NSString * uniqueID; 
@property (nonatomic,readonly) NSString * name; 
@property (nonatomic,readonly) NSString * shortName; 
@property (nonatomic,readonly) NSString * serviceName; 
@property (nonatomic,readonly) NSString * internalName; 
@property (nonatomic,readonly) NSArray * emailDomains; 
@property (nonatomic,readonly) NSData * accountImageData; 
@property (nonatomic,readonly) NSDictionary * accountSubtypeInfo;                        //@synthesize subtypeInfo=_subtypeInfo - In the implementation block
@property (nonatomic,readonly) BOOL supportsRegistration; 
@property (nonatomic,readonly) long long registrationStatus; 
@property (nonatomic,readonly) long long registrationFailureReason; 
@property (nonatomic,readonly) NSDictionary * registrationFailureAlertInfo; 
@property (nonatomic,readonly) BOOL isRegistered; 
@property (nonatomic,readonly) BOOL isOperational; 
@property (nonatomic,readonly) BOOL canSendMessages; 
@property (nonatomic,readonly) BOOL supportsAuthorization; 
@property (nonatomic,readonly) NSString * authorizationID; 
@property (nonatomic,readonly) NSString * authorizationToken; 
@property (nonatomic,readonly) NSDictionary * profileInfo; 
@property (nonatomic,readonly) NSString * countryCode; 
@property (getter=isMakoAccount,nonatomic,readonly) BOOL makoAccount; 
@property (nonatomic,readonly) NSArray * aliases; 
@property (nonatomic,readonly) NSArray * vettedAliases; 
@property (nonatomic,readonly) NSArray * aliasesToRegister; 
@property (nonatomic,copy) NSString * displayName; 
@property (nonatomic,readonly) long long accountType; 
@property (nonatomic,readonly) BOOL hasCustomDescription; 
@property (nonatomic,retain) NSString * accountDescription; 
@property (nonatomic,readonly) unsigned long long loginStatus;                           //@synthesize loginStatus=_loginStatus - In the implementation block
@property (nonatomic,readonly) NSString * loginStatusMessage; 
@property (nonatomic,readonly) unsigned long long myStatus;                              //@synthesize myStatus=_myStatus - In the implementation block
@property (nonatomic,readonly) NSString * myStatusMessage;                               //@synthesize myStatusMessage=_myStatusMessage - In the implementation block
@property (nonatomic,readonly) NSDictionary * myStatusDictionary;                        //@synthesize currentAccountStatus=_currentAccountStatus - In the implementation block
@property (nonatomic,readonly) NSDate * myIdleSince;                                     //@synthesize myIdleSince=_myIdleSince - In the implementation block
@property (nonatomic,readonly) NSData * myPictureData;                                   //@synthesize myPictureData=_myPictureData - In the implementation block
@property (nonatomic,readonly) NSString * myNowPlayingString; 
@property (nonatomic,readonly) NSAttributedString * myProfile;                           //@synthesize myProfile=_myProfile - In the implementation block
@property (nonatomic,readonly) BOOL isManaged; 
@property (assign,nonatomic) BOOL autoLogin; 
@property (nonatomic,retain) NSString * login;                                           //@synthesize loginID=_loginID - In the implementation block
@property (nonatomic,readonly) NSString * strippedLogin;                                 //@synthesize strippedLogin=_strippedLogin - In the implementation block
@property (nonatomic,readonly) NSString * server; 
@property (nonatomic,readonly) long long port; 
@property (nonatomic,readonly) BOOL useSSL; 
@property (assign,nonatomic) BOOL goIdle; 
@property (assign,nonatomic) BOOL allowsVCRelay; 
@property (nonatomic,readonly) BOOL allowsSMSRelay; 
@property (nonatomic,readonly) BOOL allowsMMSRelay; 
@property (nonatomic,readonly) BOOL isSMSRelayCapable; 
@property (nonatomic,readonly) BOOL isConnecting; 
@property (nonatomic,readonly) BOOL isConnected; 
@property (nonatomic,readonly) BOOL justLoggedIn;                                        //@synthesize justLoggedIn=_justLoggedIn - In the implementation block
@property (assign,getter=isInvisible,nonatomic) BOOL invisible; 
@property (nonatomic,readonly) BOOL isActive;                                            //@synthesize isActive=_isActive - In the implementation block
@property (nonatomic,readonly) BOOL canActivate; 
@property (nonatomic,readonly) unsigned long long capabilities;                          //@synthesize capabilities=_capabilities - In the implementation block
@property (nonatomic,readonly) BOOL handlesChatInvites; 
@property (nonatomic,readonly) BOOL validLogin; 
@property (nonatomic,readonly) BOOL validPort; 
@property (nonatomic,readonly) BOOL validServer; 
@property (nonatomic,readonly) long long invalidSettings; 
@property (nonatomic,readonly) NSString * password; 
@property (nonatomic,readonly) NSString * temporaryPassword; 
@property (nonatomic,readonly) NSArray * groupList; 
@property (nonatomic,readonly) IMPeople * buddyList;                                     //@synthesize buddyList=_buddyList - In the implementation block
@property (nonatomic,readonly) BOOL makingChanges; 
@property (nonatomic,retain) NSArray * blockList; 
@property (nonatomic,retain) NSArray * allowList; 
@property (assign,nonatomic) unsigned blockingMode;                                      //@synthesize cachedBlockingMode=_cachedBlockingMode - In the implementation block
@property (assign,nonatomic) BOOL blockIdleStatus;                                       //@synthesize blockIdleStatus=_blockIdleStatus - In the implementation block
@property (assign,nonatomic) BOOL blockOtherAddresses; 
@property (nonatomic,readonly) NSDictionary * accountPreferences; 
@property (nonatomic,readonly) NSArray * arrayOfAllIMHandles; 
@property (nonatomic,readonly) id loginIMHandle;                                         //@synthesize loginIMHandle=_loginIMHandle - In the implementation block
+(id)arrayOfAllIMHandles;
+(id)passwordForAccount:(id)arg1 forServiceName:(id)arg2 ;
+(void)setPassword:(id)arg1 forAccount:(id)arg2 forAuthID:(id)arg3 forServiceName:(id)arg4 ;
+(void)removePasswordForAccount:(id)arg1 forServiceName:(id)arg2 ;
+(id)temporaryPasswordForAccount:(id)arg1 forAuthID:(id)arg2 forServiceName:(id)arg3 ;
+(void)setTemporaryPassword:(id)arg1 forAccount:(id)arg2 forAuthID:(id)arg3 forServiceName:(id)arg4 ;
+(void)removeTemporaryPasswordForAccount:(id)arg1 forServiceName:(id)arg2 ;
+(id)_groupSummaryFromGroupList:(id)arg1 ;
+(id)nameOfLoginStatus:(unsigned long long)arg1 ;
+(id)allBuddyListIMHandles;
-(id)__ck_handlesFromAddressStrings:(id)arg1 ;
-(unsigned long long)loginStatus;
-(NSArray *)emailDomains;
-(BOOL)validServer;
-(id)profileStringForKey:(id)arg1 ;
-(void)updateWithTargetGroups;
-(NSDictionary *)accountPreferences;
-(id)initWithService:(id)arg1 ;
-(BOOL)addAliases:(id)arg1 ;
-(id)_aliases;
-(BOOL)allowsSMSRelay;
-(NSArray *)vettedAliases;
-(void)stopWatchingIMHandle:(id)arg1 ;
-(BOOL)autoLogin;
-(long long)typeForAlias:(id)arg1 ;
-(NSArray *)allowList;
-(id)aliasesForType:(long long)arg1 ;
-(BOOL)canSendMessages;
-(void)setBlockList:(NSArray *)arg1 ;
-(void)requestGroups;
-(BOOL)validPort;
-(long long)port;
-(BOOL)equalID:(id)arg1 andID:(id)arg2 ;
-(NSArray *)aliases;
-(void)startWatchingIMHandle:(id)arg1 ;
-(void)loginAccount;
-(BOOL)isMakoAccount;
-(BOOL)isRegistered;
-(BOOL)removeAlias:(id)arg1 ;
-(void)enrollDeviceInSMSRelay:(id)arg1 ;
-(BOOL)useSSL;
-(void)setGoIdle:(BOOL)arg1 ;
-(id)groupMembers:(id)arg1 ;
-(NSDate *)myIdleSince;
-(BOOL)goIdle;
-(BOOL)boolForPreferenceKey:(id)arg1 ;
-(void)_ensureGroupsExists:(id)arg1 ;
-(BOOL)addPeople:(id)arg1 toGroups:(id)arg2 atLocation:(long long)arg3 ;
-(void)_setString:(id)arg1 forKey:(id)arg2 ;
-(BOOL)makingChanges;
-(BOOL)handlesChatInvites;
-(id)canonicalFormOfID:(id)arg1 ;
-(BOOL)supportsRegistration;
-(BOOL)supportsAuthorization;
-(long long)compareNames:(id)arg1 ;
-(BOOL)isConnecting;
-(id)propertiesForGroup:(id)arg1 ;
-(void)beginChanges;
-(NSString *)internalName;
-(void)setString:(id)arg1 forKey:(id)arg2 ;
-(void)clearServiceCaches;
-(void)_setInteger:(long long)arg1 forKey:(id)arg2 ;
-(void)setAccountDescription:(NSString *)arg1 ;
-(NSString *)accountDescription;
-(BOOL)removePeople:(id)arg1 fromGroups:(id)arg2 ;
-(id)objectForPreferenceKey:(id)arg1 ;
-(id)initWithUniqueID:(id)arg1 service:(id)arg2 ;
-(BOOL)setProfileValue:(id)arg1 forKey:(id)arg2 ;
-(void)_watchBuddiesIfNecessary;
-(BOOL)isInvisible;
-(void)_registrationStatusChanged:(id)arg1 ;
-(void)_removePersistentPropertyForKey:(id)arg1 ;
-(id)imHandleWithInfo:(id)arg1 ;
-(void)reorderGroups:(id)arg1 ;
-(BOOL)isConnected;
-(void)removeObjectForPreferenceKey:(id)arg1 ;
-(long long)compareLoginStatus:(id)arg1 ;
-(BOOL)allowsMMSRelay;
-(void)_setPersistentPropertyObject:(id)arg1 forKey:(id)arg2 ;
-(id)defaultChatSuffix;
-(void)setAutoLogin:(BOOL)arg1 ;
-(NSString *)shortName;
-(NSString *)displayName;
-(unsigned long long)capabilities;
-(id)existingIMHandleWithInfo:(id)arg1 alreadyCanonical:(BOOL)arg2 ;
-(BOOL)validateProfile;
-(long long)accountType;
-(long long)registrationStatus;
-(void)systemDidWake;
-(void)requestBuddyListAuthorizationFromIMHandle:(id)arg1 ;
-(BOOL)hasAlias:(id)arg1 type:(long long)arg2 ;
-(long long)profileValidationStatus;
-(void)setDisplayName:(NSString *)arg1 ;
-(void)forgetAllWatches;
-(void)setTargetGroupsState:(id)arg1 ;
-(long long)validationStatusForAlias:(id)arg1 ;
-(void)loadFromDictionary:(id)arg1 ;
-(id)dictionaryDataForPreferenceKey:(id)arg1 ;
-(void)enrollSelfDeviceInSMSRelay;
-(BOOL)removeProfileValueForKey:(id)arg1 ;
-(id)_imHandleWithID:(id)arg1 alreadyCanonical:(BOOL)arg2 originalID:(id)arg3 countryCode:(id)arg4 ;
-(void)setCachedBlockList:(id)arg1 ;
-(NSString *)strippedLogin;
-(Class)imHandleClass;
-(NSString *)countryCode;
-(BOOL)validateAlias:(id)arg1 ;
-(id)stringForKey:(id)arg1 ;
-(void)holdBuddyUpdates;
-(NSDictionary *)accountSubtypeInfo;
-(BOOL)hasCapability:(unsigned long long)arg1 ;
-(long long)validationErrorReasonForAlias:(id)arg1 ;
-(void)accountDidDeactivate;
-(id)existingIMHandleWithInfo:(id)arg1 ;
-(long long)integerForKey:(id)arg1 ;
-(BOOL)registerAccount;
-(NSString *)loginStatusMessage;
-(unsigned long long)defaultHandleCapabilities;
-(BOOL)removeAlias:(id)arg1 type:(long long)arg2 ;
-(void)setAllowsVCRelay:(BOOL)arg1 ;
-(BOOL)addAlias:(id)arg1 type:(long long)arg2 ;
-(void)hookupToDaemon;
-(BOOL)justLoggedIn;
-(void)setInteger:(long long)arg1 forKey:(id)arg2 ;
-(NSData *)accountImageData;
-(BOOL)hasCustomDescription;
-(void)setCachedAllowList:(id)arg1 ;
-(NSString *)login;
-(void)dealloc;
-(BOOL)_updateDisplayName:(id)arg1 ;
-(void)_invalidateCachedAliases;
-(BOOL)emailAddressIsID:(id)arg1 ;
-(long long)compareAccountNames:(id)arg1 ;
-(long long)compareIDs:(id)arg1 ;
-(id)profileValueForKey:(id)arg1 ;
-(void)accountWillBeRemoved;
-(void)unregisterIMHandleWithID:(id)arg1 ;
-(void)setCachedBlockIdleStatus:(BOOL)arg1 ;
-(void)changeBuddyList:(id)arg1 add:(BOOL)arg2 groups:(id)arg3 atLocation:(long long)arg4 ;
-(void)setObject:(id)arg1 forKey:(id)arg2 ;
-(BOOL)allowsVCRelay;
-(BOOL)_isUsableForSending;
-(void)_clearImageCache;
-(NSDictionary *)registrationFailureAlertInfo;
-(id)loginIMHandle;
-(void)setDictionaryData:(id)arg1 forKey:(id)arg2 ;
-(void)resetToDefaults;
-(void)nowLoggedOut;
-(id)handlesForCNContact:(id)arg1 ;
-(void)_setObject:(id)arg1 forKey:(id)arg2 ;
-(void)setInteger:(int)arg1 forPreferenceKey:(id)arg2 ;
-(void)setUniqueID:(NSString *)arg1 ;
-(void)_markHasSyncedWithRemoteBuddies;
-(BOOL)isAwaitingTargetGroupState;
-(void)removeTemporaryPassword;
-(void)setCurrentAccountStatus:(id)arg1 ;
-(void)_updateProfileInfo:(id)arg1 ;
-(BOOL)isActive;
-(id)existingIMHandleWithID:(id)arg1 countryCode:(id)arg2 ;
-(void)setIMAccountLoginStatus:(unsigned long long)arg1 errorMessage:(id)arg2 ;
-(void)addBuddyToBuddyList:(id)arg1 ;
-(NSString *)authorizationToken;
-(NSDictionary *)profileInfo;
-(id)canonicalFormOfID:(id)arg1 countryCode:(id)arg2 ;
-(NSString *)temporaryPassword;
-(void)_removeObjectForKey:(id)arg1 ;
-(BOOL)isSMSRelayCapable;
-(void)_notJustLoggedIn;
-(NSString *)uniqueID;
-(void)nowLoggedIn;
-(void)setInvisible:(BOOL)arg1 ;
-(BOOL)authenticateAccount;
-(void)resumeBuddyUpdates;
-(id)memberGroups:(id)arg1 ;
-(BOOL)isManaged;
-(NSArray *)groupList;
-(BOOL)isAsleep;
-(void)reorderGroup:(id)arg1 order:(id)arg2 ;
-(void)recalculateSubtypeInfo;
-(void)setBuddyListAuthorization:(BOOL)arg1 forIMHandle:(id)arg2 ;
-(void)setIMAccountLoginStatus:(unsigned long long)arg1 errorMessage:(id)arg2 reason:(int)arg3 ;
-(BOOL)hasTargetGroupStateBeenMet;
-(BOOL)updateAuthorizationCredentials:(id)arg1 token:(id)arg2 ;
-(NSArray *)aliasesToRegister;
-(void)_setLocalCachedObject:(id)arg1 forKey:(id)arg2 ;
-(void)_refreshLoginIMHandle;
-(void)accountDidBecomeActive;
-(unsigned)blockingMode;
-(void)watchBuddiesIfNecessary;
-(id)_persistentPropertyForKey:(id)arg1 ;
-(void)setBool:(BOOL)arg1 forKey:(id)arg2 ;
-(NSArray *)blockList;
-(void)buddyPropertiesChanged:(id)arg1 ;
-(void)syncWithRemoteBuddies;
-(long long)invalidSettings;
-(BOOL)addAlias:(id)arg1 ;
-(id)stringForPreferenceKey:(id)arg1 ;
-(long long)validationStatusForAlias:(id)arg1 type:(long long)arg2 ;
-(BOOL)setProfileString:(id)arg1 forKey:(id)arg2 ;
-(id)_aliasInfoForAlias:(id)arg1 ;
-(NSString *)myStatusMessage;
-(void)setBlockOtherAddresses:(BOOL)arg1 ;
-(id)imHandleWithInfo:(id)arg1 alreadyCanonical:(BOOL)arg2 ;
-(void)disconnectAllIMHandles;
-(NSString *)myNowPlayingString;
-(void)setAllowList:(NSArray *)arg1 ;
-(void)setIsActive:(BOOL)arg1 ;
-(void)unEnrollDeviceInSMSRelay:(id)arg1 ;
-(void)_updateMyStatus:(unsigned long long)arg1 message:(id)arg2 ;
-(BOOL)blockOtherAddresses;
-(BOOL)validateAlias:(id)arg1 type:(long long)arg2 ;
-(IMPeople *)buddyList;
-(void)blockMessages:(BOOL)arg1 fromID:(id)arg2 ;
-(IMServiceImpl *)service;
-(void)imHandle:(id)arg1 buddyStatusChanged:(BOOL)arg2 ;
-(NSDictionary *)myStatusDictionary;
-(void)setIMAccountLoginStatus:(unsigned long long)arg1 ;
-(id)_serverWithSSL:(BOOL)arg1 ;
-(void)removeObjectForKey:(id)arg1 ;
-(long long)registrationFailureReason;
-(BOOL)addIMHandle:(id)arg1 toGroups:(id)arg2 atLocation:(long long)arg3 ;
-(void)setWaitForTargetState;
-(NSData *)myPictureData;
-(BOOL)unvalidateAliases:(id)arg1 ;
-(void)_loadFromDictionary:(id)arg1 force:(BOOL)arg2 ;
-(void)_handleDeliveredCommand:(id)arg1 withProperties:(id)arg2 fromBuddyInfo:(id)arg3 ;
-(void)loginStatusChanged:(unsigned)arg1 message:(id)arg2 reason:(int)arg3 properties:(id)arg4 ;
-(id)dictionaryDataForKey:(id)arg1 ;
-(BOOL)validLogin;
-(void)_loginWithAutoLogin:(BOOL)arg1 ;
-(void)endChanges;
-(id)existingIMHandleWithID:(id)arg1 ;
-(NSAttributedString *)myProfile;
-(void)removePassword;
-(void)setTemporaryPassword:(NSString *)arg1 ;
-(BOOL)unregisterAccount;
-(id)imHandleWithID:(id)arg1 countryCode:(id)arg2 ;
-(unsigned long long)sortOrderForIMHandle:(id)arg1 inGroup:(id)arg2 ;
-(NSString *)server;
-(BOOL)removeIMHandle:(id)arg1 fromGroups:(id)arg2 ;
-(void)buddyPictureChanged:(id)arg1 imageData:(id)arg2 imageHash:(id)arg3 ;
-(long long)compareServices:(id)arg1 ;
-(unsigned long long)myStatus;
-(void)setCachedBlockingMode:(unsigned)arg1 ;
-(void)setDictionaryData:(id)arg1 forPreferenceKey:(id)arg2 ;
-(NSString *)authorizationID;
-(NSString *)password;
-(long long)profileValidationErrorReason;
-(void)clearTargetState;
-(NSDictionary *)_persistentProperties;
-(void)renameGroup:(id)arg1 to:(id)arg2 ;
-(void)_setDictionaryData:(id)arg1 forKey:(id)arg2 ;
-(void)setLogin:(NSString *)arg1 ;
-(BOOL)canActivate;
-(BOOL)validateAliases:(id)arg1 ;
-(void)registerIMHandle:(id)arg1 ;
-(void)groupsChanged:(id)arg1 error:(id)arg2 ;
-(void)_applyChangesToTemporaryCache:(id)arg1 ;
-(void)writeSettings;
-(void)targetGroupStateTimeout;
-(NSString *)serviceName;
-(FZChatRoomValidity)validityOfChatRoomName:(id)arg1 ;
-(void)_syncWithRemoteBuddies;
-(BOOL)hasSyncedWithRemoteBuddies;
-(void)setPassword:(NSString *)arg1 ;
-(BOOL)_aliasIsVisible:(id)arg1 ;
-(void)requestProperty:(id)arg1 ofIMHandle:(id)arg2 ;
-(BOOL)hasAlias:(id)arg1 ;
-(BOOL)removeAliases:(id)arg1 ;
-(void)setBool:(BOOL)arg1 forPreferenceKey:(id)arg2 ;
-(void)setBlockingMode:(unsigned)arg1 ;
-(void)setValue:(id)arg1 ofExtraProperty:(id)arg2 ofIMHandle:(id)arg3 ;
-(BOOL)requestNewAuthorizationCredentials;
-(void)_updateLogin:(id)arg1 ;
-(id)imHandleWithID:(id)arg1 alreadyCanonical:(BOOL)arg2 ;
-(BOOL)blockIdleStatus;
-(void)updateCapabilities:(unsigned long long)arg1 ;
-(void)_serviceDidReconnect:(id)arg1 ;
-(void)autoLoginAccount;
-(void)_updateRegistrationStatus:(int)arg1 error:(int)arg2 info:(id)arg3 ;
-(id)objectForKey:(id)arg1 ;
-(NSString *)name;
-(void)setBlockIdleStatus:(BOOL)arg1 ;
-(id)recalculatedSubtypeInfo;
-(id)existingIMHandleWithID:(id)arg1 alreadyCanonical:(BOOL)arg2 ;
-(void)_serviceDidDisconnect:(id)arg1 ;
-(void)setObject:(id)arg1 forPreferenceKey:(id)arg2 ;
-(void)setBuddyProperties:(id)arg1 buddyPictures:(id)arg2 ;
-(NSDictionary *)dictionary;
-(void)_setBool:(BOOL)arg1 forKey:(id)arg2 ;
-(void)logoutAccount;
-(id)_statuses;
-(void)systemWillSleep;
-(void)handleSubscriptionRequestFrom:(id)arg1 withMessage:(id)arg2 ;
-(void)_handleIncomingCommand:(id)arg1 withProperties:(id)arg2 fromBuddyInfo:(id)arg3 ;
-(void)setString:(id)arg1 forPreferenceKey:(id)arg2 ;
-(BOOL)unvalidateAlias:(id)arg1 ;
-(long long)compareStatus:(id)arg1 ;
-(id)description;
-(void)_resumeBuddyUpdatesNow;
-(long long)validationErrorReasonForAlias:(id)arg1 type:(long long)arg2 ;
-(id)imHandleWithID:(id)arg1 ;
-(NSArray *)arrayOfAllIMHandles;
-(int)integerForPreferenceKey:(id)arg1 ;
-(void)_serviceDidConnect:(id)arg1 ;
-(BOOL)boolForKey:(id)arg1 ;
-(id)chatIDForRoomName:(id)arg1 ;
-(BOOL)isOperational;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:45:06 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <NeutrinoCore/NeutrinoCore-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@interface NUStoragePoolStats : NSObject <NSCopying> {

	long long _peakTotalBytes;
	long long _usedCount;
	long long _usedBytes;
	long long _peakUsedBytes;
	long long _nonPurgeableCount;
	long long _nonPurgeableBytes;
	long long _peakNonPurgeableBytes;
	long long _volatileCount;
	long long _volatileBytes;
	long long _peakVolatileBytes;
	long long _discardedCount;
	long long _migrationCount;
	long long _migrationBytes;
	long long _purgedCount;
	long long _purgedBytes;
	long long _requestCount;
	long long _reusedNonPurgeableCount;
	long long _reusedVolatileCount;

}

@property (nonatomic,readonly) long long totalCount; 
@property (nonatomic,readonly) long long totalBytes; 
@property (nonatomic,readonly) long long peakTotalBytes;                     //@synthesize peakTotalBytes=_peakTotalBytes - In the implementation block
@property (assign,nonatomic) long long usedCount;                            //@synthesize usedCount=_usedCount - In the implementation block
@property (assign,nonatomic) long long usedBytes;                            //@synthesize usedBytes=_usedBytes - In the implementation block
@property (nonatomic,readonly) long long peakUsedBytes;                      //@synthesize peakUsedBytes=_peakUsedBytes - In the implementation block
@property (assign,nonatomic) long long nonPurgeableCount;                    //@synthesize nonPurgeableCount=_nonPurgeableCount - In the implementation block
@property (assign,nonatomic) long long nonPurgeableBytes;                    //@synthesize nonPurgeableBytes=_nonPurgeableBytes - In the implementation block
@property (nonatomic,readonly) long long peakNonPurgeableBytes;              //@synthesize peakNonPurgeableBytes=_peakNonPurgeableBytes - In the implementation block
@property (assign,nonatomic) long long volatileCount;                        //@synthesize volatileCount=_volatileCount - In the implementation block
@property (assign,nonatomic) long long volatileBytes;                        //@synthesize volatileBytes=_volatileBytes - In the implementation block
@property (nonatomic,readonly) long long peakVolatileBytes;                  //@synthesize peakVolatileBytes=_peakVolatileBytes - In the implementation block
@property (assign,nonatomic) long long discardedCount;                       //@synthesize discardedCount=_discardedCount - In the implementation block
@property (assign,nonatomic) long long migrationCount;                       //@synthesize migrationCount=_migrationCount - In the implementation block
@property (assign,nonatomic) long long migrationBytes;                       //@synthesize migrationBytes=_migrationBytes - In the implementation block
@property (assign,nonatomic) long long purgedCount;                          //@synthesize purgedCount=_purgedCount - In the implementation block
@property (assign,nonatomic) long long purgedBytes;                          //@synthesize purgedBytes=_purgedBytes - In the implementation block
@property (assign,nonatomic) long long requestCount;                         //@synthesize requestCount=_requestCount - In the implementation block
@property (assign,nonatomic) long long reusedNonPurgeableCount;              //@synthesize reusedNonPurgeableCount=_reusedNonPurgeableCount - In the implementation block
@property (assign,nonatomic) long long reusedVolatileCount;                  //@synthesize reusedVolatileCount=_reusedVolatileCount - In the implementation block
@property (nonatomic,readonly) long long reusedCount; 
@property (nonatomic,readonly) float reusedRate; 
-(long long)requestCount;
-(void)setRequestCount:(long long)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(long long)totalBytes;
-(long long)totalCount;
-(long long)usedBytes;
-(id)description;
-(void)setUsedBytes:(long long)arg1 ;
-(void)setNonPurgeableBytes:(long long)arg1 ;
-(void)setVolatileBytes:(long long)arg1 ;
-(long long)reusedCount;
-(float)reusedRate;
-(long long)peakTotalBytes;
-(long long)usedCount;
-(void)setUsedCount:(long long)arg1 ;
-(long long)peakUsedBytes;
-(long long)nonPurgeableCount;
-(void)setNonPurgeableCount:(long long)arg1 ;
-(long long)nonPurgeableBytes;
-(long long)peakNonPurgeableBytes;
-(long long)volatileCount;
-(void)setVolatileCount:(long long)arg1 ;
-(long long)volatileBytes;
-(long long)peakVolatileBytes;
-(long long)discardedCount;
-(void)setDiscardedCount:(long long)arg1 ;
-(long long)migrationCount;
-(void)setMigrationCount:(long long)arg1 ;
-(long long)migrationBytes;
-(void)setMigrationBytes:(long long)arg1 ;
-(long long)purgedCount;
-(void)setPurgedCount:(long long)arg1 ;
-(long long)purgedBytes;
-(void)setPurgedBytes:(long long)arg1 ;
-(long long)reusedNonPurgeableCount;
-(void)setReusedNonPurgeableCount:(long long)arg1 ;
-(long long)reusedVolatileCount;
-(void)setReusedVolatileCount:(long long)arg1 ;
@end


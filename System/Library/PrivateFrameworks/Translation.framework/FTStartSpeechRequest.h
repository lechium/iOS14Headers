/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:42:13 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/Translation.framework/Translation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Translation/Translation-Structs.h>
#import <libobjc.A.dylib/FLTBFBufferAccessor.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSMutableDictionary, NSData, NSString;

@interface FTStartSpeechRequest : NSObject <FLTBFBufferAccessor, NSCopying> {

	NSMutableDictionary* _storage;
	NSData* _data;
	const StartSpeechRequest* _root;

}

@property (nonatomic,readonly) NSString * speech_id; 
@property (nonatomic,readonly) NSString * session_id; 
@property (nonatomic,readonly) NSString * language; 
@property (nonatomic,readonly) NSString * task_name; 
@property (nonatomic,readonly) long long codec; 
@property (nonatomic,readonly) BOOL stream_results; 
@property (nonatomic,readonly) BOOL enable_server_side_endpoint; 
@property (nonatomic,readonly) NSString * device_type; 
@property (nonatomic,readonly) NSString * device_os; 
@property (nonatomic,readonly) NSString * mic_type; 
@property (nonatomic,readonly) NSString * udm_host; 
@property (nonatomic,readonly) int udm_port; 
@property (nonatomic,readonly) BOOL tandem_mode; 
@property (nonatomic,readonly) BOOL store_audio; 
@property (nonatomic,readonly) BOOL stream_unstable_results; 
@property (nonatomic,readonly) NSString * request_locale; 
@property (nonatomic,readonly) long long end_point_mode; 
@property (nonatomic,readonly) int start_audio_bookmark; 
@property (nonatomic,readonly) BOOL is_far_field; 
@property (nonatomic,readonly) BOOL enable_utterance_detection; 
@property (nonatomic,readonly) BOOL enable_endpoint_candidate; 
@property (nonatomic,readonly) unsigned long long start_recognition_at; 
@property (nonatomic,readonly) unsigned long long start_endpointing_at; 
@property (nonatomic,readonly) BOOL enable_hybrid_endpoint; 
@property (nonatomic,readonly) NSString * client_endpointer_model_version; 
@property (nonatomic,readonly) NSString * keyboard_identifier; 
@property (nonatomic,readonly) NSString * input_origin; 
@property (nonatomic,readonly) unsigned initial_recognition_candidate_id; 
@property (nonatomic,readonly) BOOL disable_auto_punctuation; 
@property (nonatomic,readonly) BOOL keyboard_dictation; 
@property (nonatomic,readonly) NSString * experiment_id; 
@property (nonatomic,readonly) long long speech_request_source; 
@property (nonatomic,readonly) NSString * fork_id; 
@property (nonatomic,readonly) NSString * application_name; 
@property (nonatomic,readonly) NSString * metadata; 
-(long long)codec;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSString *)metadata;
-(NSString *)language;
-(NSString *)fork_id;
-(id)initWithFlatbuffData:(id)arg1 root:(const StartSpeechRequest*)arg2 verify:(BOOL)arg3 ;
-(Offset<siri::speech::schema_fb::StartSpeechRequest>)addObjectToBuffer:(FlatBufferBuilder*)arg1 ;
-(id)flatbuffData;
-(id)initWithFlatbuffData:(id)arg1 ;
-(id)initAndVerifyWithFlatbuffData:(id)arg1 ;
-(id)initWithFlatbuffData:(id)arg1 root:(const StartSpeechRequest*)arg2 ;
-(NSString *)request_locale;
-(NSString *)task_name;
-(NSString *)speech_id;
-(BOOL)stream_results;
-(BOOL)enable_server_side_endpoint;
-(NSString *)device_type;
-(NSString *)device_os;
-(BOOL)tandem_mode;
-(BOOL)store_audio;
-(BOOL)stream_unstable_results;
-(NSString *)session_id;
-(long long)end_point_mode;
-(int)start_audio_bookmark;
-(BOOL)is_far_field;
-(BOOL)enable_utterance_detection;
-(BOOL)enable_endpoint_candidate;
-(unsigned long long)start_recognition_at;
-(unsigned long long)start_endpointing_at;
-(BOOL)enable_hybrid_endpoint;
-(NSString *)client_endpointer_model_version;
-(NSString *)keyboard_identifier;
-(NSString *)input_origin;
-(unsigned)initial_recognition_candidate_id;
-(BOOL)disable_auto_punctuation;
-(NSString *)experiment_id;
-(BOOL)keyboard_dictation;
-(long long)speech_request_source;
-(NSString *)application_name;
-(NSString *)mic_type;
-(NSString *)udm_host;
-(int)udm_port;
@end


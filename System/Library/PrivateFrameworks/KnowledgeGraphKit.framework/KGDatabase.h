/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:54:39 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/KnowledgeGraphKit.framework/KnowledgeGraphKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <KnowledgeGraphKit/KnowledgeGraphKit-Structs.h>
@class NSMutableDictionary, NSURL, NSUUID;

@interface KGDatabase : NSObject {

	Database* _database;
	NSMutableDictionary* _labelIdByName;
	NSMutableDictionary* _labelNameById;
	NSMutableDictionary* _attrIdByPropertyName;
	NSMutableDictionary* _propertyNameByAttrId;
	NSURL* _url;

}

@property (nonatomic,readonly) NSURL * url;                                //@synthesize url=_url - In the implementation block
@property (assign,nonatomic) unsigned long long graphVersion; 
@property (nonatomic,readonly) NSUUID * graphIdentifier; 
+(void)initialize;
+(BOOL)copyFromURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3 ;
+(BOOL)destroyAtURL:(id)arg1 error:(id*)arg2 ;
+(void)deleteClosedDatabaseFilesAtStoreURL:(id)arg1 ;
+(BOOL)migrateFromURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3 ;
-(id)initWithURL:(id)arg1 ;
-(Database*)database;
-(BOOL)beginTransaction;
-(void)close;
-(unsigned long long)graphVersion;
-(BOOL)copyToURL:(id)arg1 error:(id*)arg2 ;
-(id)edgeLabels;
-(void)setGraphVersion:(unsigned long long)arg1 ;
-(void)loadPropertyNames;
-(BOOL)rollbackTransaction;
-(id)nodeLabels;
-(id)propertyValueForCursor:(AttributeValueCursor*)arg1 ;
-(BOOL)commitTransaction;
-(NSURL *)url;
-(NSUUID *)graphIdentifier;
-(BOOL)openWithMode:(unsigned long long)arg1 error:(id*)arg2 ;
-(void)addLabelName:(id)arg1 forLabelId:(id)arg2 ;
-(void)loadLabels;
-(unsigned long long)labelIdentifierForLabelName:(id)arg1 insertIfNotFound:(BOOL)arg2 ;
-(id)labelNameForLabelIdentifier:(unsigned long long)arg1 ;
-(void)setPropertyName:(id)arg1 forAttrIdentifier:(id)arg2 ;
-(unsigned long long)attributeIdentifierForPropertyName:(id)arg1 sampleValue:(id)arg2 ;
-(id)propertyNameForAttrIdentifier:(unsigned long long)arg1 ;
-(BOOL)labelIdentifiers:(Bitmap*)arg1 fromLabelNames:(id)arg2 insertIfNotFound:(BOOL)arg3 ;
-(int)degasEdgeDirectionFromKG:(unsigned long long)arg1 ;
-(void)enumerateNodesWithIdentifiers:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)enumerateEdgesWithIdentifiers:(id)arg1 block:(/*^block*/id)arg2 ;
-(NodeCursor*)nodeCursorWithIdentifiers:(id)arg1 ;
-(AttributeValueCursor*)nodeAttributeValueCursorWithIdentifiers:(id)arg1 ;
-(void)_enumerateNodeTableWithNodeCursor:(NodeCursor*)arg1 block:(/*^block*/id)arg2 ;
-(EdgeCursor*)edgeCursorWithIdentifiers:(id)arg1 ;
-(AttributeValueCursor*)edgeAttributeValueCursorWithIdentifiers:(id)arg1 ;
-(void)_enumerateEdgeTableWithEdgeCursor:(EdgeCursor*)arg1 block:(/*^block*/id)arg2 ;
-(void)_enumerateNodesWithNodeCursor:(NodeCursor*)arg1 propertiesCursor:(AttributeValueCursor*)arg2 block:(/*^block*/id)arg3 ;
-(void)_enumerateEdgesWithEdgeCursor:(EdgeCursor*)arg1 propertiesCursor:(AttributeValueCursor*)arg2 block:(/*^block*/id)arg3 ;
-(id)_namesOfLabelsWithIdentifiers:(Bitmap*)arg1 ;
-(void)_enumeratePropertiesForCursor:(AttributeValueCursor*)arg1 block:(/*^block*/id)arg2 ;
-(BOOL)setNodeProperties:(id)arg1 forIdentifier:(unsigned long long)arg2 error:(id*)arg3 ;
-(BOOL)setNodeWeight:(float)arg1 forIdentifier:(unsigned long long)arg2 error:(id*)arg3 ;
-(unsigned long long)addNodeWithIdentifier:(unsigned long long)arg1 labels:(id)arg2 weight:(float)arg3 properties:(id)arg4 error:(id*)arg5 ;
-(BOOL)setEdgeProperties:(id)arg1 forIdentifier:(unsigned long long)arg2 error:(id*)arg3 ;
-(BOOL)setEdgeWeight:(float)arg1 forIdentifier:(unsigned long long)arg2 error:(id*)arg3 ;
-(unsigned long long)addEdgeWithIdentifier:(unsigned long long)arg1 labels:(id)arg2 weight:(float)arg3 properties:(id)arg4 sourceNodeIdentifier:(unsigned long long)arg5 targetNodeIdentifier:(unsigned long long)arg6 error:(id*)arg7 ;
-(BOOL)removeNode:(unsigned long long)arg1 error:(id*)arg2 ;
-(BOOL)removeEdge:(unsigned long long)arg1 error:(id*)arg2 ;
-(BOOL)removeNodes:(id)arg1 error:(id*)arg2 ;
-(BOOL)removeEdges:(id)arg1 error:(id*)arg2 ;
-(id)nodeIdentifiersForPropertyName:(id)arg1 value:(id)arg2 error:(id*)arg3 ;
-(void)distributeValuesByType:(id)arg1 toIntegerValues:(id)arg2 floatValues:(id)arg3 stringValues:(id)arg4 ;
-(id)nodeIdentifiersForPropertyName:(id)arg1 values:(id)arg2 error:(id*)arg3 ;
-(id)filterNodeIdentifiersForPropertyName:(id)arg1 value:(id)arg2 nodeIdentifiers:(id)arg3 error:(id*)arg4 ;
-(id)nodeIdentifiersForLabels:(id)arg1 error:(id*)arg2 ;
-(id)edgeIdentifiersForPropertyName:(id)arg1 value:(id)arg2 error:(id*)arg3 ;
-(id)edgeIdentifiersForPropertyName:(id)arg1 values:(id)arg2 error:(id*)arg3 ;
-(id)filterEdgeIdentifiersForPropertyName:(id)arg1 value:(id)arg2 edgeIdentifiers:(id)arg3 error:(id*)arg4 ;
-(id)edgeIdentifiersForLabels:(id)arg1 error:(id*)arg2 ;
-(id)outEdgeIdentifiersOfNodesWithIdentifiers:(id)arg1 error:(id*)arg2 ;
-(id)inEdgeIdentifiersOfNodesWithIdentifiers:(id)arg1 error:(id*)arg2 ;
-(BOOL)appendNodeIdentifiersOfEdgesWithIdentifiers:(id)arg1 sourceNodeIdentifiers:(id)arg2 targetNodeIdentifiers:(id)arg3 error:(id*)arg4 ;
-(id)allNodeIdentifiersOfEdgesWithIdentifiers:(id)arg1 error:(id*)arg2 ;
-(id)edgeIdentifiersForNodeIdentifier:(unsigned long long)arg1 error:(id*)arg2 ;
-(id)edgeIdentifiersWithLabels:(id)arg1 direction:(unsigned long long)arg2 forNodeIdentifier:(unsigned long long)arg3 error:(id*)arg4 ;
-(void)purgeCachedNodeStatements;
-(void)purgeCachedEdgeStatements;
@end


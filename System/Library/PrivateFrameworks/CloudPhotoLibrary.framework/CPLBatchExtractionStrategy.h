/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:43:33 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/CloudPhotoLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol CPLBatchExtractionStrategyStorage;
@class NSArray, NSEnumerator, CPLBatchExtractionStep, NSString;

@interface CPLBatchExtractionStrategy : NSObject {

	NSArray* _steps;
	NSEnumerator* _stepEnumerator;
	CPLBatchExtractionStep* _currentStep;
	BOOL _loggedForThisStep;
	BOOL _finished;
	NSString* _strategyName;
	id<CPLBatchExtractionStrategyStorage> _storage;
	NSString* _scopeIdentifier;
	unsigned long long _maximumRecordCountPerBatch;
	NSString* _name;

}

@property (nonatomic,copy,readonly) NSString * strategyName;                                      //@synthesize strategyName=_strategyName - In the implementation block
@property (nonatomic,__weak,readonly) id<CPLBatchExtractionStrategyStorage> storage;              //@synthesize storage=_storage - In the implementation block
@property (nonatomic,readonly) NSString * scopeIdentifier;                                        //@synthesize scopeIdentifier=_scopeIdentifier - In the implementation block
@property (assign,nonatomic) unsigned long long maximumRecordCountPerBatch;                       //@synthesize maximumRecordCountPerBatch=_maximumRecordCountPerBatch - In the implementation block
@property (nonatomic,copy,readonly) NSString * name;                                              //@synthesize name=_name - In the implementation block
@property (nonatomic,copy,readonly) NSString * currentStepDescription; 
+(void)setMaximumRecordCountPerBatch:(unsigned long long)arg1 ;
+(id)usualStrategyWithStorage:(id)arg1 coveringScopeIdentifier:(id)arg2 ;
+(id)overQuotaStrategyWithStorage:(id)arg1 coveringScopeIdentifier:(id)arg2 ;
-(id<CPLBatchExtractionStrategyStorage>)storage;
-(NSString *)strategyName;
-(NSString *)scopeIdentifier;
-(void)reset;
-(BOOL)_hasChanges;
-(NSString *)name;
-(id)initWithName:(id)arg1 storage:(id)arg2 scopeIdentifier:(id)arg3 steps:(id)arg4 ;
-(void)_computeNextStep;
-(BOOL)extractBatch:(out id*)arg1 maximumResourceSize:(unsigned long long)arg2 error:(id*)arg3 ;
-(void)resetConditionallyFromNewIncomingChange:(id)arg1 ;
-(NSString *)currentStepDescription;
-(unsigned long long)maximumRecordCountPerBatch;
-(void)setMaximumRecordCountPerBatch:(unsigned long long)arg1 ;
@end


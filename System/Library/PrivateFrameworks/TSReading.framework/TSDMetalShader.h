/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:26:35 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/TSReading.framework/TSReading
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol MTLRenderPipelineState;
@class MTLRenderPipelineReflection, NSString;

@interface TSDMetalShader : NSObject {

	long long _vertexUniformsIndex;
	unsigned long long _vertexUniformsSize;
	long long _fragmentUniformsIndex;
	unsigned long long _fragmentUniformsSize;
	id<MTLRenderPipelineState> _pipelineState;
	MTLRenderPipelineReflection* _pipelineReflectionObject;
	unsigned long long _bufferIndex;
	NSString* _name;

}

@property (nonatomic,readonly) id<MTLRenderPipelineState> pipelineState;                            //@synthesize pipelineState=_pipelineState - In the implementation block
@property (nonatomic,readonly) MTLRenderPipelineReflection * pipelineReflectionObject;              //@synthesize pipelineReflectionObject=_pipelineReflectionObject - In the implementation block
@property (nonatomic,readonly) unsigned long long bufferIndex;                                      //@synthesize bufferIndex=_bufferIndex - In the implementation block
@property (nonatomic,copy) NSString * name;                                                         //@synthesize name=_name - In the implementation block
-(unsigned long long)bufferIndex;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(id)description;
-(id<MTLRenderPipelineState>)pipelineState;
-(long long)p_indexOfUniformsFromMetalArguments:(id)arg1 size:(unsigned long long*)arg2 bufferIndex:(unsigned long long*)arg3 ;
-(id)p_createPipelineStateWithRenderPipelineDescriptor:(id)arg1 device:(id)arg2 setupUniforms:(BOOL)arg3 ;
-(void)p_setupPipelineStateWithVertexShader:(id)arg1 fragmentShader:(id)arg2 device:(id)arg3 library:(id)arg4 colorAttachment:(id)arg5 velocityAttachment:(id)arg6 setupUniforms:(BOOL)arg7 ;
-(id)initWithDefaultVertexShader:(id)arg1 fragmentShader:(id)arg2 device:(id)arg3 colorAttachment:(id)arg4 velocityAttachment:(id)arg5 label:(id)arg6 setupUniforms:(BOOL)arg7 ;
-(void)p_setDefaultVertexUniforms;
-(void)p_setupPipelineStateWithVertexFunction:(id)arg1 fragmentShader:(id)arg2 device:(id)arg3 library:(id)arg4 colorAttachment:(id)arg5 velocityAttachment:(id)arg6 setupUniforms:(BOOL)arg7 ;
-(id)initCustomShaderWithVertexShader:(id)arg1 fragmentShader:(id)arg2 device:(id)arg3 library:(id)arg4 colorAttachment:(id)arg5 velocityAttachment:(id)arg6 ;
-(id)initQuadTextureShaderWithFragmentShader:(id)arg1 device:(id)arg2 library:(id)arg3 colorAttachment:(id)arg4 velocityAttachment:(id)arg5 ;
-(void)setPipelineStateWithEncoder:(id)arg1 vertexBytes:(const void*)arg2 fragmentBytes:(const void*)arg3 ;
-(id)initDefaultShaderWithVertexShader:(id)arg1 fragmentShader:(id)arg2 device:(id)arg3 colorAttachment:(id)arg4 ;
-(id)initDefaultTextureShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 ;
-(id)initDefaultTextureAndOpacityShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 ;
-(id)initDefaultGaussianBlurShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 halfSizedRadius:(BOOL)arg3 ;
-(id)initDefaultTextureMotionBlurShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 velocityAttachment:(id)arg3 ;
-(id)initDefaultTextureAndOpacityMotionBlurShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 velocityAttachment:(id)arg3 motionBlur:(BOOL)arg4 ;
-(id)initDefaultBlendShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 velocityAttachment:(id)arg3 motionBlur:(BOOL)arg4 ;
-(id)initDefaultVelocityCollectionShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 ;
-(id)initDefaultVelocityVisualizerShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 ;
-(id)initDefaultNeighborMaxBlurShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 ;
-(id)initDefaultTileMaxBlurShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 ;
-(id)initDefaultSingleDirectionMotionBlurShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 ;
-(id)initDefaultBloomShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 ;
-(id)initCustomShaderWithVertexShader:(id)arg1 fragmentShader:(id)arg2 device:(id)arg3 library:(id)arg4 colorAttachment:(id)arg5 ;
-(id)initQuadTextureShaderWithFragmentShader:(id)arg1 device:(id)arg2 library:(id)arg3 colorAttachment:(id)arg4 ;
-(id)initQuadMotionBlurTextureShaderWithFragmentShader:(id)arg1 device:(id)arg2 library:(id)arg3 colorAttachment:(id)arg4 velocityAttachment:(id)arg5 ;
-(void)setPipelineStateWithEncoder:(id)arg1 vertexBytes:(const void*)arg2 ;
-(void)setPipelineStateWithEncoder:(id)arg1 fragmentBytes:(const void*)arg2 ;
-(void)setPipelineStateWithEncoder:(id)arg1 ;
-(MTLRenderPipelineReflection *)pipelineReflectionObject;
@end


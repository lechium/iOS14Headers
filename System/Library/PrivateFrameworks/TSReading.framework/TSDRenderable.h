/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:26:36 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/TSReading.framework/TSReading
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSReading/TSReading-Structs.h>
#import <TSReading/TSDContentsScaleProviding.h>

@class CALayer, NSArray, NSString;

@interface TSDRenderable : NSObject <TSDContentsScaleProviding> {

	CALayer* _layer;

}

@property (nonatomic,readonly) CALayer * layer;                                     //@synthesize layer=_layer - In the implementation block
@property (nonatomic,copy) NSArray * subrenderables; 
@property (nonatomic,readonly) TSDRenderable * presentationRenderable; 
@property (assign,nonatomic,__weak) id<CALayerDelegate> delegate; 
@property (nonatomic,retain) id contents; 
@property (readonly) CALayer * superlayer; 
@property (nonatomic,copy) NSArray * sublayers; 
@property (assign,nonatomic) CGPoint anchorPoint; 
@property (nonatomic,retain) CALayer * mask; 
@property (assign,getter=isHidden,nonatomic) BOOL hidden; 
@property (assign,nonatomic) float opacity; 
@property (assign,nonatomic) CGRect bounds; 
@property (assign,nonatomic) CGRect frame; 
@property (assign,nonatomic) CGPoint position; 
@property (assign,nonatomic) CGAffineTransform affineTransform; 
@property (assign,nonatomic) double contentsScale; 
@property (assign,nonatomic) CGColorRef backgroundColor; 
@property (assign,nonatomic) double cornerRadius; 
@property (assign,nonatomic) unsigned edgeAntialiasingMask; 
@property (assign,nonatomic) double borderWidth; 
@property (assign,nonatomic) CGColorRef borderColor; 
@property (nonatomic,copy) NSString * name; 
@property (assign,nonatomic) CGRect contentsRect; 
@property (assign,nonatomic) BOOL allowsGroupOpacity; 
@property (assign,nonatomic) BOOL masksToBounds; 
@property (nonatomic,copy) NSString * magnificationFilter; 
@property (assign,nonatomic) double zPosition; 
@property (nonatomic,copy) NSString * contentsGravity; 
@property (assign,nonatomic) CGColorRef shadowColor; 
@property (assign,nonatomic) float shadowOpacity; 
@property (assign,nonatomic) CGSize shadowOffset; 
@property (assign,nonatomic) double shadowRadius; 
@property (assign,nonatomic) const CGPathRef shadowPath; 
@property (assign,nonatomic) BOOL shouldRasterize; 
@property (assign,nonatomic) double rasterizationScale; 
@property (nonatomic,readonly) CGSize preferredFrameSize; 
@property (nonatomic,readonly) BOOL tsd_tilingSafeHasContents; 
+(id)renderableFromLayer:(id)arg1 ;
+(id)renderable;
+(id)renderablesFromLayers:(id)arg1 ;
-(void)setContents:(id)arg1 ;
-(CGSize)shadowOffset;
-(void)setContentsScale:(double)arg1 ;
-(float)shadowOpacity;
-(void)setContentsRect:(CGRect)arg1 ;
-(CALayer *)mask;
-(double)shadowRadius;
-(CALayer *)layer;
-(void)setShadowRadius:(double)arg1 ;
-(void)setShadowOffset:(CGSize)arg1 ;
-(CGColorRef)shadowColor;
-(BOOL)shouldRasterize;
-(void)setShadowOpacity:(float)arg1 ;
-(void)setPosition:(CGPoint)arg1 ;
-(double)cornerRadius;
-(CGRect)bounds;
-(void)setMagnificationFilter:(NSString *)arg1 ;
-(void)setNeedsDisplay;
-(void)setBorderColor:(CGColorRef)arg1 ;
-(double)borderWidth;
-(double)rasterizationScale;
-(id)contents;
-(double)zPosition;
-(void)setAnchorPoint:(CGPoint)arg1 ;
-(NSString *)magnificationFilter;
-(CGRect)contentsRect;
-(CALayer *)superlayer;
-(void)setBounds:(CGRect)arg1 ;
-(void)setFrame:(CGRect)arg1 ;
-(void)setShadowColor:(CGColorRef)arg1 ;
-(void)setContentsGravity:(NSString *)arg1 ;
-(CGPoint)position;
-(float)opacity;
-(void)setCornerRadius:(double)arg1 ;
-(void)setShadowPath:(const CGPathRef)arg1 ;
-(CGColorRef)backgroundColor;
-(void)setMasksToBounds:(BOOL)arg1 ;
-(CGPoint)convertPoint:(CGPoint)arg1 fromLayer:(id)arg2 ;
-(void)addSublayer:(id)arg1 ;
-(CGColorRef)borderColor;
-(void)setZPosition:(double)arg1 ;
-(BOOL)isHidden;
-(CGRect)frame;
-(void)setDelegate:(id<CALayerDelegate>)arg1 ;
-(void)removeFromSuperlayer;
-(CGAffineTransform)affineTransform;
-(BOOL)isEqual:(id)arg1 ;
-(void)setName:(NSString *)arg1 ;
-(NSArray *)sublayers;
-(const CGPathRef)shadowPath;
-(void)setShouldRasterize:(BOOL)arg1 ;
-(BOOL)containsPoint:(CGPoint)arg1 ;
-(void)setSublayers:(NSArray *)arg1 ;
-(void)setMask:(CALayer *)arg1 ;
-(void)addAnimation:(id)arg1 forKey:(id)arg2 ;
-(id<CALayerDelegate>)delegate;
-(BOOL)masksToBounds;
-(CGSize)preferredFrameSize;
-(void)setHidden:(BOOL)arg1 ;
-(id)animationForKey:(id)arg1 ;
-(double)contentsScale;
-(CGPoint)convertPoint:(CGPoint)arg1 toLayer:(id)arg2 ;
-(unsigned long long)hash;
-(void)setAllowsGroupOpacity:(BOOL)arg1 ;
-(CGPoint)anchorPoint;
-(void)setEdgeAntialiasingMask:(unsigned)arg1 ;
-(void)setBorderWidth:(double)arg1 ;
-(NSString *)name;
-(BOOL)allowsGroupOpacity;
-(void)setRasterizationScale:(double)arg1 ;
-(void)removeAnimationForKey:(id)arg1 ;
-(void)setBackgroundColor:(CGColorRef)arg1 ;
-(void)setAffineTransform:(CGAffineTransform)arg1 ;
-(unsigned)edgeAntialiasingMask;
-(id)description;
-(NSString *)contentsGravity;
-(void)setOpacity:(float)arg1 ;
-(void)setIfDifferentFrame:(CGRect)arg1 orTransform:(CGAffineTransform)arg2 ;
-(id)initWithCALayer:(id)arg1 ;
-(void)addSubrenderable:(id)arg1 ;
-(void)setSubrenderables:(NSArray *)arg1 ;
-(NSArray *)subrenderables;
-(void)setMaskRenderable:(id)arg1 ;
-(TSDRenderable *)presentationRenderable;
-(BOOL)tsd_tilingSafeHasContents;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:26:36 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/TSReading.framework/TSReading
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSReading/TSReading-Structs.h>
#import <UIKitCore/UIViewController.h>
#import <TSReading/TSDCanvasLayerHosting.h>
#import <TSReading/TSDCanvasZoomTrackerDelegate.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@protocol TSDiOSCanvasViewControllerDelegate;
@class TSDInteractiveCanvasController, TSDCanvasView, CALayer, TSDCanvasLayer, UITapGestureRecognizer, TSDEditMenuTapGestureRecognizer, TSDKnobDragGestureRecognizer, TSDMultiSelectGestureRecognizer, TSDRepDragGestureRecognizer, TSDRepRotateGestureRecognizer, TSDCanvasZoomPinchGestureRecognizer, TSDNudgeGestureRecognizer, TSDAllTouchesDoneGestureRecognizer, TSDPreventScrollGestureRecognizer, UIPanGestureRecognizer, TSDGuidedPanController, NSMutableArray, TSDCanvasZoomTracker, TSDCanvasSubviewsController, UIPinchGestureRecognizer, NSArray, NSSet, NSString, UIView, UIViewController;

@interface TSDiOSCanvasViewController : UIViewController <TSDCanvasLayerHosting, TSDCanvasZoomTrackerDelegate, UIGestureRecognizerDelegate> {

	TSDInteractiveCanvasController* mICC;
	id<TSDiOSCanvasViewControllerDelegate> mDelegate;
	BOOL mContextMenuMightBeDisplayed;
	UITapGestureRecognizer* mSingleTapGestureRecognizer;
	UITapGestureRecognizer* mDoubleTapGestureRecognizer;
	TSDEditMenuTapGestureRecognizer* mEditMenuTapGestureRecognizer;
	TSDKnobDragGestureRecognizer* mKnobDragGestureRecognizer;
	TSDMultiSelectGestureRecognizer* mMultiSelectGestureRecognizer;
	TSDRepDragGestureRecognizer* mRepDragGestureRecognizer;
	TSDRepRotateGestureRecognizer* mRepRotateGestureRecognizer;
	TSDCanvasZoomPinchGestureRecognizer* mZoomGestureRecognizer;
	TSDNudgeGestureRecognizer* mNudgeGestureRecognizer;
	TSDAllTouchesDoneGestureRecognizer* mAllTouchesDoneGestureRecognizer;
	TSDPreventScrollGestureRecognizer* mPreventScrollGestureRecognizer;
	UIPanGestureRecognizer* mGuidedPanGestureRecognizer;
	TSDGuidedPanController* mGuidedPanController;
	BOOL mHasBeenTornDown;
	BOOL mIsPopoverGestureInFlight;
	BOOL mInspectorModeEnabled;
	NSMutableArray* mInspectorGestureRecognizersToReenable;
	/*^block*/id mInspectorSingleTapBlock;
	BOOL mCurrentlyScrolling;
	BOOL mRotating;
	TSDCanvasZoomTracker* mCanvasZoomTracker;
	CGPoint mLastZoomHUDLocation;
	BOOL _isRotating;
	TSDCanvasSubviewsController* mSubviewsController;

}

@property (nonatomic,readonly) SCD_Struct_TS69 touchContentPlacement; 
@property (nonatomic,readonly) SCD_Struct_TS69 centerPlusMovementContentPlacement; 
@property (nonatomic,retain) UITapGestureRecognizer * singleTapGestureRecognizer; 
@property (nonatomic,retain) UITapGestureRecognizer * doubleTapGestureRecognizer; 
@property (nonatomic,retain) TSDEditMenuTapGestureRecognizer * editMenuTapGestureRecognizer; 
@property (nonatomic,retain) TSDKnobDragGestureRecognizer * knobDragGestureRecognizer; 
@property (nonatomic,retain) TSDMultiSelectGestureRecognizer * multiSelectGestureRecognizer; 
@property (nonatomic,retain) TSDRepDragGestureRecognizer * repDragGestureRecognizer; 
@property (nonatomic,retain) TSDRepRotateGestureRecognizer * repRotateGestureRecognizer; 
@property (nonatomic,retain) UIPinchGestureRecognizer * zoomGestureRecognizer; 
@property (nonatomic,retain) TSDNudgeGestureRecognizer * nudgeGestureRecognizer; 
@property (nonatomic,retain) TSDAllTouchesDoneGestureRecognizer * allTouchesDoneGestureRecognizer; 
@property (assign,nonatomic) TSDInteractiveCanvasController * interactiveCanvasController; 
@property (assign,nonatomic) id<TSDiOSCanvasViewControllerDelegate> delegate; 
@property (nonatomic,readonly) NSArray * commonGestureRecognizers; 
@property (nonatomic,readonly) NSSet * panGestureRecognizers; 
@property (nonatomic,retain,readonly) TSDPreventScrollGestureRecognizer * preventScrollGestureRecognizer; 
@property (nonatomic,retain,readonly) UIPanGestureRecognizer * guidedPanGestureRecognizer; 
@property (nonatomic,readonly) BOOL isPopoverGestureInFlight; 
@property (assign,nonatomic) BOOL contextMenuMightBeDisplayed; 
@property (nonatomic,readonly) BOOL isRotating;                                                                        //@synthesize isRotating=_isRotating - In the implementation block
@property (nonatomic,readonly) BOOL isDraggingViaGuidedPan; 
@property (nonatomic,readonly) TSDCanvasView * canvasView; 
@property (nonatomic,readonly) CALayer * layer; 
@property (nonatomic,readonly) TSDCanvasLayer * canvasLayer; 
@property (nonatomic,readonly) CALayer * clippingLayer; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain,readonly) CALayer * topLevelTilingLayer; 
@property (nonatomic,retain,readonly) CALayer * containerLayer; 
@property (nonatomic,retain,readonly) UIView * containerView; 
@property (nonatomic,retain,readonly) UIViewController * containerViewController; 
@property (nonatomic,retain,readonly) TSDCanvasSubviewsController * subviewsController; 
-(BOOL)becomeFirstResponder;
-(void)cut:(id)arg1 ;
-(CALayer *)layer;
-(void)handleDoubleTap:(id)arg1 ;
-(TSDInteractiveCanvasController *)interactiveCanvasController;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(void)stopScrolling;
-(BOOL)canBecomeFirstResponder;
-(UIView *)containerView;
-(void)forwardInvocation:(id)arg1 ;
-(BOOL)respondsToSelector:(SEL)arg1 ;
-(id)viewController;
-(UITapGestureRecognizer *)doubleTapGestureRecognizer;
-(void)dealloc;
-(void)viewDidLoad;
-(void)teardown;
-(void)loadView;
-(NSSet *)panGestureRecognizers;
-(id)methodSignatureForSelector:(SEL)arg1 ;
-(void)setDelegate:(id<TSDiOSCanvasViewControllerDelegate>)arg1 ;
-(TSDCanvasView *)canvasView;
-(void)viewWillTransitionToSize:(CGSize)arg1 withTransitionCoordinator:(id)arg2 ;
-(BOOL)isRotating;
-(id<TSDiOSCanvasViewControllerDelegate>)delegate;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(void)viewWillAppear:(BOOL)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(void)setInteractiveCanvasController:(TSDInteractiveCanvasController *)arg1 ;
-(void)setDoubleTapGestureRecognizer:(UITapGestureRecognizer *)arg1 ;
-(id)asiOSCVC;
-(UIViewController *)containerViewController;
-(void)unlock:(id)arg1 ;
-(CALayer *)clippingLayer;
-(UITapGestureRecognizer *)singleTapGestureRecognizer;
-(void)setSingleTapGestureRecognizer:(UITapGestureRecognizer *)arg1 ;
-(TSDCanvasLayer *)canvasLayer;
-(id)topLevelReps;
-(id)viewForGestureRecognizer:(id)arg1 ;
-(BOOL)allowTouchOutsideCanvasView:(id)arg1 forGesture:(id)arg2 ;
-(BOOL)shouldIgnoreTextGestures;
-(BOOL)isPopoverGestureInFlight;
-(TSDKnobDragGestureRecognizer *)knobDragGestureRecognizer;
-(void)setKnobDragGestureRecognizer:(TSDKnobDragGestureRecognizer *)arg1 ;
-(CALayer *)containerLayer;
-(void)canvasDidUpdateRepsFromLayouts;
-(void)presentError:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)presentErrors:(id)arg1 withLocalizedDescription:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)extraMenuItems;
-(void)resetGesturesForContextSwitch;
-(BOOL)contextMenuMightBeDisplayed;
-(void)hideEditMenu;
-(void)showEditMenu:(id)arg1 ;
-(TSDCanvasSubviewsController *)subviewsController;
-(void)forceStopScrolling;
-(void)setContextMenuMightBeDisplayed:(BOOL)arg1 ;
-(void)showEditMenuForSelection:(id)arg1 ;
-(id)hitRepWithTouch:(id)arg1 ;
-(void)toggleEditMenuForCurrentSelection;
-(CALayer *)topLevelTilingLayer;
-(BOOL)shouldSelectAndShowEditMenuOnFirstTapForRep:(id)arg1 ;
-(void)i_updateZoomGestureRecognizer;
-(SCD_Struct_TS69)touchContentPlacement;
-(SCD_Struct_TS69)centerPlusMovementContentPlacement;
-(BOOL)p_shouldUseWideGamut;
-(void)setUpGestureRecognizers;
-(void)p_updateWideGamut;
-(TSDEditMenuTapGestureRecognizer *)editMenuTapGestureRecognizer;
-(TSDMultiSelectGestureRecognizer *)multiSelectGestureRecognizer;
-(TSDRepDragGestureRecognizer *)repDragGestureRecognizer;
-(TSDRepRotateGestureRecognizer *)repRotateGestureRecognizer;
-(UIPinchGestureRecognizer *)zoomGestureRecognizer;
-(TSDNudgeGestureRecognizer *)nudgeGestureRecognizer;
-(void)p_handleSingleTapGesture:(id)arg1 ;
-(void)p_handleTapForEditMenu:(id)arg1 ;
-(void)setEditMenuTapGestureRecognizer:(TSDEditMenuTapGestureRecognizer *)arg1 ;
-(void)p_allTouchesDone:(id)arg1 ;
-(void)setAllTouchesDoneGestureRecognizer:(TSDAllTouchesDoneGestureRecognizer *)arg1 ;
-(void)p_zoomWithGesture:(id)arg1 ;
-(void)setZoomGestureRecognizer:(UIPinchGestureRecognizer *)arg1 ;
-(void)p_guidedPanWithGesture:(id)arg1 ;
-(BOOL)handleDoubleTapAtPoint:(CGPoint)arg1 withRecognizer:(id)arg2 ;
-(TSDPreventScrollGestureRecognizer *)preventScrollGestureRecognizer;
-(NSArray *)commonGestureRecognizers;
-(CGRect)targetRectForEditMenu:(id)arg1 ;
-(void)p_buildMenuItems:(id)arg1 forSelection:(id)arg2 ;
-(id)itemsToAddToEditMenuForRep:(id)arg1 ;
-(void)addInspectorPanZoomModeGRsToArray:(id)arg1 ;
-(BOOL)handleSingleTapAtPoint:(CGPoint)arg1 withRecognizer:(id)arg2 ;
-(id)p_willPresentError:(id)arg1 ;
-(void)p_didPresentErrorWithRecovery:(BOOL)arg1 completionHandler:(void*)arg2 ;
-(void)presentMovieCompatibilityAlertForUnplayableMovieURLs:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)presentMovieCompatibilityAlertForUnplayableMoviePasteboardDrawableProviders:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(BOOL)isInFocusedContainer;
-(void)canvasZoomTracker:(id)arg1 willBeginViewScaleFeedbackWithFastPinch:(BOOL)arg2 ;
-(void)canvasZoomTracker:(id)arg1 willUpdateViewScaleFeedbackWithScale:(double)arg2 ;
-(void)canvasZoomTrackerDidEndViewScaleFeedback:(id)arg1 ;
-(void)canvasZoomTrackerWillBeginFinalZoomAnimation:(id)arg1 ;
-(void)canvasZoomTrackerDidEndFinalZoomAnimation:(id)arg1 ;
-(void)canvasZoomTrackerDidFinish:(id)arg1 ;
-(id)hitKnobWithTouch:(id)arg1 returningRep:(id*)arg2 ;
-(BOOL)repDragGestureRecognizer:(id)arg1 shouldBeginTapHoldTrackingAtScaledPoint:(CGPoint)arg2 ;
-(void)beginInspectorPanZoomModeWithSingleTapBlock:(/*^block*/id)arg1 ;
-(void)endInspectorPanZoomMode;
-(BOOL)isDraggingViaGuidedPan;
-(void)p_editMenuDidHide:(id)arg1 ;
-(void)beginModalOperationWithLocalizedMessage:(id)arg1 progress:(id)arg2 cancelHandler:(/*^block*/id)arg3 ;
-(void)endModalOperation;
-(id)newMoviePlaybackHUDWithFrame:(CGRect)arg1 playerController:(id)arg2 movieRep:(id)arg3 ;
-(void)showMoviePlaybackHUD:(id)arg1 withFrame:(CGRect)arg2 ;
-(void)hideMoviePlaybackHUD;
-(id)newAudioPlaybackHUDWithFrame:(CGRect)arg1 audioRep:(id)arg2 delegate:(id)arg3 ;
-(Class)movieInspectorPaneClass;
-(Class)audioInspectorPaneClass;
-(void)setMultiSelectGestureRecognizer:(TSDMultiSelectGestureRecognizer *)arg1 ;
-(void)setRepDragGestureRecognizer:(TSDRepDragGestureRecognizer *)arg1 ;
-(void)setRepRotateGestureRecognizer:(TSDRepRotateGestureRecognizer *)arg1 ;
-(void)setNudgeGestureRecognizer:(TSDNudgeGestureRecognizer *)arg1 ;
-(TSDAllTouchesDoneGestureRecognizer *)allTouchesDoneGestureRecognizer;
-(UIPanGestureRecognizer *)guidedPanGestureRecognizer;
@end


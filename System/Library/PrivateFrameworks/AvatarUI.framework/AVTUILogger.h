/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:41:40 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/AvatarUI.framework/AvatarUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AvatarUI/AvatarUI-Structs.h>
#import <libobjc.A.dylib/AVTUILogger.h>

@protocol AVTUILogger <NSObject>
@required
-(void)logAVTViewCancelingRenderingAvatar:(id)arg1;
-(void)logAVTViewSetAvatar:(id)arg1;
-(void)logAVTViewDidRenderAvatar:(id)arg1 currentAvatar:(id)arg2;
-(void)logAVTViewDidRenderCurrentAvatar:(id)arg1;
-(void)logErrorMitigatingDuplicates:(id)arg1;
-(void)logErrorPinningContextToCurrentQueryGenerationToken:(id)arg1;
-(void)logMaintenanceCompleted;
-(void)runningMaintenance:(/*^block*/id)arg1;
-(void)logDiscoveredDuplicates:(id)arg1 count:(unsigned long long)arg2;
-(void)logDeduplicateRecordWithIdentifier:(id)arg1 toNewRecordWithIdentifier:(id)arg2;
-(void)logStartObservingResetSync;
-(void)logMissingResetSyncReasonKey;
-(void)logResetSyncReason:(unsigned long long)arg1;
-(void)processingWillResetSyncNotification:(/*^block*/id)arg1;
-(void)processingDidResetSyncNotification:(/*^block*/id)arg1;
-(void)logImportRequestResult:(BOOL)arg1 error:(id)arg2;
-(void)importingRecords:(/*^block*/id)arg1;
-(void)logMirroringRequestErrorWithCode:(long long)arg1 description:(id)arg2;
-(void)logExportRequestResult:(BOOL)arg1 error:(id)arg2;
-(void)exportingRecords:(/*^block*/id)arg1;
-(void)logFetchedOrphanedRecentSticker:(id)arg1;
-(void)logFetchedRecentStickerWithNoStickerConfiguration:(id)arg1;
-(void)logErrorFetchingRecentStickers:(id)arg1;
-(void)logErrorSavingRecentSticker:(id)arg1;
-(void)logDidFinishEditingWithSuccess;
-(void)logDidFinishEditingWithError:(id)arg1;
-(void)logNotImportingOnLaunchWithRemainingTime:(double)arg1;
-(void)logRequestingThumbnailForIndex:(unsigned long long)arg1 section:(id)arg2;
-(void)logCarouselChangesCenterItemTo:(id)arg1;
-(void)logCarouselCellStartUsingLiveView:(id)arg1 associatedTransition:(id)arg2;
-(void)logCarouselAddsTransitionToCoordinator:(id)arg1;
-(void)logCarouselStopsFocusingOnCenterItem:(id)arg1 withCell:(id)arg2;
-(void)logCarouselCellStopUsingLiveView:(id)arg1 associatedTransition:(id)arg2;
-(void)logPerformedRecentStickersMigration:(BOOL)arg1;
-(void)logDispatchingRemoteChangeWithTransactionCount:(unsigned long long)arg1 handlersCount:(unsigned long long)arg2;
-(void)logStartObservingRemoteChangeNotificationFrom:(id)arg1;
-(void)logReceivedRemoteChange:(id)arg1;
-(void)logNotificationDoesntContainChangeHistoryToken;
-(void)processingRemoteChangeNotification:(/*^block*/id)arg1;
-(void)logErrorFetchingChangeHistory:(id)arg1;
-(void)logInspectingChangesForExportAfterToken:(id)arg1;
-(void)logStickerGeneratorPoolDidntHaveAvailableGenerator:(long long)arg1 maxCount:(long long)arg2;
-(void)logTrackerProcessingChanges:(id)arg1 count:(unsigned long long)arg2 from:(id)arg3;
-(void)logErrorSavingChangeToken:(id)arg1 location:(id)arg2;
-(void)logCurrentHistoryTokenFileDoesntExist:(id)arg1;
-(void)logErrorReadingCurrentHistoryToken:(id)arg1;
-(void)savingChangeTrackerToken:(/*^block*/id)arg1;
-(void)logTransactionHasChangesButNoToken;
-(void)logCouldntFindRecordIdentifierForChangeType:(long long)arg1 managedObjectID:(id)arg2;
-(void)logFoundRecordIdentifier:(id)arg1 changeType:(long long)arg2 managedObjectID:(id)arg3;
-(void)logRenderingStickerEnd:(id)arg1;
-(void)logRenderingStickerStart:(id)arg1 forRecord:(id)arg2;
-(void)logSavingError:(id)arg1;
-(void)logMigratingSource:(id)arg1;
-(void)logReadingError:(id)arg1;
-(void)logErrorUpdatingRecordsForMigration:(id)arg1;
-(void)logErrorDeletingMigratedContent:(id)arg1;
-(void)migratingPersistedContent:(/*^block*/id)arg1;
-(void)logFoundExistingRecordDuringMigration;
-(void)logUpdatingLiveAvatarWithConfiguration:(id)arg1;
-(void)logParsingMetadataDefinitionsError:(id)arg1;
-(void)logErrorFetchingRecords:(id)arg1;
-(void)logDebug:(id)arg1;
-(void)deletingStickerRecentsForRemoteChanges:(/*^block*/id)arg1;
-(void)logStartingPreLoadingTask:(id)arg1;
-(void)logDonePreLoadingThumbnailForPreLoadingTask:(id)arg1;
-(void)logLookingUpPreLoadedPreset:(id)arg1 task:(id)arg2;
-(void)logPreLoadingPreset:(id)arg1 task:(id)arg2;
-(void)logDonePreLoadingPreset:(id)arg1 task:(id)arg2;
-(void)logAvatarPreloadEnd;
-(void)logAvatarPreloadBeginForIdentifier:(id)arg1;
-(void)savingRecords:(/*^block*/id)arg1;
-(void)logCreatingStore:(id)arg1;
-(void)logFetchedRecords:(unsigned long long)arg1 criteria:(long long)arg2;
-(void)fetchingRecords:(/*^block*/id)arg1;
-(void)logRecordsNotFoundInRecordStore:(id)arg1;
-(void)logRecordsNotFoundInPuppetStore:(id)arg1;
-(void)logRecordsNotFoundInAnyStore:(id)arg1;
-(void)logErrorDeletingThumbnailsForIdentifier:(id)arg1 error:(id)arg2;
-(void)deletingRecords:(/*^block*/id)arg1;
-(void)logErrorDuplicatingThumbnailsForIdentifier:(id)arg1 error:(id)arg2;
-(void)duplicatingRecords:(/*^block*/id)arg1;
-(void)logPostingChangeNotificationForIdentifiers:(id)arg1;
-(void)logPushConnectionReceivedPublicToken:(id)arg1;
-(void)logPushConnectionReceivedToken:(id)arg1 topic:(id)arg2 identifier:(id)arg3;
-(void)logPushNotificationReceivedForTopic:(id)arg1 payload:(id)arg2;
-(void)logUnableToCreatePushConnection:(id)arg1;
-(void)logStartingServer;
-(void)logErrorStartingServer:(id)arg1;
-(void)logChangesRequireExport;
-(void)logChangesRequireThumbnailUpdate;
-(void)performingMigrationXPCActivity:(/*^block*/id)arg1;
-(void)performingUserRequestedBackupActivity:(/*^block*/id)arg1;
-(void)logMigrationXPCActivityFinished;
-(void)logUserRequestedBackupXPCActivityFinished;
-(void)logErrorSettingUpStore:(id)arg1;
-(void)logSetupSchedulingMigrationCheck;
-(void)settingUpStore:(/*^block*/id)arg1;
-(void)logSetupSchedulingExport;
-(void)logSetupSchedulingImport;
-(void)logCheckingIfMigrationNeeded;
-(void)logSchedulingImport;
-(void)logWillResetZone;
-(void)logDidResetZoneWithSuccess:(BOOL)arg1 error:(id)arg2;
-(void)logUpdatingThumbnails;
-(void)logSchedulingUpdateThumbnails;
-(void)logDeletingStickerRecents;
-(void)logErrorCopyingStorageAside:(id)arg1;
-(void)logErrorMergingCopiedAsideContent:(id)arg1;
-(void)logErrorLoadingTemplates:(id)arg1;
-(void)logParsingMetadataDefinitions;
-(void)logRenderingConfiguration:(id)arg1;
-(void)logRenderingRecord:(id)arg1 size:(CGSize)arg2;
-(void)logSnapshotReturnedImage:(id)arg1;
-(void)logNoAvatarPreset:(id)arg1;
-(void)logCreatingBackendFolderAtPath:(id)arg1;
-(void)logCreatingBackendDBAtPath:(id)arg1;
-(void)logBackendVersionMismatch:(id)arg1 actual:(id)arg2;
-(void)logDroppingUnsupportedAvatarRecord:(id)arg1;
-(void)logErrorWhileMigratingBackend:(id)arg1;
-(void)logErrorCreatingBackendContent:(id)arg1;
-(void)logErrorUpdatingVersion:(id)arg1;
-(void)logSavingBackend;
-(void)logReadingBackendAtPath:(id)arg1;
-(void)logDeletingRecordWithIdentifier:(id)arg1;
-(void)logDeletingImagesWithIdentifierPrefix:(id)arg1;
-(void)logDuplicatingRecordWithIdentifier:(id)arg1;
-(void)logFileSystemError:(id)arg1;
-(void)logCreatingImageStoreForPath:(id)arg1;
-(void)logImageStoreCacheMiss:(id)arg1;
-(void)logImageStoreCacheHitForItemDescription:(id)arg1 sizeCost:(unsigned long long)arg2;
-(void)logImageStoreSavingError:(id)arg1 code:(long long)arg2;
-(void)logImageStoreBeginSavingImageForPath:(id)arg1;
-(void)logImageStoreDoneSavingImageForPath:(id)arg1;
-(void)logThrottlingAVTView;
-(void)logUnthrottlingAVTView;
-(void)logErrorSnapshottingAVTView:(id)arg1;
-(void)logCarouselSnapshotForIndex:(unsigned long long)arg1 size:(CGSize)arg2;
-(void)logSyncEnabled;
-(void)logSingleModeCantSnapshotForLackOfWindow;
-(void)logUsageTrackingRecordCount:(unsigned long long)arg1;
-(void)logUsageTrackingSmallDifferencesClusterCount:(unsigned long long)arg1;
-(void)logUsageTrackingBigDifferencesClusterCount:(unsigned long long)arg1;
-(void)logErrorAddingPersistentStore:(id)arg1;
-(void)logTearingDownCoreDataStack:(id)arg1;
-(void)logErrorTearingDownCoreDataStack:(id)arg1;
-(void)logErrorRemovingStoreFolder:(id)arg1;
-(void)postingAvatarStoreChangeNotification:(/*^block*/id)arg1;
-(void)logErrorSettingUserDirSuffixForSandbox:(int)arg1;
-(void)logGenericSandboxError:(id)arg1 error:(int)arg2;
-(void)logErrorSandboxInit:(char*)arg1;
-(void)logWarningNoHOME;
-(void)copyingStorageAside:(/*^block*/id)arg1;
-(void)restoringStorage:(/*^block*/id)arg1;
-(void)logCoalesceableEventOccured:(id)arg1;
-(void)checkingAccountInfo:(/*^block*/id)arg1;
-(void)logAccountInfo:(id)arg1 status:(long long)arg2 deviceToDeviceEncryption:(BOOL)arg3;
-(void)logErrorGettingAccountInfo:(id)arg1;
-(void)logErrorUpdatingBackupInclusionStatus:(id)arg1;
-(void)logErrorMigratingBackupInclusionStatus:(id)arg1;
-(void)checkingIn:(/*^block*/id)arg1;
-(void)logUpdatingBackupExclusionStatus:(BOOL)arg1;
-(void)logAvatarsDaemonClientConnectionInterrupted;
-(void)logAvatarsDaemonClientConnectionInvalidated;
-(void)logErrorGettingAvatarsDaemonClientProxy:(id)arg1;
-(void)logNoProxyToAvatarsDaemon;
-(void)logPaddleViewVideoPlayerFailed:(id)arg1;
-(void)logStickerViewSnapshotForBounds:(CGRect)arg1 offset:(CGPoint)arg2;
-(void)logCarouselChangingToSingleMode;
-(void)logCarouselChangingToMultiMode;
-(void)logCarouselTransitionCenterItem:(id)arg1 withCell:(id)arg2;
-(void)logSingleModeControllerStartUsingLiveView:(id)arg1;
-(void)logSingleModeControllerStopUsingLiveView:(id)arg1;
-(void)logStartTransition:(id)arg1 state:(long long)arg2;
-(void)logSetupHandlerCompletedForTransition:(id)arg1 state:(long long)arg2 finished:(BOOL)arg3;
-(void)logPerformTransition:(id)arg1;
-(void)logCancelTransition:(id)arg1;
-(void)logTransition:(id)arg1 state:(unsigned long long)arg2 reachedStage:(unsigned long long)arg3;
-(void)logToLivePoseTransitionBegins:(id)arg1;
-(void)logToLivePoseTransitionEnds:(id)arg1;
-(void)logCarouselDelegateDidFocusRecord:(id)arg1;
-(void)logCarouselDelegateWillEndFocusRecord:(id)arg1;
-(void)logCarouselDelegateNearnessFactorDidChange:(double)arg1 towardRecord:(BOOL)arg2 editable:(BOOL)arg3;
-(void)logCarouselDelegateDidUpdateRecord:(id)arg1;
-(void)logRenderingModelColor:(id)arg1;
-(void)logRenderingModelPreset:(id)arg1;
-(void)logCarouselErrorGettingFrameForElementAtIndex:(unsigned long long)arg1;
-(void)logCarouselEndsDraggingWithVelocity:(double)arg1 willSwitchIndexPathInsteadOfScrollBack:(BOOL)arg2 forHighVelocity:(BOOL)arg3;
-(void)logGeneratingImageForRecord:(id)arg1 scope:(id)arg2 type:(long long)arg3;
-(void)logGeneratingImageError:(id)arg1;
-(void)logErrorDeletingSomeThumbnail:(id)arg1;
-(void)logErrorProcessingChangeTransactionsToUpdateThumbnails:(id)arg1;
-(void)updatingThumbnailsForRemoteChanges:(/*^block*/id)arg1;
-(void)logCancelingPreLoadingTask:(id)arg1;
-(void)logPreLoadingNeededForIndex:(unsigned long long)arg1 section:(unsigned long long)arg2;
-(void)logRequestingPreLoadingTask:(id)arg1 forIndex:(unsigned long long)arg2 section:(unsigned long long)arg3;
-(void)logInMemoryCacheStorageForResource:(id)arg1;
-(void)logInMemoryCacheHitForResource:(id)arg1;
-(void)logInMemoryCacheEvictsResource:(id)arg1;
-(void)logAvatarsDaemonReceivesIncomingConnection;
-(void)logAvatarsDaemonClientChecksIn:(int)arg1;
-(void)logMissingTombstonedIdentifier;
-(void)logPersistentChangeNotOfInterest:(id)arg1;
-(void)logErrorGettingChangedRecordsContentForIdentifiers:(id)arg1 error:(id)arg2;
-(void)logTooManyAvatars:(unsigned long long)arg1 limit:(unsigned long long)arg2;
-(void)logUnableToReadRemoteRecord:(id)arg1;

@end


@protocol OS_os_log;
@class NSObject, NSString;

@interface AVTUILogger : NSObject <AVTUILogger> {

	NSObject*<OS_os_log> _generalLog;
	NSObject*<OS_os_log> _interactionLog;
	NSObject*<OS_os_log> _backendLog;

}

@property (nonatomic,readonly) NSObject*<OS_os_log> generalLog;                  //@synthesize generalLog=_generalLog - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_os_log> interactionLog;              //@synthesize interactionLog=_interactionLog - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_os_log> backendLog;                  //@synthesize backendLog=_backendLog - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)logAVTViewCancelingRenderingAvatar:(id)arg1 ;
-(void)logAVTViewSetAvatar:(id)arg1 ;
-(void)logAVTViewDidRenderAvatar:(id)arg1 currentAvatar:(id)arg2 ;
-(void)logAVTViewDidRenderCurrentAvatar:(id)arg1 ;
-(void)logErrorMitigatingDuplicates:(id)arg1 ;
-(void)logErrorPinningContextToCurrentQueryGenerationToken:(id)arg1 ;
-(void)logMaintenanceCompleted;
-(void)runningMaintenance:(/*^block*/id)arg1 ;
-(void)logDiscoveredDuplicates:(id)arg1 count:(unsigned long long)arg2 ;
-(void)logDeduplicateRecordWithIdentifier:(id)arg1 toNewRecordWithIdentifier:(id)arg2 ;
-(void)logStartObservingResetSync;
-(void)logMissingResetSyncReasonKey;
-(void)logResetSyncReason:(unsigned long long)arg1 ;
-(void)processingWillResetSyncNotification:(/*^block*/id)arg1 ;
-(void)processingDidResetSyncNotification:(/*^block*/id)arg1 ;
-(void)logImportRequestResult:(BOOL)arg1 error:(id)arg2 ;
-(void)importingRecords:(/*^block*/id)arg1 ;
-(void)logMirroringRequestErrorWithCode:(long long)arg1 description:(id)arg2 ;
-(void)logExportRequestResult:(BOOL)arg1 error:(id)arg2 ;
-(void)exportingRecords:(/*^block*/id)arg1 ;
-(void)logFetchedOrphanedRecentSticker:(id)arg1 ;
-(void)logFetchedRecentStickerWithNoStickerConfiguration:(id)arg1 ;
-(void)logErrorFetchingRecentStickers:(id)arg1 ;
-(void)logErrorSavingRecentSticker:(id)arg1 ;
-(void)logDidFinishEditingWithSuccess;
-(void)logDidFinishEditingWithError:(id)arg1 ;
-(void)logNotImportingOnLaunchWithRemainingTime:(double)arg1 ;
-(void)logRequestingThumbnailForIndex:(unsigned long long)arg1 section:(id)arg2 ;
-(void)logCarouselChangesCenterItemTo:(id)arg1 ;
-(void)logCarouselCellStartUsingLiveView:(id)arg1 associatedTransition:(id)arg2 ;
-(void)logCarouselAddsTransitionToCoordinator:(id)arg1 ;
-(void)logCarouselStopsFocusingOnCenterItem:(id)arg1 withCell:(id)arg2 ;
-(void)logCarouselCellStopUsingLiveView:(id)arg1 associatedTransition:(id)arg2 ;
-(void)logPerformedRecentStickersMigration:(BOOL)arg1 ;
-(void)logDispatchingRemoteChangeWithTransactionCount:(unsigned long long)arg1 handlersCount:(unsigned long long)arg2 ;
-(void)logStartObservingRemoteChangeNotificationFrom:(id)arg1 ;
-(void)logReceivedRemoteChange:(id)arg1 ;
-(void)logNotificationDoesntContainChangeHistoryToken;
-(void)processingRemoteChangeNotification:(/*^block*/id)arg1 ;
-(void)logErrorFetchingChangeHistory:(id)arg1 ;
-(void)logInspectingChangesForExportAfterToken:(id)arg1 ;
-(void)logStickerGeneratorPoolDidntHaveAvailableGenerator:(long long)arg1 maxCount:(long long)arg2 ;
-(void)logTrackerProcessingChanges:(id)arg1 count:(unsigned long long)arg2 from:(id)arg3 ;
-(void)logErrorSavingChangeToken:(id)arg1 location:(id)arg2 ;
-(void)logCurrentHistoryTokenFileDoesntExist:(id)arg1 ;
-(void)logErrorReadingCurrentHistoryToken:(id)arg1 ;
-(void)savingChangeTrackerToken:(/*^block*/id)arg1 ;
-(void)logTransactionHasChangesButNoToken;
-(void)logCouldntFindRecordIdentifierForChangeType:(long long)arg1 managedObjectID:(id)arg2 ;
-(id)init;
-(void)logFoundRecordIdentifier:(id)arg1 changeType:(long long)arg2 managedObjectID:(id)arg3 ;
-(void)logRenderingStickerEnd:(id)arg1 ;
-(void)logRenderingStickerStart:(id)arg1 forRecord:(id)arg2 ;
-(void)logSavingError:(id)arg1 ;
-(void)logMigratingSource:(id)arg1 ;
-(void)logReadingError:(id)arg1 ;
-(void)logErrorUpdatingRecordsForMigration:(id)arg1 ;
-(void)logErrorDeletingMigratedContent:(id)arg1 ;
-(void)migratingPersistedContent:(/*^block*/id)arg1 ;
-(void)logFoundExistingRecordDuringMigration;
-(void)logUpdatingLiveAvatarWithConfiguration:(id)arg1 ;
-(void)logParsingMetadataDefinitionsError:(id)arg1 ;
-(void)logErrorFetchingRecords:(id)arg1 ;
-(void)logDebug:(id)arg1 ;
-(void)deletingStickerRecentsForRemoteChanges:(/*^block*/id)arg1 ;
-(void)logStartingPreLoadingTask:(id)arg1 ;
-(void)logDonePreLoadingThumbnailForPreLoadingTask:(id)arg1 ;
-(void)logLookingUpPreLoadedPreset:(id)arg1 task:(id)arg2 ;
-(void)logPreLoadingPreset:(id)arg1 task:(id)arg2 ;
-(void)logDonePreLoadingPreset:(id)arg1 task:(id)arg2 ;
-(void)logAvatarPreloadEnd;
-(void)logAvatarPreloadBeginForIdentifier:(id)arg1 ;
-(void)savingRecords:(/*^block*/id)arg1 ;
-(void)logCreatingStore:(id)arg1 ;
-(void)logFetchedRecords:(unsigned long long)arg1 criteria:(long long)arg2 ;
-(void)fetchingRecords:(/*^block*/id)arg1 ;
-(void)logRecordsNotFoundInRecordStore:(id)arg1 ;
-(void)logRecordsNotFoundInPuppetStore:(id)arg1 ;
-(void)logRecordsNotFoundInAnyStore:(id)arg1 ;
-(void)logErrorDeletingThumbnailsForIdentifier:(id)arg1 error:(id)arg2 ;
-(void)deletingRecords:(/*^block*/id)arg1 ;
-(void)logErrorDuplicatingThumbnailsForIdentifier:(id)arg1 error:(id)arg2 ;
-(void)duplicatingRecords:(/*^block*/id)arg1 ;
-(void)logPostingChangeNotificationForIdentifiers:(id)arg1 ;
-(void)logPushConnectionReceivedPublicToken:(id)arg1 ;
-(void)logPushConnectionReceivedToken:(id)arg1 topic:(id)arg2 identifier:(id)arg3 ;
-(void)logPushNotificationReceivedForTopic:(id)arg1 payload:(id)arg2 ;
-(void)logUnableToCreatePushConnection:(id)arg1 ;
-(void)logStartingServer;
-(void)logErrorStartingServer:(id)arg1 ;
-(void)logChangesRequireExport;
-(void)logChangesRequireThumbnailUpdate;
-(void)performingMigrationXPCActivity:(/*^block*/id)arg1 ;
-(void)performingUserRequestedBackupActivity:(/*^block*/id)arg1 ;
-(void)logMigrationXPCActivityFinished;
-(void)logUserRequestedBackupXPCActivityFinished;
-(void)logErrorSettingUpStore:(id)arg1 ;
-(void)logSetupSchedulingMigrationCheck;
-(void)settingUpStore:(/*^block*/id)arg1 ;
-(void)logSetupSchedulingExport;
-(void)logSetupSchedulingImport;
-(void)logCheckingIfMigrationNeeded;
-(void)logSchedulingImport;
-(void)logWillResetZone;
-(void)logDidResetZoneWithSuccess:(BOOL)arg1 error:(id)arg2 ;
-(void)logUpdatingThumbnails;
-(void)logSchedulingUpdateThumbnails;
-(void)logDeletingStickerRecents;
-(void)logErrorCopyingStorageAside:(id)arg1 ;
-(void)logErrorMergingCopiedAsideContent:(id)arg1 ;
-(NSObject*<OS_os_log>)backendLog;
-(NSObject*<OS_os_log>)generalLog;
-(NSObject*<OS_os_log>)interactionLog;
-(void)logErrorLoadingTemplates:(id)arg1 ;
-(void)logParsingMetadataDefinitions;
-(void)logRenderingConfiguration:(id)arg1 ;
-(void)logRenderingRecord:(id)arg1 size:(CGSize)arg2 ;
-(void)logSnapshotReturnedImage:(id)arg1 ;
-(void)logNoAvatarPreset:(id)arg1 ;
-(void)logCreatingBackendFolderAtPath:(id)arg1 ;
-(void)logCreatingBackendDBAtPath:(id)arg1 ;
-(void)logBackendVersionMismatch:(id)arg1 actual:(id)arg2 ;
-(void)logDroppingUnsupportedAvatarRecord:(id)arg1 ;
-(void)logErrorWhileMigratingBackend:(id)arg1 ;
-(void)logErrorCreatingBackendContent:(id)arg1 ;
-(void)logErrorUpdatingVersion:(id)arg1 ;
-(void)logSavingBackend;
-(void)logReadingBackendAtPath:(id)arg1 ;
-(void)logDeletingRecordWithIdentifier:(id)arg1 ;
-(void)logDeletingImagesWithIdentifierPrefix:(id)arg1 ;
-(void)logDuplicatingRecordWithIdentifier:(id)arg1 ;
-(void)logFileSystemError:(id)arg1 ;
-(void)logCreatingImageStoreForPath:(id)arg1 ;
-(void)logImageStoreCacheMiss:(id)arg1 ;
-(void)logImageStoreCacheHitForItemDescription:(id)arg1 sizeCost:(unsigned long long)arg2 ;
-(void)logImageStoreSavingError:(id)arg1 code:(long long)arg2 ;
-(void)logImageStoreBeginSavingImageForPath:(id)arg1 ;
-(void)logImageStoreDoneSavingImageForPath:(id)arg1 ;
-(void)logThrottlingAVTView;
-(void)logUnthrottlingAVTView;
-(void)logErrorSnapshottingAVTView:(id)arg1 ;
-(void)logCarouselSnapshotForIndex:(unsigned long long)arg1 size:(CGSize)arg2 ;
-(void)logSyncEnabled;
-(void)logSingleModeCantSnapshotForLackOfWindow;
-(void)logUsageTrackingRecordCount:(unsigned long long)arg1 ;
-(void)logUsageTrackingSmallDifferencesClusterCount:(unsigned long long)arg1 ;
-(void)logUsageTrackingBigDifferencesClusterCount:(unsigned long long)arg1 ;
-(void)logErrorAddingPersistentStore:(id)arg1 ;
-(void)logTearingDownCoreDataStack:(id)arg1 ;
-(void)logErrorTearingDownCoreDataStack:(id)arg1 ;
-(void)logErrorRemovingStoreFolder:(id)arg1 ;
-(void)postingAvatarStoreChangeNotification:(/*^block*/id)arg1 ;
-(void)logErrorSettingUserDirSuffixForSandbox:(int)arg1 ;
-(void)logGenericSandboxError:(id)arg1 error:(int)arg2 ;
-(void)logErrorSandboxInit:(char*)arg1 ;
-(void)logWarningNoHOME;
-(void)copyingStorageAside:(/*^block*/id)arg1 ;
-(void)restoringStorage:(/*^block*/id)arg1 ;
-(void)logCoalesceableEventOccured:(id)arg1 ;
-(void)checkingAccountInfo:(/*^block*/id)arg1 ;
-(void)logAccountInfo:(id)arg1 status:(long long)arg2 deviceToDeviceEncryption:(BOOL)arg3 ;
-(void)logErrorGettingAccountInfo:(id)arg1 ;
-(void)logErrorUpdatingBackupInclusionStatus:(id)arg1 ;
-(void)logErrorMigratingBackupInclusionStatus:(id)arg1 ;
-(void)checkingIn:(/*^block*/id)arg1 ;
-(void)logUpdatingBackupExclusionStatus:(BOOL)arg1 ;
-(void)logAvatarsDaemonClientConnectionInterrupted;
-(void)logAvatarsDaemonClientConnectionInvalidated;
-(void)logErrorGettingAvatarsDaemonClientProxy:(id)arg1 ;
-(void)logNoProxyToAvatarsDaemon;
-(void)logPaddleViewVideoPlayerFailed:(id)arg1 ;
-(void)logStickerViewSnapshotForBounds:(CGRect)arg1 offset:(CGPoint)arg2 ;
-(void)logCarouselChangingToSingleMode;
-(void)logCarouselChangingToMultiMode;
-(void)logCarouselTransitionCenterItem:(id)arg1 withCell:(id)arg2 ;
-(void)logSingleModeControllerStartUsingLiveView:(id)arg1 ;
-(void)logSingleModeControllerStopUsingLiveView:(id)arg1 ;
-(void)logStartTransition:(id)arg1 state:(long long)arg2 ;
-(void)logSetupHandlerCompletedForTransition:(id)arg1 state:(long long)arg2 finished:(BOOL)arg3 ;
-(void)logPerformTransition:(id)arg1 ;
-(void)logCancelTransition:(id)arg1 ;
-(void)logTransition:(id)arg1 state:(unsigned long long)arg2 reachedStage:(unsigned long long)arg3 ;
-(void)logToLivePoseTransitionBegins:(id)arg1 ;
-(void)logToLivePoseTransitionEnds:(id)arg1 ;
-(void)logCarouselDelegateDidFocusRecord:(id)arg1 ;
-(void)logCarouselDelegateWillEndFocusRecord:(id)arg1 ;
-(void)logCarouselDelegateNearnessFactorDidChange:(double)arg1 towardRecord:(BOOL)arg2 editable:(BOOL)arg3 ;
-(void)logCarouselDelegateDidUpdateRecord:(id)arg1 ;
-(void)logFoundExistingRecordDuringMigration:(id)arg1 ;
-(void)logRenderingModelColor:(id)arg1 ;
-(void)logRenderingModelPreset:(id)arg1 ;
-(void)logCarouselErrorGettingFrameForElementAtIndex:(unsigned long long)arg1 ;
-(void)logCarouselEndsDraggingWithVelocity:(double)arg1 willSwitchIndexPathInsteadOfScrollBack:(BOOL)arg2 forHighVelocity:(BOOL)arg3 ;
-(void)logGeneratingImageForRecord:(id)arg1 scope:(id)arg2 type:(long long)arg3 ;
-(void)logGeneratingImageError:(id)arg1 ;
-(void)logErrorDeletingSomeThumbnail:(id)arg1 ;
-(void)logErrorProcessingChangeTransactionsToUpdateThumbnails:(id)arg1 ;
-(void)updatingThumbnailsForRemoteChanges:(/*^block*/id)arg1 ;
-(void)logCancelingPreLoadingTask:(id)arg1 ;
-(void)logPreLoadingNeededForIndex:(unsigned long long)arg1 section:(unsigned long long)arg2 ;
-(void)logRequestingPreLoadingTask:(id)arg1 forIndex:(unsigned long long)arg2 section:(unsigned long long)arg3 ;
-(void)logInMemoryCacheStorageForResource:(id)arg1 ;
-(void)logInMemoryCacheHitForResource:(id)arg1 ;
-(void)logInMemoryCacheEvictsResource:(id)arg1 ;
-(void)logAvatarsDaemonReceivesIncomingConnection;
-(void)logAvatarsDaemonClientChecksIn:(int)arg1 ;
-(void)logMissingTombstonedIdentifier;
-(void)logPersistentChangeNotOfInterest:(id)arg1 ;
-(void)logErrorGettingChangedRecordsContentForIdentifiers:(id)arg1 error:(id)arg2 ;
-(void)logTooManyAvatars:(unsigned long long)arg1 limit:(unsigned long long)arg2 ;
-(void)logUnableToReadRemoteRecord:(id)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:53:07 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <WiFiKit/WFCredentialsContext.h>
#import <libobjc.A.dylib/WFContextPresenting.h>
#import <libobjc.A.dylib/WFOtherNetworkProviderContext.h>
#import <libobjc.A.dylib/WFOtherNetworkViewControllerDelegate.h>

@class NSArray, NSString, WFNetworkScanRecord, WFUserSuppliedNetwork, WFNetworkProfile;

@interface WFOtherNetworkContext : WFCredentialsContext <WFContextPresenting, WFOtherNetworkProviderContext, WFOtherNetworkViewControllerDelegate> {

	BOOL passwordSharingSupported;
	BOOL _supportsRandomMACAddress;
	BOOL _isUsingRandomMACAddress;
	NSArray* _availableTLSIdentities;
	long long _requestedFields;
	NSString* username;
	WFNetworkScanRecord* _network;
	long long _availableAuthTraits;
	NSString* _randomMACAddress;
	NSString* _hardwareMACAddress;
	WFUserSuppliedNetwork* _userSuppliedNetwork;
	/*^block*/id _actionHandler;
	NSArray* _WAPIRootCertificates;
	NSArray* _WAPIIdentities;
	WFNetworkProfile* _profile;
	unsigned long long _type;

}

@property (nonatomic,retain) NSArray * WAPIRootCertificates;                                                 //@synthesize WAPIRootCertificates=_WAPIRootCertificates - In the implementation block
@property (nonatomic,retain) NSArray * WAPIIdentities;                                                       //@synthesize WAPIIdentities=_WAPIIdentities - In the implementation block
@property (nonatomic,retain) NSArray * availableTLSIdentities;                                               //@synthesize availableTLSIdentities=_availableTLSIdentities - In the implementation block
@property (assign,nonatomic) long long requestedFields;                                                      //@synthesize requestedFields=_requestedFields - In the implementation block
@property (nonatomic,retain) WFNetworkProfile * profile;                                                     //@synthesize profile=_profile - In the implementation block
@property (nonatomic,retain) WFNetworkScanRecord * network;                                                  //@synthesize network=_network - In the implementation block
@property (assign,nonatomic) unsigned long long type;                                                        //@synthesize type=_type - In the implementation block
@property (assign,nonatomic) long long availableAuthTraits;                                                  //@synthesize availableAuthTraits=_availableAuthTraits - In the implementation block
@property (assign,nonatomic) BOOL isUsingRandomMACAddress;                                                   //@synthesize isUsingRandomMACAddress=_isUsingRandomMACAddress - In the implementation block
@property (assign,nonatomic) BOOL supportsRandomMACAddress;                                                  //@synthesize supportsRandomMACAddress=_supportsRandomMACAddress - In the implementation block
@property (nonatomic,copy) NSString * randomMACAddress;                                                      //@synthesize randomMACAddress=_randomMACAddress - In the implementation block
@property (nonatomic,copy) NSString * hardwareMACAddress;                                                    //@synthesize hardwareMACAddress=_hardwareMACAddress - In the implementation block
@property (nonatomic,retain) WFUserSuppliedNetwork * userSuppliedNetwork;                                    //@synthesize userSuppliedNetwork=_userSuppliedNetwork - In the implementation block
@property (nonatomic,copy) id actionHandler;                                                                 //@synthesize actionHandler=_actionHandler - In the implementation block
@property (assign,nonatomic,__weak) UIViewController*<WFNetworkView> provider; 
@property (nonatomic,readonly) BOOL needsDismissal; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) BOOL WAPIEnabled; 
@property (getter=isPasswordSharingSupported,nonatomic,readonly) BOOL passwordSharingSupported; 
@property (nonatomic,readonly) NSString * username; 
@property (getter=isEnterprise,nonatomic,readonly) BOOL enterprise; 
@property (getter=isWeakSecurity,nonatomic,readonly) BOOL weakSecurity; 
-(void)setProfile:(WFNetworkProfile *)arg1 ;
-(void)setNetwork:(WFNetworkScanRecord *)arg1 ;
-(void)setRequestedFields:(long long)arg1 ;
-(BOOL)isEnterprise;
-(WFNetworkProfile *)profile;
-(id)actionHandler;
-(void)setRandomMACAddress:(NSString *)arg1 ;
-(NSString *)username;
-(WFNetworkScanRecord *)network;
-(void)setActionHandler:(id)arg1 ;
-(NSString *)hardwareMACAddress;
-(unsigned long long)type;
-(long long)requestedFields;
-(void)setType:(unsigned long long)arg1 ;
-(NSString *)randomMACAddress;
-(long long)securityMode;
-(id)initWithType:(unsigned long long)arg1 ;
-(BOOL)isPasswordSharingSupported;
-(void)gatherCredentials:(/*^block*/id)arg1 ;
-(void)finishWithError:(id)arg1 forNetwork:(id)arg2 profile:(id)arg3 ;
-(id)initWithType:(unsigned long long)arg1 authTraits:(long long)arg2 supportRandomAddress:(BOOL)arg3 useRandomAddress:(BOOL)arg4 randomMACAddress:(id)arg5 hardwareMACAddress:(id)arg6 ;
-(WFUserSuppliedNetwork *)userSuppliedNetwork;
-(BOOL)validateCredentials;
-(BOOL)validatePassword;
-(NSArray *)WAPIRootCertificates;
-(void)setUserSuppliedNetwork:(WFUserSuppliedNetwork *)arg1 ;
-(void)_updateActivityStringForError:(id)arg1 networkName:(id)arg2 ;
-(NSArray *)availableTLSIdentities;
-(long long)availableAuthTraits;
-(void)saveRandomMAC;
-(void)saveHardwareMAC;
-(NSArray *)WAPIIdentities;
-(BOOL)supportsRandomMACAddress;
-(BOOL)isUsingRandomMACAddress;
-(void)otherNetworkViewControllerUserDidTapJoin:(id)arg1 ;
-(void)otherNetworkViewControllerUserDidTapCancel:(id)arg1 ;
-(BOOL)otherNetworkViewController:(id)arg1 isValidPassword:(id)arg2 ;
-(void)setAvailableTLSIdentities:(NSArray *)arg1 ;
-(void)setAvailableAuthTraits:(long long)arg1 ;
-(void)setSupportsRandomMACAddress:(BOOL)arg1 ;
-(void)setIsUsingRandomMACAddress:(BOOL)arg1 ;
-(void)setHardwareMACAddress:(NSString *)arg1 ;
-(void)setWAPIRootCertificates:(NSArray *)arg1 ;
-(void)setWAPIIdentities:(NSArray *)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:52:47 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CloudDocsDaemon/CloudDocsDaemon-Structs.h>
#import <CloudDocsDaemon/BRCClientZone.h>

@class NSMutableArray, BRCServerZoneHealthState, BRCProblemReport, NSMutableSet, BRCAppLibrary, NSMapTable, BRCPrivateServerZone, NSSet;

@interface BRCPrivateClientZone : BRCClientZone {

	NSMutableArray* _syncBarriers;
	BRCServerZoneHealthState* _zoneHealthState;
	BRCProblemReport* _problemReport;
	NSMutableArray* _lastResets;
	NSMutableArray* _faultsLiveBarriers;
	NSMutableSet* _appLibraries;
	BRCAppLibrary* _defaultAppLibrary;
	NSMapTable* _pcsChainFolderOperations;

}

@property (nonatomic,readonly) BOOL isSharedZone; 
@property (nonatomic,readonly) BOOL isPrivateZone; 
@property (nonatomic,readonly) BOOL isDocumentScopePublic; 
@property (nonatomic,readonly) BRCPrivateServerZone * privateServerZone; 
@property (nonatomic,readonly) BOOL hasDefaultAppLibrary; 
@property (nonatomic,readonly) BRCAppLibrary * defaultAppLibrary;                       //@synthesize defaultAppLibrary=_defaultAppLibrary - In the implementation block
@property (nonatomic,readonly) NSSet * appLibraries;                                    //@synthesize appLibraries=_appLibraries - In the implementation block
@property (nonatomic,readonly) NSSet * appLibraryIDs; 
@property (nonatomic,readonly) BOOL zoneHealthNeedsSyncUp; 
@property (nonatomic,readonly) BRCServerZoneHealthState * zoneHealthState;              //@synthesize zoneHealthState=_zoneHealthState - In the implementation block
@property (nonatomic,readonly) BOOL resetFrequencyIsTooHigh; 
-(id)plist;
-(BOOL)isDocumentScopePublic;
-(void)resume;
-(NSSet *)appLibraryIDs;
-(BRCAppLibrary *)defaultAppLibrary;
-(id)fetchZoneRootItemInDB:(id)arg1 ;
-(BOOL)isPrivateZone;
-(id)asPrivateClientZone;
-(id)serverAliasByUnsaltedBookmarkData:(id)arg1 ;
-(id)initWithMangledID:(id)arg1 dbRowID:(id)arg2 db:(id)arg3 plist:(id)arg4 session:(id)arg5 initialCreation:(BOOL)arg6 ;
-(NSSet *)appLibraries;
-(BOOL)dumpActivityToContext:(id)arg1 includeExpensiveActivity:(BOOL)arg2 error:(id*)arg3 ;
-(BOOL)dumpTablesToContext:(id)arg1 includeAllItems:(BOOL)arg2 error:(id*)arg3 ;
-(id)resolveClashOfAlias:(id)arg1 atPath:(id)arg2 withAlias:(id)arg3 atPath:(id)arg4 ;
-(id)rootItemID;
-(void)syncedDownZoneHealthState:(id)arg1 ;
-(void)zoneHealthWasReset;
-(BOOL)validateItemsLoggingToFile:(_sFILE*)arg1 db:(id)arg2 ;
-(BOOL)validateStructureLoggingToFile:(_sFILE*)arg1 db:(id)arg2 ;
-(void)signalFaultingWatchersWithError:(id)arg1 ;
-(void)updateWithPlist:(id)arg1 ;
-(void)addAppLibrary:(id)arg1 ;
-(void)notifyClient:(id)arg1 whenFaultingIsDone:(/*^block*/id)arg2 ;
-(void)clearProblemReport;
-(BOOL)zoneHealthNeedsSyncUp;
-(void)syncedDownZoneHealthRequestID:(long long)arg1 ;
-(void)reportProblemWithType:(int)arg1 recordName:(id)arg2 ;
-(BOOL)recomputeAppSyncBlockState;
-(unsigned)pcsChainStateForItem:(id)arg1 ;
-(void)setServerZone:(id)arg1 ;
-(BRCServerZoneHealthState *)zoneHealthState;
-(void)removeAppLibrary:(id)arg1 ;
-(BOOL)resetFrequencyIsTooHigh;
-(BRCPrivateServerZone *)privateServerZone;
-(void)_checkResultSetIsEmpty:(id)arg1 logToFile:(_sFILE*)arg2 reason:(id)arg3 result:(BOOL*)arg4 ;
-(BOOL)hasDefaultAppLibrary;
-(void)registerPCSChainingOperation:(id)arg1 ;
-(id)pcsChainOperationForItemID:(id)arg1 ;
-(id)prepareProblemReportForSyncWithRequestID:(long long)arg1 ;
-(void)performBlock:(/*^block*/id)arg1 whenSyncDownCompletesLookingForAliasWithBookmarkData:(id)arg2 ;
-(BOOL)removeSyncDownForAliasData:(id)arg1 ;
-(BOOL)parentIDHasLiveUnchainedChildren:(id)arg1 ;
-(id)unchainedItemInfoInServerTruthEnumeratorParentedTo:(id)arg1 ;
@end


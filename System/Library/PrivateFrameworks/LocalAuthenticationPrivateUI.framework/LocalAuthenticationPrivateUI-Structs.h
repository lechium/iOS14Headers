/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:54:40 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/LocalAuthenticationPrivateUI.framework/LocalAuthenticationPrivateUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString, CALayer, NSObject<OS_dispatch_source>, <MTLRenderPipelineState>, <MTLDevice>, <MTLDepthStencilState>, <MTLComputePipelineState>, <MTLTexture>, UIImageView;

typedef struct _compressed_pair<unsigned long, std::__1::__map_value_compare<CALayer *__unsafe_unretained, std::__1::__value_type<CALayer *__unsafe_unretained, CALayer *>, std::__1::less<CALayer *__unsafe_unretained>, true> > {
	unsigned long long __value_;
} compressed_pair<unsigned long, std::__1::__map_value_compare<CALayer *__unsafe_unretained, std::__1::__value_type<CALayer *__unsafe_unretained, CALayer *>, std::__1::less<CALayer *__unsafe_unretained>, true> >;

typedef struct _tree_end_node<std::__1::__tree_node_base<void *> *> {
	__tree_node_base<void *> __left_;
} tree_end_node<std::__1::__tree_node_base<void *> *>;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CALayer *__unsafe_unretained, CALayer *>, void *> > > {
	tree_end_node<std::__1::__tree_node_base<void *> *> __value_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CALayer *__unsafe_unretained, CALayer *>, void *> > >;

typedef struct _tree<std::__1::__value_type<CALayer *__unsafe_unretained, CALayer *>, std::__1::__map_value_compare<CALayer *__unsafe_unretained, std::__1::__value_type<CALayer *__unsafe_unretained, CALayer *>, std::__1::less<CALayer *__unsafe_unretained>, true>, std::__1::allocator<std::__1::__value_type<CALayer *__unsafe_unretained, CALayer *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CALayer *__unsafe_unretained, CALayer *>, void *> > > __pair1_;
	compressed_pair<unsigned long, std::__1::__map_value_compare<CALayer *__unsafe_unretained, std::__1::__value_type<CALayer *__unsafe_unretained, CALayer *>, std::__1::less<CALayer *__unsafe_unretained>, true> > __pair3_;
} tree<std::__1::__value_type<CALayer *__unsafe_unretained, CALayer *>, std::__1::__map_value_compare<CALayer *__unsafe_unretained, std::__1::__value_type<CALayer *__unsafe_unretained, CALayer *>, std::__1::less<CALayer *__unsafe_unretained>, true>, std::__1::allocator<std::__1::__value_type<CALayer *__unsafe_unretained, CALayer *> > >;

typedef struct map<CALayer *__unsafe_unretained, CALayer *, std::__1::less<CALayer *__unsafe_unretained>, std::__1::allocator<std::__1::pair<CALayer *const __unsafe_unretained, CALayer *> > > {
	tree<std::__1::__value_type<CALayer *__unsafe_unretained, CALayer *>, std::__1::__map_value_compare<CALayer *__unsafe_unretained, std::__1::__value_type<CALayer *__unsafe_unretained, CALayer *>, std::__1::less<CALayer *__unsafe_unretained>, true>, std::__1::allocator<std::__1::__value_type<CALayer *__unsafe_unretained, CALayer *> > > __tree_;
} map<CALayer *__unsafe_unretained, CALayer *, std::__1::less<CALayer *__unsafe_unretained>, std::__1::allocator<std::__1::pair<CALayer *const __unsafe_unretained, CALayer *> > >;

typedef struct _compressed_pair<UIView *__strong *, std::__1::allocator<UIView *> > {
	id __value_;
} compressed_pair<UIView *__strong *, std::__1::allocator<UIView *> >;

typedef struct vector<UIView *, std::__1::allocator<UIView *> > {
	id __begin_;
	id __end_;
	compressed_pair<UIView *__strong *, std::__1::allocator<UIView *> > __end_cap_;
} vector<UIView *, std::__1::allocator<UIView *> >;

typedef struct CGSize {
	double width;
	double height;
} CGSize;

typedef struct periodic_animation_state {
	BOOL enabled;
	NSString* _key;
	CALayer* _layer;
	NSObject<OS_dispatch_source>* _removal_timer;
} periodic_animation_state;

typedef struct array<id<MTLRenderPipelineState>, 3> {
	<MTLRenderPipelineState>* __elems_[3];
} array<id<MTLRenderPipelineState>, 3>;

typedef struct renderer_shared_state {
	<MTLDevice>* device;
	<MTLDepthStencilState>* depth_stencil_state;
	<MTLComputePipelineState>* tesselation_factor_pipeline;
	<MTLRenderPipelineState>* tube_pipeline;
	array<id<MTLRenderPipelineState>, 3> begin_cap_pipelines;
	array<id<MTLRenderPipelineState>, 3> end_cap_pipelines;
	<MTLComputePipelineState>* horizontal_blur_pipeline;
	<MTLComputePipelineState>* vertical_blur_pipeline;
	<MTLComputePipelineState>* accumulator_pipeline;
} renderer_shared_state;

typedef struct _compressed_pair<(anonymous namespace)::buffer_group *, std::__1::allocator<(anonymous namespace)::buffer_group> > {
	buffer_group __value_;
} compressed_pair<(anonymous namespace)::buffer_group *, std::__1::allocator<(anonymous namespace)::buffer_group> >;

typedef struct vector<(anonymous namespace)::buffer_group, std::__1::allocator<(anonymous namespace)::buffer_group> > {
	buffer_group __begin_;
	buffer_group __end_;
	compressed_pair<(anonymous namespace)::buffer_group *, std::__1::allocator<(anonymous namespace)::buffer_group> > __end_cap_;
} vector<(anonymous namespace)::buffer_group, std::__1::allocator<(anonymous namespace)::buffer_group> >;

typedef struct _cxx_atomic_impl<unsigned char, std::__1::__cxx_atomic_base_impl<unsigned char> > {
	AC __a_value;
} cxx_atomic_impl<unsigned char, std::__1::__cxx_atomic_base_impl<unsigned char> >;

typedef struct atomic<unsigned char> {
	cxx_atomic_impl<unsigned char, std::__1::__cxx_atomic_base_impl<unsigned char> > __a_;
} atomic<unsigned char>;

typedef struct array<id<MTLTexture>, 2> {
	<MTLTexture>* __elems_[2];
} array<id<MTLTexture>, 2>;

typedef struct _compressed_pair<LAUI_uniform_cubic_b_spline_renderer_private::control_point *, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer_private::control_point> > {
	control_point __value_;
} compressed_pair<LAUI_uniform_cubic_b_spline_renderer_private::control_point *, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer_private::control_point> >;

typedef struct vector<LAUI_uniform_cubic_b_spline_renderer_private::control_point, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer_private::control_point> > {
	control_point __begin_;
	control_point __end_;
	compressed_pair<LAUI_uniform_cubic_b_spline_renderer_private::control_point *, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer_private::control_point> > __end_cap_;
} vector<LAUI_uniform_cubic_b_spline_renderer_private::control_point, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer_private::control_point> >;

typedef struct _compressed_pair<unsigned short *, std::__1::allocator<unsigned short> > {
	unsigned short __value_;
} compressed_pair<unsigned short *, std::__1::allocator<unsigned short> >;

typedef struct vector<unsigned short, std::__1::allocator<unsigned short> > {
	unsigned short __begin_;
	unsigned short __end_;
	compressed_pair<unsigned short *, std::__1::allocator<unsigned short> > __end_cap_;
} vector<unsigned short, std::__1::allocator<unsigned short> >;

typedef struct _compressed_pair<LAUI_uniform_cubic_b_spline_renderer_private::instance_uniform *, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer_private::instance_uniform> > {
	instance_uniform __value_;
} compressed_pair<LAUI_uniform_cubic_b_spline_renderer_private::instance_uniform *, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer_private::instance_uniform> >;

typedef struct vector<LAUI_uniform_cubic_b_spline_renderer_private::instance_uniform, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer_private::instance_uniform> > {
	instance_uniform __begin_;
	instance_uniform __end_;
	compressed_pair<LAUI_uniform_cubic_b_spline_renderer_private::instance_uniform *, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer_private::instance_uniform> > __end_cap_;
} vector<LAUI_uniform_cubic_b_spline_renderer_private::instance_uniform, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer_private::instance_uniform> >;

typedef struct animator<float, 0> {
	float _target;
	float _intermediate;
	float _actual;
	float _k;
	float _elapsed_n;
	float _target_n;
	float _visual_target_n;
	unsigned char _interpolation;
} animator<float, 0>;

typedef struct animator<nullptr_t, 0> {
	char* _target;
	char* _intermediate;
	char* _actual;
	float _k;
	float _elapsed_n;
	float _target_n;
	float _visual_target_n;
	unsigned char _interpolation;
} animator<nullptr_t, 0>;

typedef struct global_state_animator {
	animator<float, 0> accumulator_growth;
	animator<float, 0> accumulator_persistence;
	animator<float, 0> accumulator_luminance_alpha_factor;
	animator<float, 0> blur_scale;
	animator<nullptr_t, 0> hidden_animator;
} global_state_animator;

typedef struct _compressed_pair<LAUI_uniform_cubic_b_spline_renderer::global_state *, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::global_state> > {
	global_state __value_;
} compressed_pair<LAUI_uniform_cubic_b_spline_renderer::global_state *, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::global_state> >;

typedef struct vector<LAUI_uniform_cubic_b_spline_renderer::global_state, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::global_state> > {
	global_state __begin_;
	global_state __end_;
	compressed_pair<LAUI_uniform_cubic_b_spline_renderer::global_state *, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::global_state> > __end_cap_;
} vector<LAUI_uniform_cubic_b_spline_renderer::global_state, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::global_state> >;

typedef struct animation_completion_handler_container {
	/*^block*/id _completion;
} animation_completion_handler_container;

typedef struct _compressed_pair<LAUI_uniform_cubic_b_spline_renderer::spline *, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline> > {
	spline __value_;
} compressed_pair<LAUI_uniform_cubic_b_spline_renderer::spline *, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline> >;

typedef struct vector<LAUI_uniform_cubic_b_spline_renderer::spline, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline> > {
	spline __begin_;
	spline __end_;
	compressed_pair<LAUI_uniform_cubic_b_spline_renderer::spline *, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline> > __end_cap_;
} vector<LAUI_uniform_cubic_b_spline_renderer::spline, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline> >;

typedef struct _compressed_pair<std::__1::vector<LAUI_uniform_cubic_b_spline_renderer::spline_instance, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline_instance> > *, std::__1::allocator<std::__1::vector<LAUI_uniform_cubic_b_spline_renderer::spline_instance, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline_instance> > > > {
	vector<LAUI_uniform_cubic_b_spline_renderer::spline_instance, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline_instance> > __value_;
} compressed_pair<std::__1::vector<LAUI_uniform_cubic_b_spline_renderer::spline_instance, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline_instance> > *, std::__1::allocator<std::__1::vector<LAUI_uniform_cubic_b_spline_renderer::spline_instance, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline_instance> > > >;

typedef struct vector<std::__1::vector<LAUI_uniform_cubic_b_spline_renderer::spline_instance, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline_instance> >, std::__1::allocator<std::__1::vector<LAUI_uniform_cubic_b_spline_renderer::spline_instance, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline_instance> > > > {
	vector<LAUI_uniform_cubic_b_spline_renderer::spline_instance, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline_instance> > __begin_;
	vector<LAUI_uniform_cubic_b_spline_renderer::spline_instance, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline_instance> > __end_;
	compressed_pair<std::__1::vector<LAUI_uniform_cubic_b_spline_renderer::spline_instance, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline_instance> > *, std::__1::allocator<std::__1::vector<LAUI_uniform_cubic_b_spline_renderer::spline_instance, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline_instance> > > > __end_cap_;
} vector<std::__1::vector<LAUI_uniform_cubic_b_spline_renderer::spline_instance, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline_instance> >, std::__1::allocator<std::__1::vector<LAUI_uniform_cubic_b_spline_renderer::spline_instance, std::__1::allocator<LAUI_uniform_cubic_b_spline_renderer::spline_instance> > > >;

typedef struct double4x4 {
	[4 columns];
} double4x4;

typedef struct blur_container {
	UIImageView* view;
	periodic_animation_state pulse;
} blur_container;

typedef struct array<(anonymous namespace)::blur_container, 2> {
	blur_container __elems_[2];
} array<(anonymous namespace)::blur_container, 2>;

typedef struct _compressed_pair<CAShapeLayer *__strong *, std::__1::allocator<CAShapeLayer *> > {
	id __value_;
} compressed_pair<CAShapeLayer *__strong *, std::__1::allocator<CAShapeLayer *> >;

typedef struct vector<CAShapeLayer *, std::__1::allocator<CAShapeLayer *> > {
	id __begin_;
	id __end_;
	compressed_pair<CAShapeLayer *__strong *, std::__1::allocator<CAShapeLayer *> > __end_cap_;
} vector<CAShapeLayer *, std::__1::allocator<CAShapeLayer *> >;

typedef struct _compressed_pair<LAUI_CA_utilities::animation_completion_handler_container *, std::__1::allocator<LAUI_CA_utilities::animation_completion_handler_container> > {
	animation_completion_handler_container __value_;
} compressed_pair<LAUI_CA_utilities::animation_completion_handler_container *, std::__1::allocator<LAUI_CA_utilities::animation_completion_handler_container> >;

typedef struct vector<LAUI_CA_utilities::animation_completion_handler_container, std::__1::allocator<LAUI_CA_utilities::animation_completion_handler_container> > {
	animation_completion_handler_container __begin_;
	animation_completion_handler_container __end_;
	compressed_pair<LAUI_CA_utilities::animation_completion_handler_container *, std::__1::allocator<LAUI_CA_utilities::animation_completion_handler_container> > __end_cap_;
} vector<LAUI_CA_utilities::animation_completion_handler_container, std::__1::allocator<LAUI_CA_utilities::animation_completion_handler_container> >;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> *> > {
	unsigned long long __value_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, std::__1::hash<unsigned long>, true> > {
	unsigned long long __value_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, std::__1::hash<unsigned long>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, std::__1::equal_to<unsigned long>, true> > {
	float __value_;
} compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, std::__1::equal_to<unsigned long>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> __value_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> __value_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> *> > __value_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> > > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, std::__1::hash<unsigned long>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, std::__1::equal_to<unsigned long>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> > > >;

typedef struct unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> > > > {
	hash_table<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> > > > __table_;
} unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6> > > >;

typedef struct _compressed_pair<unsigned long, std::__1::less<unsigned long> > {
	unsigned long long __value_;
} compressed_pair<unsigned long, std::__1::less<unsigned long> >;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > > {
	tree_end_node<std::__1::__tree_node_base<void *> *> __value_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > >;

typedef struct _tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > > __pair1_;
	compressed_pair<unsigned long, std::__1::less<unsigned long> > __pair3_;
} tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >;

typedef struct set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > {
	tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > __tree_;
} set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> *> > {
	unsigned long long __value_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, std::__1::hash<unsigned long>, true> > {
	unsigned long long __value_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, std::__1::hash<unsigned long>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, std::__1::equal_to<unsigned long>, true> > {
	float __value_;
} compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, std::__1::equal_to<unsigned long>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> __value_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> __value_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> *> > __value_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > > > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, std::__1::hash<unsigned long>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, std::__1::equal_to<unsigned long>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > > > >;

typedef struct unordered_map<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > >, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > > > > {
	hash_table<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > > > > __table_;
} unordered_map<unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > >, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::unordered_map<unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3> > > > > > >;

typedef struct _compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::less<unsigned long>, true> > {
	unsigned long long __value_;
} compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::less<unsigned long>, true> >;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, void *> > > {
	tree_end_node<std::__1::__tree_node_base<void *> *> __value_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, void *> > >;

typedef struct _tree<std::__1::__value_type<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > > > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, void *> > > __pair1_;
	compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::less<unsigned long>, true> > __pair3_;
} tree<std::__1::__value_type<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > > > >;

typedef struct map<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > > > > {
	tree<std::__1::__value_type<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > > > > __tree_;
} map<unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > > > >;

typedef struct global_state {
	float accumulator_growth;
	float accumulator_persistence;
	float accumulator_luminance_alpha_factor;
	float blur_scale;
	float k;
	float epsilon;
} global_state;

typedef struct _compressed_pair<void (__strong *)(bool), std::__1::allocator<void ()(bool)> > {
	/*^block*/id __value_;
} compressed_pair<void (__strong *)(bool), std::__1::allocator<void ()(bool)> >;

typedef struct vector<void ()(bool), std::__1::allocator<void ()(bool)> > {
	/*^block*/id __begin_;
	/*^block*/id __end_;
	compressed_pair<void (__strong *)(bool), std::__1::allocator<void ()(bool)> > __end_cap_;
} vector<void ()(bool), std::__1::allocator<void ()(bool)> >;

typedef struct CGColorSpace* CGColorSpaceRef;


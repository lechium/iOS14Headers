/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:52:12 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/NanoMusicSync.framework/NanoMusicSync
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/ICEnvironmentMonitorObserver.h>

@protocol OS_dispatch_queue;
@class NMSyncDefaults, NMSPodcastSizeCache, NMSMediaSyncInfo, NMSMediaQuotaManager, NSObject, NSArray, NMSMediaDownloadInfo, NSNumber, NSOrderedSet, NSString;

@interface NMSMediaPinningManager : NSObject <ICEnvironmentMonitorObserver> {

	NMSyncDefaults* _sharedDefaults;
	NMSPodcastSizeCache* _podcastSizeCache;
	NMSMediaSyncInfo* _podcastStationsSyncInfo;
	NMSMediaQuotaManager* _addedItemsQuotaManager;
	NMSMediaQuotaManager* _downloadedItemsQuotaManager;
	unsigned long long _mediaQuota;
	NSObject*<OS_dispatch_queue> _internalQueue;
	NSArray* _cachedPlaylistIdentifiers;
	NSArray* _cachedAlbumIdentifiers;
	NSArray* _cachedPodcastFeedURLs;
	NSArray* _cachedPodcastStationUUIDs;
	NSArray* _cachedAudiobookIdentifiers;
	BOOL _pinnedPlaylistsValidated;
	BOOL _workoutPlaylistValidated;

}

@property (nonatomic,readonly) NMSMediaDownloadInfo * downloadInfo; 
@property (nonatomic,readonly) NSArray * playlistIdentifiers; 
@property (nonatomic,readonly) NSArray * albumIdentifiers; 
@property (nonatomic,readonly) NSArray * pinnedPlaylists; 
@property (nonatomic,readonly) NSArray * pinnedAlbums; 
@property (nonatomic,retain) NSNumber * workoutPlaylistID; 
@property (nonatomic,readonly) NSArray * podcastFeedURLs; 
@property (nonatomic,readonly) NSArray * podcastStationUUIDs; 
@property (assign,nonatomic) BOOL pinnedPodcastsAreUserSet; 
@property (nonatomic,readonly) NSArray * audiobookIdentifiers; 
@property (assign,getter=isWantToReadEnabled,nonatomic) BOOL wantToReadEnabled; 
@property (nonatomic,retain) NSOrderedSet * wantToReadAudiobooks; 
@property (assign,getter=isReadingNowEnabled,nonatomic) BOOL readingNowEnabled; 
@property (nonatomic,retain) NSOrderedSet * readingNowAudiobooks; 
@property (nonatomic,readonly) NSOrderedSet * pinnedAudiobooks; 
@property (assign,nonatomic) double audiobookDownloadLimit; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedManager;
+(unsigned long long)_mediaStorageSizeForCurrentDevice;
+(id)_cachedAlbumIdentifiersFilePath;
+(id)_cachedPlaylistIdentifiersFilePath;
+(BOOL)playlistPIDValidForPinning:(id)arg1 ;
+(id)_cachedPodcastFeedURLsFilePath;
+(id)_cachedPodcastStationUUIDsFilePath;
+(id)_cachedAudiobookIdentifiersFilePath;
+(id)_tokenForInstance:(id)arg1 ;
+(void)_persistNewClientToken;
+(id)_fetchMusicRecommendations;
+(id)_cachedIdentifiersDirectoryPath;
-(void)setWorkoutPlaylistID:(NSNumber *)arg1 ;
-(void)_handlePairedDeviceDidBecomeActiveNotification:(id)arg1 ;
-(BOOL)pinnedPodcastsAreUserSet;
-(NSArray *)pinnedAlbums;
-(NSOrderedSet *)readingNowAudiobooks;
-(void)dealloc;
-(void)setAudiobookDownloadLimit:(double)arg1 ;
-(void)setWantToReadEnabled:(BOOL)arg1 ;
-(void)_handleRecommendationSelectionsDidChangeNotification:(id)arg1 ;
-(void)setReadingNowEnabled:(BOOL)arg1 ;
-(void)setReadingNowAudiobooks:(NSOrderedSet *)arg1 ;
-(void)setPinnedPodcastsAreUserSet:(BOOL)arg1 ;
-(id)init;
-(void)setAvailableSpace:(unsigned long long)arg1 ;
-(NSArray *)playlistIdentifiers;
-(double)audiobookDownloadLimit;
-(NSArray *)pinnedPlaylists;
-(NSOrderedSet *)wantToReadAudiobooks;
-(NSOrderedSet *)pinnedAudiobooks;
-(void)setListenNowPodcastFeedURLs:(id)arg1 ;
-(NSNumber *)workoutPlaylistID;
-(void)_handleMediaLibraryEntitiesAddedOrRemovedNotification:(id)arg1 ;
-(void)setWantToReadAudiobooks:(NSOrderedSet *)arg1 ;
-(BOOL)isItemGroupWithinQuota:(id)arg1 ;
-(void)_handlePodcastStationsDidChange:(id)arg1 ;
-(void)_handleMusicPinningSelectionsDidChangeNotification:(id)arg1 ;
-(void)_handleRecommendationLibraryContentsDidChangeNotification:(id)arg1 ;
-(void)_handleRecommendationsDidUpdateNotification:(id)arg1 ;
-(void)_handlePodcastsPinningSelectionsDidChangeNotification:(id)arg1 ;
-(void)_handlePodcastsSubscriptionMetadataDidChangeNotification:(id)arg1 ;
-(void)_handlePodcastSizeInfoDidChangeNotification:(id)arg1 ;
-(void)_handleAudiobooksPinningSelectionsDidChangeNotification:(id)arg1 ;
-(void)_handleAudiobooksRecommendationsDidChangeNotification:(id)arg1 ;
-(void)_handleICAgeVerificationStateDidChangeNotification:(id)arg1 ;
-(void)_handlePodcastSizeCacheDidUpdateNotification:(id)arg1 ;
-(void)_handleMediaPinningMusicContentsInvalidatedNotification:(id)arg1 ;
-(void)_handleMediaPinningPodcastsContentsInvalidatedNotification:(id)arg1 ;
-(void)_handleMediaPinningAudiobooksContentsInvalidatedNotification:(id)arg1 ;
-(void)_handleMediaPinningManagerMusicIdentifiersDidChangeNotification:(id)arg1 ;
-(void)_handleMediaPinningManagerPodcastsIdentifiersDidChangeNotification:(id)arg1 ;
-(void)_handleMediaPinningManagerAudiobooksIdentifiersDidChangeNotification:(id)arg1 ;
-(NMSMediaDownloadInfo *)downloadInfo;
-(void)_invalidateAddedItemsCache;
-(id)_quotaManagerWithDownloadedItemsOnly:(BOOL)arg1 ;
-(void)_invalidateMediaCacheForAppIdentifiers:(unsigned long long)arg1 ;
-(BOOL)_shouldCalculateCachedIdentifiers;
-(void)_refreshMusicIdentifiers;
-(void)_fetchMusicIdentifiers;
-(BOOL)_isAlbumPinned:(id)arg1 ;
-(BOOL)_isPlaylistPinned:(id)arg1 ;
-(void)_setWorkoutPlaylistID:(id)arg1 ;
-(void)_updateWorkoutSettingsPlaylistPIDTo:(id)arg1 ;
-(void)_refreshPodcastsIdentifiers;
-(void)_fetchPodcastsIdentifiers;
-(void)_refreshAudiobooksIdentifiers;
-(void)_fetchAudiobooksIdentifiers;
-(BOOL)_isAudiobookPinned:(id)arg1 ;
-(double)_audiobookDownloadLimit;
-(void)_notePinningSettingsChangedLocally;
-(unsigned long long)episodeLimitForPodcastsAreUserSet:(BOOL)arg1 ;
-(BOOL)_shouldSkipQuotaManagerEvaluation;
-(BOOL)_isAppDormantForBundleIdentifier:(id)arg1 ;
-(id)_newMusicGroupIteratorWithDownloadedItemsOnly:(BOOL)arg1 ;
-(id)_newPodcastsGroupIteratorWithDownloadedItemsOnly:(BOOL)arg1 ;
-(id)_newAudiobooksGroupIteratorWithDownloadedItemsOnly:(BOOL)arg1 ;
-(id)downloadInfoWithinAvailableSpace:(unsigned long long)arg1 ;
-(id)downloadInfoForBundleIdentifier:(id)arg1 ;
-(void)invalidateMusicCache;
-(unsigned long long)addedSongsSize;
-(unsigned long long)nominatedSongsSize;
-(NSArray *)albumIdentifiers;
-(BOOL)isAlbumPinned:(id)arg1 ;
-(BOOL)isPlaylistPinned:(id)arg1 ;
-(void)pinAlbum:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)pinPlaylist:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)unpinAlbum:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)unpinPlaylist:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)invalidatePodcastsCache;
-(void)setGizmoDownloadOrder:(unsigned long long)arg1 forPodcastWithFeedURL:(id)arg2 ;
-(void)removePodcastWithFeedURL:(id)arg1 ;
-(unsigned long long)downloadOrderForPodcastWithFeedURL:(id)arg1 ;
-(void)setGizmoEpisodeLimit:(unsigned long long)arg1 forPodcastWithFeedURL:(id)arg2 ;
-(unsigned long long)episodeLimitForPodcastWithFeedURL:(id)arg1 ;
-(NSArray *)podcastFeedURLs;
-(NSArray *)podcastStationUUIDs;
-(void)pinPodcastWithFeedURL:(id)arg1 ;
-(void)unpinPodcastWithFeedURL:(id)arg1 ;
-(BOOL)isPodcastWithFeedURLPinned:(id)arg1 ;
-(void)pinPodcastStationWithUUID:(id)arg1 ;
-(void)unpinPodcastStationWithUUID:(id)arg1 ;
-(BOOL)isPodcastStationWithUUIDPinned:(id)arg1 ;
-(void)invalidateAudiobooksCache;
-(NSArray *)audiobookIdentifiers;
-(BOOL)isWantToReadEnabled;
-(BOOL)isReadingNowEnabled;
-(BOOL)isAudiobookPinned:(id)arg1 ;
-(void)pinAudiobook:(id)arg1 ;
-(void)unpinAudiobook:(id)arg1 ;
-(id)addedPodcastsDownloadInfoItemsWithFeedURL:(id)arg1 ;
-(BOOL)nms_modelObjectIsManuallyPinned:(id)arg1 ;
-(void)_pinModelObject:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_unpinModelObject:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)nms_fetchPinningStatusForModelObject:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)nms_pinModelObject:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)nms_unpinModelObject:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
@end


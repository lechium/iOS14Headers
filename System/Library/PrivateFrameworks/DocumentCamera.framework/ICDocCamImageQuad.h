/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:54:23 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/DocumentCamera.framework/DocumentCamera
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <DocumentCamera/DocumentCamera-Structs.h>
#import <libobjc.A.dylib/ICDocCamImageQuad.h>

@protocol ICDocCamImageQuad <NSObject>
@property (readonly) CGPoint topLeft; 
@property (readonly) CGPoint topRight; 
@property (readonly) CGPoint bottomLeft; 
@property (readonly) CGPoint bottomRight; 
@property (readonly) CGRect boundingBox; 
@required
-(CGPoint)bottomLeft;
-(CGPoint)topLeft;
-(CGRect)boundingBox;
-(CGPoint)topRight;
-(CGPoint)bottomRight;

@end

#import <libobjc.A.dylib/NSSecureCoding.h>

@class NSString;

@interface ICDocCamImageQuad : NSObject <ICDocCamImageQuad, NSSecureCoding> {

	CGPoint _topLeft;
	CGPoint _topRight;
	CGPoint _bottomLeft;
	CGPoint _bottomRight;
	CGRect _boundingBox;

}

@property (assign,nonatomic) CGPoint topLeft;                                               //@synthesize topLeft=_topLeft - In the implementation block
@property (assign,nonatomic) CGPoint topRight;                                              //@synthesize topRight=_topRight - In the implementation block
@property (assign,nonatomic) CGPoint bottomLeft;                                            //@synthesize bottomLeft=_bottomLeft - In the implementation block
@property (assign,nonatomic) CGPoint bottomRight;                                           //@synthesize bottomRight=_bottomRight - In the implementation block
@property (assign,nonatomic) CGRect boundingBox;                                            //@synthesize boundingBox=_boundingBox - In the implementation block
@property (nonatomic,readonly) CGRect bounds; 
@property (nonatomic,readonly) BOOL isConvex; 
@property (nonatomic,readonly) BOOL containsIntersectingLines; 
@property (nonatomic,readonly) BOOL containsPointsLessThanDistanceThreshold; 
@property (nonatomic,readonly) BOOL containsPointOutsideOfExtendedImageBounds; 
@property (nonatomic,readonly) BOOL containsAngleOutOfValidThreshold; 
@property (nonatomic,readonly) double mininumAllowedDistanceBetweenPoints; 
@property (nonatomic,readonly) BOOL isValid; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)supportsSecureCoding;
+(id)quadFromCGRect:(CGRect)arg1 ;
+(id)quadFromVNRectangle:(id)arg1 ;
-(CGRect)bounds;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setTopLeft:(CGPoint)arg1 ;
-(void)setTopRight:(CGPoint)arg1 ;
-(void)setBottomRight:(CGPoint)arg1 ;
-(void)setBottomLeft:(CGPoint)arg1 ;
-(CGPoint)bottomLeft;
-(CGPoint)topLeft;
-(void)setBoundingBox:(CGRect)arg1 ;
-(CGRect)boundingBox;
-(BOOL)isEqual:(id)arg1 ;
-(CGPoint)topRight;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(BOOL)isValid;
-(CGPoint)bottomRight;
-(NSString *)description;
-(id)initWithBottomLeft:(CGPoint)arg1 bottomRight:(CGPoint)arg2 topLeft:(CGPoint)arg3 topRight:(CGPoint)arg4 ;
-(void)flipPointsWithSourceFrame:(CGRect)arg1 ;
-(void)clampQuadToRect:(CGRect)arg1 ;
-(void)applyOrientation:(long long)arg1 boundingBox:(CGRect)arg2 ;
-(id)quadByConvertingFromView:(id)arg1 toView:(id)arg2 isNormalized:(BOOL)arg3 ;
-(id)normalizedQuadByConvertingFromView:(id)arg1 toView:(id)arg2 toViewSize:(CGSize)arg3 ;
-(void)removeOrientation:(long long)arg1 boundingBox:(CGRect)arg2 ;
-(void)orientIfNecessary;
-(id)imageQuadByScalingBy:(CGSize)arg1 ;
-(BOOL)containsIntersectingLines;
-(BOOL)containsPointsLessThanDistanceThreshold;
-(BOOL)containsPointOutsideOfExtendedImageBounds;
-(void)addPointToQuadPoints:(CGPoint)arg1 ;
-(double)mininumAllowedDistanceBetweenPoints;
-(id)intersectionOfLineFrom:(CGPoint)arg1 to:(CGPoint)arg2 withLineFrom:(CGPoint)arg3 to:(CGPoint)arg4 ;
-(void)rotatePointsByOrientation:(long long)arg1 ;
-(void)rotatePointsRemovingOrientation:(long long)arg1 ;
-(void)rotatePointsClockwise;
-(CGPoint)pointRotatedClockwiseAroundOrigin:(CGPoint)arg1 ;
-(CGSize)perspectiveCorrectedSize;
-(BOOL)containsAngleOutOfValidThreshold;
-(id)flippedQuadFromSourceFrame:(CGRect)arg1 ;
-(BOOL)isConvex;
@end


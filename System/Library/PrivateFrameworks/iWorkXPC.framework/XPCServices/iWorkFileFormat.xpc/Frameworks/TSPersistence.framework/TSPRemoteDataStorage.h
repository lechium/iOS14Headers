/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:32:42 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkXPC.framework/XPCServices/iWorkFileFormat.xpc/Frameworks/TSPersistence.framework/TSPersistence
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSPersistence/TSPersistence-Structs.h>
#import <TSReading/TSPFileDataStorage.h>

@protocol OS_dispatch_queue, TSPCryptoInfo, TSPRemoteDataStorageDelegate;
@class SFUCryptoKey, NSObject, TSPTemporaryDataStorageURL, NSMutableArray, NSURL;

@interface TSPRemoteDataStorage : TSPFileDataStorage {

	SFUCryptoKey* _encryptionKey;
	NSObject*<OS_dispatch_queue> _accessQueue;
	TSPTemporaryDataStorageURL* _temporaryMaterializedURL;
	id<TSPCryptoInfo> _temporaryDecryptionInfo;
	NSObject*<OS_dispatch_queue> _downloadObserverInfosQueue;
	NSMutableArray* _downloadObserverInfos;
	BOOL _canDownload;
	id<TSPRemoteDataStorageDelegate> _delegate;
	NSURL* _remoteURL;
	long long _downloadPriority;

}

@property (assign,nonatomic,__weak) id<TSPRemoteDataStorageDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) NSURL * remoteURL;                                           //@synthesize remoteURL=_remoteURL - In the implementation block
@property (nonatomic,readonly) BOOL isMaterialized; 
@property (nonatomic,readonly) BOOL canDownload;                                            //@synthesize canDownload=_canDownload - In the implementation block
@property (nonatomic,readonly) long long downloadPriority;                                  //@synthesize downloadPriority=_downloadPriority - In the implementation block
+(id)ioQueue;
-(void)dealloc;
-(BOOL)needsDownload;
-(unsigned long long)length;
-(id)init;
-(void)setDelegate:(id<TSPRemoteDataStorageDelegate>)arg1 ;
-(NSURL *)remoteURL;
-(id<TSPRemoteDataStorageDelegate>)delegate;
-(long long)downloadPriority;
-(void)performIOChannelReadWithAccessor:(/*^block*/id)arg1 ;
-(void)performReadWithAccessor:(/*^block*/id)arg1 ;
-(id)initWithRemoteURL:(id)arg1 encryptionKey:(id)arg2 canDownload:(BOOL)arg3 downloadPriority:(long long)arg4 ;
-(id)decryptionInfo;
-(void)didReceiveRemoteDataAtURL:(id)arg1 canMove:(BOOL)arg2 decryptionInfo:(id)arg3 completionQueue:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)addDownloadObserver:(id)arg1 forData:(id)arg2 options:(unsigned long long)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)notifyDownloadObserversWithStatus:(long long)arg1 info:(id)arg2 ;
-(void)didReceiveRemoteDataWithDecryptionInfo:(id)arg1 noEncryptionHandler:(/*^block*/id)arg2 createReadChannelForCryptoTranscodeBlock:(/*^block*/id)arg3 completionQueue:(id)arg4 completion:(/*^block*/id)arg5 ;
-(id)temporaryMaterializedURL;
-(void)notifyDownloadObserversWithStatusImpl:(long long)arg1 info:(id)arg2 ;
-(BOOL)isMaterialized;
-(void)didReceiveRemoteData:(id)arg1 decryptionInfo:(id)arg2 completionQueue:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)didReceiveRemoteDataWithReadChannel:(id)arg1 completionQueue:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)writeData:(id)arg1 toPackageWriter:(id)arg2 infoMessage:(DataInfo*)arg3 preferredFilename:(id)arg4 error:(id*)arg5 ;
-(BOOL)canDownload;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:54:48 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/NanoPassKit.framework/NanoPassKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <NanoPassKit/NanoPassKit-Structs.h>
@class NSObject, NSMutableDictionary, NSMutableArray, NSArray, NSData, NSDictionary;

@interface NPKGizmoDatabase : NSObject {

	sqlite3Ref _database;
	sqlite3_stmtRef _deleteStatement;
	sqlite3_stmtRef _insertStatement;
	sqlite3_stmtRef _insertDiffStatement;
	sqlite3_stmtRef _selectPassDataStatement;
	sqlite3_stmtRef _selectPassAndImageSetsDataStatement;
	sqlite3_stmtRef _selectPassDiffStatement;
	sqlite3_stmtRef _updateDeletePendingStatment;
	sqlite3_stmtRef _selectDeletePendingStatement;
	sqlite3_stmtRef _updatePreferredAIDStatement;
	sqlite3_stmtRef _selectPreferredAIDStatement;
	sqlite3_stmtRef _insertTransactionStatement;
	sqlite3_stmtRef _removeTransactionStatement;
	sqlite3_stmtRef _removeTransactionWithServiceIdentifier;
	sqlite3_stmtRef _selectTransactionsStatement;
	sqlite3_stmtRef _selectTransactionsStatementWithSource;
	sqlite3_stmtRef _selectTransactionsStatementWithoutSource;
	sqlite3_stmtRef _selectTransactionWithIdentifierStatement;
	sqlite3_stmtRef _selectTransactionWithServiceIdentifierStatement;
	sqlite3_stmtRef _insertTransactionSourceIdentifierForPassStatement;
	sqlite3_stmtRef _selectTransactionSourceIdentifierForTransactionWithIdentifierStatement;
	sqlite3_stmtRef _selectTransactionSourceIdentifierForTransactionWithServiceIdentifierStatement;
	sqlite3_stmtRef _selectTransactionSourceIdentifierForPassUniqueIdentifierStatement;
	sqlite3_stmtRef _selectPassUniqueIdentifierForTransactionSourceIdentifierStatement;
	sqlite3_stmtRef _deleteTransactionSourceIdentifierForPassStatement;
	sqlite3_stmtRef _deleteTransactionsForTransactionSourceStatement;
	sqlite3_stmtRef _trimTransactionsForTransactionSourceStatement;
	sqlite3_stmtRef _selectTransitAppletStateForPassStatement;
	sqlite3_stmtRef _updateTransitAppletStateForPassStatement;
	sqlite3_stmtRef _insertEphemeralTransactionStatement;
	sqlite3_stmtRef _deleteEphemeralTransactionByTransactionSourceIdentifierStatement;
	sqlite3_stmtRef _currentEphemeralTransactionIdentifierStatement;
	sqlite3_stmtRef _selectLastAddValueAmountForPassStatement;
	sqlite3_stmtRef _updateLastAddValueAmountForPassStatement;
	sqlite3_stmtRef _selectPendingAddValueDateForPassStatement;
	sqlite3_stmtRef _updatePendingAddValueDateForPassStatement;
	sqlite3_stmtRef _selectCloudKitArchivedTransactionsStatement;
	sqlite3_stmtRef _selectBalancesForPassStatement;
	sqlite3_stmtRef _updateBalancesForPassStatement;
	sqlite3_stmtRef _selectSubcredentialsForPassStatement;
	sqlite3_stmtRef _updateSubcredentialsForPassStatement;
	NSObject*<OS_dispatch_queue> _dbQueue;
	BOOL _isInTransaction;
	NSMutableDictionary* _manifest;
	NSMutableArray* _passDescriptions;
	NSArray* _libraryHashes;
	int _externallyChangedBroadcasts;
	BOOL _sendingLocalNotifyDatabaseChanged;
	BOOL _needsMoreLocalNotifyDatabaseChanged;
	BOOL _passDBIsAvailable;

}

@property (assign,nonatomic) BOOL passDBIsAvailable;                                                                //@synthesize passDBIsAvailable=_passDBIsAvailable - In the implementation block
@property (readonly) NSData * libraryHash; 
@property (readonly) NSDictionary * manifestHashes; 
@property (readonly) sqlite3Ref database; 
@property (readonly) sqlite3_stmtRef deleteStatement; 
@property (readonly) sqlite3_stmtRef insertStatement; 
@property (readonly) sqlite3_stmtRef selectPassDataStatement; 
@property (readonly) sqlite3_stmtRef selectPassAndImageSetsDataStatement; 
@property (readonly) sqlite3_stmtRef selectPassDiffStatement; 
@property (readonly) sqlite3_stmtRef insertDiffStatement; 
@property (readonly) sqlite3_stmtRef updateDeletePendingStatement; 
@property (readonly) sqlite3_stmtRef updatePreferredAIDStatement; 
@property (readonly) sqlite3_stmtRef selectPreferredAIDStatement; 
@property (readonly) sqlite3_stmtRef selectTransactionWithIdentifierStatement; 
@property (readonly) sqlite3_stmtRef selectTransactionWithServiceIdentifierStatement; 
@property (readonly) sqlite3_stmtRef insertTransactionSourceIdentifierForPassStatement; 
@property (readonly) sqlite3_stmtRef deleteTransactionSourceIdentifierForPassStatement; 
@property (readonly) sqlite3_stmtRef deleteTransactionsForTransactionSourceStatement; 
@property (readonly) sqlite3_stmtRef trimTransactionsForTransactionSourceStatement; 
@property (readonly) sqlite3_stmtRef selectTransitAppletStateForPassStatement; 
@property (readonly) sqlite3_stmtRef updateTransitAppletStateForPassStatement; 
@property (readonly) sqlite3_stmtRef insertEphemeralTransactionStatement; 
@property (readonly) sqlite3_stmtRef deleteEphemeralTransactionByTransactionSourceIdentifierStatement; 
@property (readonly) sqlite3_stmtRef currentEphemeralTransactionIdentifierStatement; 
@property (readonly) sqlite3_stmtRef selectLastAddValueAmountForPassStatement; 
@property (readonly) sqlite3_stmtRef updateLastAddValueAmountForPassStatement; 
@property (readonly) sqlite3_stmtRef selectPendingAddValueDateForPassStatement; 
@property (readonly) sqlite3_stmtRef updatePendingAddValueDateForPassStatement; 
@property (readonly) sqlite3_stmtRef selectCloudKitArchivedTransactionsStatement; 
@property (readonly) NSArray * passDescriptions; 
@property (nonatomic,readonly) unsigned long long numberOfPasses; 
+(id)sharedDatabase;
+(id)_migrationDataSource;
+(id)_migrationDelegateQueue;
+(unsigned long long)latestWatchOSMajorVersion;
+(long long)maxDatabaseVersion;
+(void)setMigrationDataSource:(id)arg1 ;
-(sqlite3Ref)database;
-(void)_handleFirstUnlock;
-(void)dealloc;
-(id)init;
-(sqlite3_stmtRef)insertStatement;
-(BOOL)_executeSQL:(id)arg1 ;
-(id)passForUniqueID:(id)arg1 ;
-(NSDictionary *)manifestHashes;
-(NSData *)libraryHash;
-(void)_handleHasMigrationDataSource;
-(void)setPassDBIsAvailable:(BOOL)arg1 ;
-(BOOL)_preconditionsMetForDatabaseOpen;
-(BOOL)_table:(id)arg1 containsColumn:(id)arg2 ;
-(void)_enumerateAllPassesForMigration:(/*^block*/id)arg1 ;
-(BOOL)_updateNFCPayloadDuringMigration:(id)arg1 ;
-(BOOL)_updatePrivateLabelAndCobrandDuringMigration:(id)arg1 ;
-(BOOL)_updateDeviceAndPreferredPaymentApplicationsDuringMigration:(id)arg1 ;
-(BOOL)_updateIngestedDatesDuringMigration:(id)arg1 ;
-(BOOL)_updateEffectivePaymentApplicationStateDuringMigration:(id)arg1 ;
-(BOOL)_updateHasUserSelectableContactlessPaymentApplications:(id)arg1 ;
-(BOOL)_updateEncodedPaymentPassDuringMigration:(id)arg1 ;
-(BOOL)_updateHasStoredValueDuringMigration:(id)arg1 ;
-(BOOL)_updateSettingsDuringMigration:(id)arg1 ;
-(BOOL)_updateCompleteLocalHashesDuringMigration:(id)arg1 ;
-(BOOL)_updateAvailableActionsDuringMigration:(id)arg1 ;
-(BOOL)_updateOrganizationNamesDuringMigration:(id)arg1 ;
-(BOOL)_updateFrontAndBackFieldBucketsDuringMigration:(id)arg1 ;
-(BOOL)_updateLocalizedDescriptionDuringMigration:(id)arg1 ;
-(BOOL)_updateDevicePaymentApplicationsDuringMigration:(id)arg1 ;
-(BOOL)_updatePrimaryContactlessAndInAppPaymentApplicationsDuringMigration:(id)arg1 ;
-(BOOL)_updateEncodedImageSetsDuringMigration:(id)arg1 ;
-(BOOL)_repairEncodedImagesDuringMigration:(id)arg1 ;
-(BOOL)_updateIssuerCountryCodesDuringMigration:(id)arg1 ;
-(BOOL)_updateExpressPassTypesMaskDuringMigration:(id)arg1 ;
-(BOOL)_updateCompleteRemoteHashesDuringMigration;
-(BOOL)_updateTransactionSourceIdentifiersDuringMigration:(id)arg1 ;
-(BOOL)_migrateDatabase:(/*^block*/id)arg1 ;
-(void)_notifyDatabaseChangedExternally;
-(void)_notifyForFirstUnlock;
-(id)_decodeObjectOfClass:(Class)arg1 fromStatement:(sqlite3_stmtRef)arg2 column:(int)arg3 ;
-(id)_decodeObjectOfClasses:(id)arg1 fromStatement:(sqlite3_stmtRef)arg2 column:(int)arg3 ;
-(void)_loadInitialManifestLocked;
-(void)_savePassLocked:(id)arg1 locallyAdded:(BOOL)arg2 wasUpdate:(BOOL*)arg3 ;
-(id)_libraryHashLockedForWatchOSMajorVersion:(unsigned long long)arg1 ;
-(void)_notifyDatabaseChangedWithNoop:(BOOL)arg1 ;
-(void)_saveDiffLocked:(id)arg1 forPassWithUniqueID:(id)arg2 ;
-(BOOL)_removePassWithUniqueIDLocked:(id)arg1 ;
-(void)_performTransactionWithBlock:(/*^block*/id)arg1 ;
-(void)_saveTransaction:(id)arg1 forTransactionSourceIdentifier:(id)arg2 withPaymentCredentialType:(long long)arg3 shouldTrim:(BOOL)arg4 ;
-(void)_removeTransactionWithServiceIdentifierLocked:(id)arg1 forTransactionSourceIdentifier:(id)arg2 ;
-(void)_saveTransactionLocked:(id)arg1 forTransactionSourceIdentifier:(id)arg2 ;
-(void)_trimTransactionsForTransactionSourceIdentifierLocked:(id)arg1 withPaymentCredentialType:(long long)arg2 ;
-(void)_removeTransactionWithIdentifier:(id)arg1 ;
-(void)_removeTransactionsForTransactionSource:(id)arg1 ;
-(id)_transactionsForTransactionSourceIdentifierLocked:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 orderByDate:(long long)arg6 limit:(unsigned long long)arg7 ;
-(id)_transactionWithIdentifierLocked:(id)arg1 ;
-(id)_transactionWithServiceIdentifierLocked:(id)arg1 ;
-(id)_transactionSourceIdentifierForTransactionWithIdentifierLocked:(id)arg1 ;
-(id)_transactionSourceIdentifierForTransactionWithServiceIdentifierLocked:(id)arg1 ;
-(id)_transactionSourceIdentifierForPassUniqueIdentifierLocked:(id)arg1 ;
-(id)_passUniqueIdentifierForTransactionSourceIdentifierLocked:(id)arg1 ;
-(id)_transitAppletStateForPassWithUniqueIDLocked:(id)arg1 ;
-(void)_setTransitAppletStateLocked:(id)arg1 forPassWithUniqueID:(id)arg2 ;
-(id)_paymentBalancesForPassWithUniqueIDLocked:(id)arg1 ;
-(void)_setPaymentBalancesLocked:(id)arg1 forPassWithUniqueID:(id)arg2 ;
-(id)_subcredentialsForPassWithUniqueIDLocked:(id)arg1 ;
-(void)_setSubcredentialsLocked:(id)arg1 forPassWithUniqueID:(id)arg2 ;
-(void)_setCurrentEphemeralTransactionIdentifier:(id)arg1 forTransactionSourceIdentifier:(id)arg2 ;
-(id)_currentEphemeralTransactionIdentifierForTransactionSourceIdentifier:(id)arg1 ;
-(id)_transactionsWithCloudKitArchivedState:(BOOL)arg1 ;
-(void)_setLastAddValueAmountLocked:(id)arg1 forPassWithUniqueID:(id)arg2 ;
-(id)_lastAddValueAmountForPassWithUniqueIDLocked:(id)arg1 ;
-(void)_setPendingAddValueDateLocked:(id)arg1 forPassWithUniqueID:(id)arg2 ;
-(id)_pendingAddValueDateForPassWithUniqueIDLocked:(id)arg1 ;
-(NSArray *)passDescriptions;
-(id)transactionSourceIdentifierForPassWithUniqueID:(id)arg1 ;
-(id)transactionsForTransactionSourceIdentifier:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 orderedByDate:(long long)arg6 limit:(long long)arg7 ;
-(id)currentEphemeralTransactionIdentifierForTransactionSourceIdentifier:(id)arg1 ;
-(id)paymentBalancesForPassWithUniqueID:(id)arg1 ;
-(id)subcredentialsForPassWithUniqueID:(id)arg1 ;
-(void)setTransitAppletState:(id)arg1 forPassWithUniqueID:(id)arg2 ;
-(void)setLastAddValueAmount:(id)arg1 forPassWithUniqueID:(id)arg2 ;
-(void)setPendingAddValueDate:(id)arg1 forPassWithUniqueID:(id)arg2 ;
-(void)setPreferredPaymentApplication:(id)arg1 forPaymentPass:(id)arg2 ;
-(void)setCurrentEphemeralTransactionIdentifier:(id)arg1 forTransactionSourceIdentifier:(id)arg2 ;
-(void)setPaymentBalances:(id)arg1 forPassWithUniqueID:(id)arg2 ;
-(void)setSubcredentials:(id)arg1 forPassWithUniqueID:(id)arg2 ;
-(void)_notifyDatabaseChangedWithNoop:(BOOL)arg1 firstUnlock:(BOOL)arg2 ;
-(BOOL)_passDBIsAvailableLocked;
-(id)_passForUniqueIDLocked:(id)arg1 includeImageSets:(BOOL)arg2 ;
-(id)_getPreferredPaymentApplicationForPaymentPass:(id)arg1 aid:(id*)arg2 ;
-(BOOL)_getDeletePendingForUniqueID:(id)arg1 ;
-(sqlite3_stmtRef)deleteStatement;
-(void)_createTransactionSourceIdentifierIfNecessaryForPassWithUniqueIDLocked:(id)arg1 ;
-(sqlite3_stmtRef)deleteTransactionsForTransactionSourceStatement;
-(void)_removeTransactionSourceIdentifierForPassWithUniqueIDLocked:(id)arg1 ;
-(sqlite3_stmtRef)insertTransactionStatement;
-(sqlite3_stmtRef)removeTransactionWithServiceIdentifierStatement;
-(sqlite3_stmtRef)removeTransactionStatement;
-(sqlite3_stmtRef)trimTransactionsForTransactionSourceStatement;
-(sqlite3_stmtRef)selectTransactionsStatementWithTransactionSource:(unsigned long long)arg1 orderByDate:(long long)arg2 ;
-(sqlite3_stmtRef)selectCloudKitArchivedTransactionsStatement;
-(sqlite3_stmtRef)selectTransactionWithIdentifierStatement;
-(sqlite3_stmtRef)selectTransactionWithServiceIdentifierStatement;
-(sqlite3_stmtRef)selectTransactionSourceIdentifierForTransactionWithIdentifierStatement;
-(sqlite3_stmtRef)insertTransactionSourceIdentifierForPassStatement;
-(sqlite3_stmtRef)deleteTransactionSourceIdentifierForPassStatement;
-(sqlite3_stmtRef)selectTransactionSourceIdentifierForTransactionWithServiceIdentifierStatement;
-(sqlite3_stmtRef)selectTransactionSourceIdentifierForPassUniqueIdentifierStatement;
-(sqlite3_stmtRef)selectPassUniqueIdentifierForTransactionSourceIdentifierStatement;
-(sqlite3_stmtRef)selectTransitAppletStateForPassStatement;
-(sqlite3_stmtRef)updateTransitAppletStateForPassStatement;
-(sqlite3_stmtRef)insertEphemeralTransactionStatement;
-(sqlite3_stmtRef)deleteEphemeralTransactionByTransactionSourceIdentifierStatement;
-(sqlite3_stmtRef)currentEphemeralTransactionIdentifierStatement;
-(sqlite3_stmtRef)selectLastAddValueAmountForPassStatement;
-(sqlite3_stmtRef)updateLastAddValueAmountForPassStatement;
-(sqlite3_stmtRef)selectPendingAddValueDateForPassStatement;
-(sqlite3_stmtRef)updatePendingAddValueDateForPassStatement;
-(sqlite3_stmtRef)selectBalancesForPassStatement;
-(sqlite3_stmtRef)updateBalancesForPassStatement;
-(sqlite3_stmtRef)selectSubcredentialsForPassStatement;
-(sqlite3_stmtRef)updateSubcredentialsForPassStatement;
-(void)_executeSQLQuery:(id)arg1 processResultsBlock:(/*^block*/id)arg2 ;
-(sqlite3_stmtRef)selectPassAndImageSetsDataStatement;
-(sqlite3_stmtRef)selectPassDataStatement;
-(sqlite3_stmtRef)selectPassDiffStatement;
-(sqlite3_stmtRef)insertDiffStatement;
-(id)passForUniqueID:(id)arg1 includeImageSets:(BOOL)arg2 ;
-(id)_diffForUniqueIDLocked:(id)arg1 ;
-(sqlite3_stmtRef)updateDeletePendingStatement;
-(sqlite3_stmtRef)selectDeletePendingStatement;
-(sqlite3_stmtRef)updatePreferredAIDStatement;
-(sqlite3_stmtRef)selectPreferredAIDStatement;
-(id)libraryHashForWatchOSMajorVersion:(unsigned long long)arg1 ;
-(id)manifestHashesForWatchOSMajorVersion:(unsigned long long)arg1 ;
-(void)enumerateAllPassesAndDescriptionsWithBlock:(/*^block*/id)arg1 includeImageSets:(BOOL)arg2 ;
-(long long)_databaseVersionExists:(BOOL*)arg1 valid:(BOOL*)arg2 ;
-(void)_updateDatabaseVersionRow:(long long)arg1 ;
-(void)_insertDatabaseVersionRow:(long long)arg1 ;
-(void)_attemptDatabaseOpen;
-(id)savePass:(id)arg1 isLocalPass:(BOOL)arg2 ;
-(void)saveDiff:(id)arg1 forPassWithUniqueID:(id)arg2 ;
-(id)removePassWithUniqueID:(id)arg1 ;
-(id)rebuildDatabaseWithPasses:(id)arg1 ;
-(void)saveTransaction:(id)arg1 forPass:(id)arg2 ;
-(void)removeTransactionWithIdentifier:(id)arg1 ;
-(void)removeTransactionsForTransactionSource:(id)arg1 ;
-(id)transactionSourcesForPassWithUniqueID:(id)arg1 ;
-(id)transactionWithIdentifier:(id)arg1 ;
-(id)transactionWithServiceIdentifier:(id)arg1 ;
-(id)transactionSourceIdentifierForTransactionWithIdentifier:(id)arg1 ;
-(id)transactionSourceIdentifierForTransactionWithServiceIdentifier:(id)arg1 ;
-(id)passUniqueIDForTransactionSourceIdentifier:(id)arg1 ;
-(id)transitAppletStateForPassWithUniqueID:(id)arg1 ;
-(id)transactionsWithCloudKitArchivedState:(BOOL)arg1 ;
-(id)lastAddValueAmountForPassWithUniqueID:(id)arg1 ;
-(id)pendingAddValueDateForPassWithUniqueID:(id)arg1 ;
-(/*^block*/id)restoreBlockForVolatilePassData;
-(BOOL)passDBIsAvailable;
-(unsigned long long)numberOfPasses;
-(id)diffForUniqueID:(id)arg1 ;
-(void)setDeletePending:(BOOL)arg1 forUniqueID:(id)arg2 ;
-(id)preferredPaymentApplicationForPaymentPass:(id)arg1 ;
-(void)enumerateAllPassesWithBlock:(/*^block*/id)arg1 includeImageSets:(BOOL)arg2 ;
-(BOOL)hasPassesMatchingPassDescriptionPredicate:(id)arg1 ;
-(id)filteredPassesUsingPassDescriptionPredicate:(id)arg1 includeImageSets:(BOOL)arg2 ;
-(void)_handleDatabaseChangedExternally;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:52:02 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/TextToSpeech.framework/Frameworks/TextToSpeechBundleSupport.framework/TextToSpeechBundleSupport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TextToSpeechBundleSupport/TextToSpeechBundleSupport-Structs.h>
@class NSString;

@interface TTSVocalizer : NSObject {

	void* _ttsVocalizerDataClass;
	CFArrayRef _ttsVocalizerResourceDataPtrs;
	CFDataRef _ttsVocalizerRulesetData;
	NSString* _ttsVocalizerCurrentLanguageCode;

}

@property (assign,nonatomic) void* ttsVocalizerDataClass;                             //@synthesize ttsVocalizerDataClass=_ttsVocalizerDataClass - In the implementation block
@property (nonatomic,retain) CFArrayRef ttsVocalizerResourceDataPtrs;                 //@synthesize ttsVocalizerResourceDataPtrs=_ttsVocalizerResourceDataPtrs - In the implementation block
@property (nonatomic,retain) CFDataRef ttsVocalizerRulesetData;                       //@synthesize ttsVocalizerRulesetData=_ttsVocalizerRulesetData - In the implementation block
@property (nonatomic,retain) NSString * ttsVocalizerCurrentLanguageCode;              //@synthesize ttsVocalizerCurrentLanguageCode=_ttsVocalizerCurrentLanguageCode - In the implementation block
-(void)dealloc;
-(void)stopSynthesis;
-(BOOL)readyForSynthesis:(VE_HSAFE*)arg1 ;
-(id)initWithLanguage:(CFStringRef)arg1 defaultLanguage:(CFStringRef)arg2 reinitIfNecessary:(unsigned char)arg3 instanceToDestroy:(VE_HSAFE*)arg4 forceReinit:(unsigned char)arg5 voiceType:(long long)arg6 gender:(long long)arg7 footprint:(long long)arg8 voiceName:(CFStringRef)arg9 error:(unsigned*)arg10 ;
-(unsigned char)_ttsVocalizerDefaultVoiceIsFallback;
-(unsigned)_ttsVocalizerDestroy;
-(unsigned)_ttsVocalizerCopyAvailableVoiceNames:(const _CFArray*)arg1 ;
-(void)_ttsVocalizerLoadProgrammaticRules:(VE_HSAFE*)arg1 supportsAccurateWordCallbacks:(unsigned char)arg2 forTests:(unsigned char)arg3 ;
-(unsigned)_ttsVocalizerReallyLoadResource:(VE_HSAFE*)arg1 mimeType:(const char*)arg2 rules:(CFDataRef)arg3 resource:(VE_HSAFE*)arg4 supportsAccurateWordCallbacks:(unsigned char)arg5 resourceIdentifier:(id)arg6 ;
-(void)loadResource:(VE_HSAFE*)arg1 mimeType:(CFStringRef)arg2 resourceURL:(CFURLRef)arg3 supportsAccurateWordCallbacks:(unsigned char)arg4 ;
-(CFArrayRef)_ttsVocalizerLoadedResources;
-(BOOL)_ttsVocalizerIsInitialized;
-(unsigned)_ttsVocalizerVoiceInfoForActiveLanguage:(SCD_Struct_TT16*)arg1 ;
-(unsigned)_ttsVocalizerCreateInstance:(VE_HSAFE*)arg1 desiredVoiceName:(char**)arg2 desiredFootprint:(long long)arg3 languageCode:(CFStringRef)arg4 voiceType:(long long)arg5 ;
-(unsigned)_ttsVocalizerDestroyInstance:(VE_HSAFE*)arg1 ;
-(double)_ttsVocalizerGetSampleRate:(VE_HSAFE*)arg1 ;
-(unsigned)_ttsVocalizerSetParameters:(VE_HSAFE*)arg1 rate:(float)arg2 pitch:(float)arg3 volume:(float)arg4 footprintID:(long long)arg5 ;
-(unsigned)_ttsVocalizerProcessText:(CFStringRef)arg1 instance:(VE_HSAFE*)arg2 callback:(/*function pointer*/void*)arg3 context:(void*)arg4 ;
-(unsigned)_ttsVocalizerAppendPhonemeToString:(VE_HSAFE*)arg1 phoneme:(unsigned short)arg2 phonemeString:(CFStringRef)arg3 ;
-(void*)ttsVocalizerDataClass;
-(void)setTtsVocalizerDataClass:(void*)arg1 ;
-(CFArrayRef)ttsVocalizerResourceDataPtrs;
-(void)setTtsVocalizerResourceDataPtrs:(CFArrayRef)arg1 ;
-(CFDataRef)ttsVocalizerRulesetData;
-(void)setTtsVocalizerRulesetData:(CFDataRef)arg1 ;
-(NSString *)ttsVocalizerCurrentLanguageCode;
-(void)setTtsVocalizerCurrentLanguageCode:(NSString *)arg1 ;
@end


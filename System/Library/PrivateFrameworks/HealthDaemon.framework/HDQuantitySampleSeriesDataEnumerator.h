/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:44:49 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <HealthDaemon/HealthDaemon-Structs.h>
@class HDDatabaseTransaction, NSError;

@interface HDQuantitySampleSeriesDataEnumerator : NSObject {

	HDDatabaseTransaction* _transaction;
	unsigned long long _bufferSize;
	deque<std::__1::tuple<double, double, float>, std::__1::allocator<std::__1::tuple<double, double, float> > >* _data;
	BOOL _hasFetchedData;
	BOOL _hasFetchedAllData;
	BOOL _hasDeterminedSeriesVersion;
	BOOL _isVersion1;
	BOOL _hasDuration;
	long long _index;
	double _previousEndTime;
	NSError* _fatalError;
	unsigned char _UUIDBytes[16];
	long long _persistentID;
	long long _dataTypeCode;
	double _startTime;
	double _endTime;
	long long _count;
	long long _sourceID;
	long long _HFDKey;
	double _lastFetchedDatumTime;
	double _lastDatumTime;
	ObjectIdentifier _objectIdentifier;

}

@property (assign,nonatomic) ObjectIdentifier objectIdentifier;              //@synthesize objectIdentifier=_objectIdentifier - In the implementation block
@property (assign,nonatomic) BOOL hasFetchedData;                            //@synthesize hasFetchedData=_hasFetchedData - In the implementation block
@property (assign,nonatomic) double lastFetchedDatumTime;                    //@synthesize lastFetchedDatumTime=_lastFetchedDatumTime - In the implementation block
@property (assign,nonatomic) double lastDatumTime;                           //@synthesize lastDatumTime=_lastDatumTime - In the implementation block
@property (assign,nonatomic) BOOL hasFetchedAllData;                         //@synthesize hasFetchedAllData=_hasFetchedAllData - In the implementation block
@property (nonatomic,readonly) BOOL done; 
@property (nonatomic,readonly) long long persistentID;                       //@synthesize persistentID=_persistentID - In the implementation block
@property (nonatomic,readonly) long long dataTypeCode;                       //@synthesize dataTypeCode=_dataTypeCode - In the implementation block
@property (nonatomic,readonly) unsigned char* UUIDBytesPtr[16]; 
@property (nonatomic,readonly) double startTime;                             //@synthesize startTime=_startTime - In the implementation block
@property (nonatomic,readonly) double endTime;                               //@synthesize endTime=_endTime - In the implementation block
@property (nonatomic,readonly) long long count;                              //@synthesize count=_count - In the implementation block
@property (nonatomic,readonly) long long sourceID;                           //@synthesize sourceID=_sourceID - In the implementation block
@property (nonatomic,readonly) long long HFDKey;                             //@synthesize HFDKey=_HFDKey - In the implementation block
-(double)endTime;
-(void)setObjectIdentifier:(ObjectIdentifier)arg1 ;
-(long long)HFDKey;
-(double)startTime;
-(BOOL)done;
-(long long)compare:(id)arg1 ;
-(long long)persistentID;
-(long long)count;
-(long long)sourceID;
-(long long)dataTypeCode;
-(ObjectIdentifier)objectIdentifier;
-(id)description;
-(id)initWithTransaction:(id)arg1 persistentID:(long long)arg2 dataTypeCode:(long long)arg3 UUIDBytes:(unsigned char)arg4 startTime:(double)arg5 endTime:(double)arg6 count:(long long)arg7 sourceID:(long long)arg8 HFDKey:(long long)arg9 bufferSize:(unsigned long long)arg10 ;
-(BOOL)primeEnumeratorWithError:(id*)arg1 ;
-(double)nextDatumTime;
-(unsigned char*)UUIDBytesPtr;
-(BOOL)enumerateDataToTime:(double)arg1 error:(id*)arg2 handler:(/*^block*/id)arg3 ;
-(BOOL)_fillValueBufferWithError:(id*)arg1 ;
-(BOOL)_addToBufferTimestamp:(double)arg1 value:(double)arg2 duration:(float)arg3 ;
-(void)_unitTesting_addToBufferTimestamp:(double)arg1 value:(double)arg2 duration:(float)arg3 isLastDatum:(BOOL)arg4 ;
-(BOOL)hasFetchedData;
-(void)setHasFetchedData:(BOOL)arg1 ;
-(double)lastFetchedDatumTime;
-(void)setLastFetchedDatumTime:(double)arg1 ;
-(double)lastDatumTime;
-(void)setLastDatumTime:(double)arg1 ;
-(BOOL)hasFetchedAllData;
-(void)setHasFetchedAllData:(BOOL)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 12:26:27 PM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/SoftwareUpdateServices.framework/SoftwareUpdateServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/SUManagerClientInterface.h>
#import <libobjc.A.dylib/SUInstallationConstraintObserverDelegate.h>
#import <libobjc.A.dylib/SUPreferencesObserver.h>

@protocol SUManagerClientDelegate, OS_dispatch_queue;
@class NSXPCConnection, SUDescriptor, NSMutableDictionary, NSMutableSet, NSObject, NSString;

@interface SUManagerClient : NSObject <SUManagerClientInterface, SUInstallationConstraintObserverDelegate, SUPreferencesObserver> {

	NSXPCConnection* _serverConnection;
	id<SUManagerClientDelegate> _delegate;
	BOOL _connected;
	BOOL _serverIsExiting;
	int _clientType;
	BOOL _installing;
	SUDescriptor* _installDescriptor;
	SUDescriptor* _scanDescriptor;
	NSMutableDictionary* _installOperationIDsToOperationHandler;
	NSMutableSet* _installationConstraintObservers;
	NSObject*<OS_dispatch_queue> _queue;

}

@property (nonatomic,retain) SUDescriptor * installDescriptor;                         //@synthesize installDescriptor=_installDescriptor - In the implementation block
@property (nonatomic,retain) SUDescriptor * scanDescriptor;                            //@synthesize scanDescriptor=_scanDescriptor - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                       //@synthesize queue=_queue - In the implementation block
@property (assign,nonatomic,__weak) id<SUManagerClientDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) int clientType;                                           //@synthesize clientType=_clientType - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)_isMultiUserAppleId;
+(BOOL)_shouldDisallowAvailabilityNotifications;
-(void)invalidate;
-(id)_bundleIdentifier;
-(void)pauseDownload:(/*^block*/id)arg1 ;
-(void)resumeDownload:(/*^block*/id)arg1 ;
-(int)clientType;
-(void)cancelDownload:(/*^block*/id)arg1 ;
-(void)dealloc;
-(void)startDownload:(/*^block*/id)arg1 ;
-(void)downloadDidStart:(id)arg1 ;
-(id)init;
-(void)setDelegate:(id<SUManagerClientDelegate>)arg1 ;
-(NSObject*<OS_dispatch_queue>)queue;
-(id)initWithDelegate:(id)arg1 ;
-(id)initWithDelegate:(id)arg1 queue:(id)arg2 clientType:(int)arg3 ;
-(BOOL)isAutomaticUpdateV2Enabled;
-(BOOL)isAutomaticDownloadEnabled;
-(id)initWithDelegate:(id)arg1 clientType:(int)arg2 ;
-(void)enableAutomaticDownload:(BOOL)arg1 ;
-(void)enableAutomaticUpdateV2:(BOOL)arg1 ;
-(id)_remoteInterfaceWithErrorHandler:(/*^block*/id)arg1 ;
-(void)setClientType:(int)arg1 ;
-(id)_remoteInterface;
-(id<SUManagerClientDelegate>)delegate;
-(void)_invalidateConnection;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)downloadDidFinish:(id)arg1 ;
-(void)download:(/*^block*/id)arg1 ;
-(void)installUpdate:(/*^block*/id)arg1 ;
-(void)installationConstraintMonitor:(id)arg1 constraintsDidChange:(unsigned long long)arg2 ;
-(void)_registerAutoInstallOperationClientHandler:(id)arg1 ;
-(void)_consentAutoInstallOperation:(id)arg1 withResult:(/*^block*/id)arg2 ;
-(void)autoInstallOperationDidConsent:(id)arg1 ;
-(void)_unregisterAutoInstallOperationClientHandler:(id)arg1 ;
-(void)_cancelAutoInstallOperation:(id)arg1 withResult:(/*^block*/id)arg2 ;
-(void)autoInstallOperationWasCancelled:(id)arg1 ;
-(void)autoInstallOperationDidExpire:(id)arg1 withError:(id)arg2 ;
-(void)installationConstraintObserverDidRemoveAllObserverBlocks:(id)arg1 ;
-(void)connectToServerIfNecessary;
-(id)_remoteInterfaceWithErrorHandler:(/*^block*/id)arg1 connectIfNecessary:(BOOL)arg2 ;
-(void)_setClientType;
-(void)isScanning:(/*^block*/id)arg1 ;
-(void)scanForUpdates:(id)arg1 withResult:(/*^block*/id)arg2 ;
-(void)autoScanAndDownloadIfAvailable:(/*^block*/id)arg1 ;
-(void)descriptor:(/*^block*/id)arg1 ;
-(void)isDownloading:(/*^block*/id)arg1 ;
-(void)startDownloadWithOptions:(id)arg1 withResult:(/*^block*/id)arg2 ;
-(void)startDownloadWithMetadata:(id)arg1 withResult:(/*^block*/id)arg2 ;
-(void)updateDownloadOptions:(id)arg1 withResult:(/*^block*/id)arg2 ;
-(void)updateDownloadMetadata:(id)arg1 withResult:(/*^block*/id)arg2 ;
-(void)purgeDownload:(/*^block*/id)arg1 ;
-(void)downloadAndInstallState:(/*^block*/id)arg1 ;
-(id)_getExistingAutoInstallOperationFromModel:(id)arg1 ;
-(void)deviceHasSufficientSpaceForDownload:(/*^block*/id)arg1 ;
-(void)extraSpaceNeededForDownloadWithoutAppPurging:(/*^block*/id)arg1 ;
-(void)currentAutoInstallOperation:(BOOL)arg1 withResult:(/*^block*/id)arg2 ;
-(void)currentPasscodePolicy:(/*^block*/id)arg1 ;
-(void)isAutoUpdateEnabled:(/*^block*/id)arg1 ;
-(void)isAutoUpdateScheduled:(/*^block*/id)arg1 ;
-(id)_remoteSynchronousInterfaceWithErrorHandler:(/*^block*/id)arg1 connectIfNecessary:(BOOL)arg2 ;
-(void)presentAutoUpdateBanner:(/*^block*/id)arg1 ;
-(void)registerCSInstallPredicatesOnDate:(id)arg1 ;
-(void)isUpdateReadyForInstallation:(/*^block*/id)arg1 ;
-(void)installUpdateWithInstallOptions:(id)arg1 withResult:(/*^block*/id)arg2 ;
-(void)installUpdateWithOptions:(id)arg1 withResult:(/*^block*/id)arg2 ;
-(BOOL)createInstallationKeybag:(id)arg1 forUnattendedInstall:(BOOL)arg2 ;
-(void)slaVersion:(/*^block*/id)arg1 ;
-(void)isDelayingUpdates:(/*^block*/id)arg1 ;
-(void)delayEndDate:(/*^block*/id)arg1 ;
-(void)setMandatorySoftwareUpdateDictionary:(id)arg1 ;
-(void)getMandatorySoftwareUpdateDictionary:(/*^block*/id)arg1 ;
-(void)scheduleDateActivity:(long long)arg1 ;
-(void)_invalidateConstraintObserver:(id)arg1 withError:(id)arg2 ;
-(void)scanRequestDidStartForOptions:(id)arg1 ;
-(void)scanRequestDidFinishForOptions:(id)arg1 update:(id)arg2 error:(id)arg3 ;
-(void)scanDidCompleteWithNewUpdateAvailable:(id)arg1 error:(id)arg2 ;
-(void)automaticDownloadDidFailToStartForNewUpdateAvailable:(id)arg1 withError:(id)arg2 ;
-(void)downloadWasInvalidatedForNewUpdateAvailable:(id)arg1 ;
-(void)downloadProgressDidChange:(id)arg1 ;
-(void)downloadDidFail:(id)arg1 withError:(id)arg2 ;
-(void)downloadDidFinish:(id)arg1 withInstallPolicy:(id)arg2 ;
-(void)installDidStart:(id)arg1 ;
-(void)installDidFail:(id)arg1 withError:(id)arg2 ;
-(void)installDidFinish:(id)arg1 ;
-(void)installPolicyDidChange:(id)arg1 ;
-(void)managedInstallationRequested:(id)arg1 ;
-(void)autoInstallOperationIsReadyToInstall:(id)arg1 withResult:(/*^block*/id)arg2 ;
-(void)autoInstallOperationPasscodePolicyChanged:(id)arg1 passcodePolicyType:(unsigned long long)arg2 ;
-(void)noteConnectionDropped;
-(void)_invalidateAllInstallationConstraintObserversForDownload;
-(void)setInstallDescriptor:(SUDescriptor *)arg1 ;
-(void)preference:(id)arg1 didChange:(id)arg2 ;
-(id)initWithDelegate:(id)arg1 andQueue:(id)arg2 ;
-(unsigned long long)totalPurgeableSpace;
-(BOOL)isAutoUpdateScheduled;
-(id)observeInstallationConstraintChangesForDownload:(id)arg1 observer:(/*^block*/id)arg2 ;
-(BOOL)createInstallationKeybag:(id)arg1 ;
-(BOOL)isInstallationKeybagRequired;
-(void)demoteApps:(unsigned long long)arg1 ;
-(void)noteServerExiting;
-(SUDescriptor *)installDescriptor;
-(SUDescriptor *)scanDescriptor;
-(void)setScanDescriptor:(SUDescriptor *)arg1 ;
@end


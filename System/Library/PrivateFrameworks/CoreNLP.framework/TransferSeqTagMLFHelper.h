/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:41:40 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/CoreNLP.framework/CoreNLP
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <CoreNLP/CoreNLP-Structs.h>
@interface TransferSeqTagMLFHelper : NSObject
-(const CFDictionaryRef)doSeqTagTrainingAndEvalFromData:(vector<std::__1::vector<std::__1::vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > > > > >*)arg1 batchedLabels:(vector<std::__1::vector<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > > > > > >*)arg2 batchedPaddedLabelDatasets:(vector<std::__1::vector<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > > > > > >*)arg3 trainingParams:(map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >*)arg4 labelArray:(vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >*)arg5 elmoEmbeddingRef:(void*)arg6 modeLayerList:(vector<void *, std::__1::allocator<void *> >*)arg7 modelType:(int)arg8 trainingGraph:(id)arg9 inferenceGraph:(id)arg10 scalarParams:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg11 inputPlaceholders:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg12 targetLabelPlaceholders:(id)arg13 targetLabelWeightsPlaceholders:(id)arg14 trainingLogger:(/*^block*/id)arg15 ;
-(id)createDataWithFloatValue:(float)arg1 count:(unsigned long long)arg2 ;
-(void)trainAndSaveSeqTagModelFromData:(vector<std::__1::vector<std::__1::vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > > > > >*)arg1 batchedLabels:(vector<std::__1::vector<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > > > > > >*)arg2 trainingParams:(map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >*)arg3 modelType:(int)arg4 labelArray:(vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >*)arg5 trainedModelDict:(_CFDictionary*)arg6 trainingLogger:(/*^block*/id)arg7 ;
-(id)createLSTMFromWeights:(unsigned long long)arg1 outputSize:(unsigned long long)arg2 useBiLSTM:(BOOL)arg3 inputWeights:(id)arg4 hiddenWeights:(id)arg5 biasTerms:(id)arg6 ;
-(id)createConvLayerFromData:(unsigned long long)arg1 width:(unsigned long long)arg2 inputChannels:(unsigned long long)arg3 outputChannels:(unsigned long long)arg4 strideInX:(unsigned long long)arg5 strideInY:(unsigned long long)arg6 kernelWeight:(id)arg7 kernelBias:(id)arg8 ;
-(id)createConvLayerWithKernelHeight:(unsigned long long)arg1 width:(unsigned long long)arg2 inputChannels:(unsigned long long)arg3 outputChannels:(unsigned long long)arg4 strideInX:(unsigned long long)arg5 strideInY:(unsigned long long)arg6 ;
-(void)getNSSequenceFromStdSequence:(vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > >*)arg1 nsSentences:(id)arg2 nsSeqLengths:(id)arg3 maxLength:(int)arg4 ;
-(void)getElmoEmbeddingsForSequenceData:(vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > >*)arg1 batchSize:(int)arg2 maxLength:(int)arg3 embeddingRef:(void*)arg4 inputTensorDataItems:(vector<MLCTensorData *, std::__1::allocator<MLCTensorData *> >*)arg5 splitElmo:(BOOL)arg6 ;
-(void)flattenBatchOfOneHotSequences:(vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > >*)arg1 flattenedBatch:(vector<float, std::__1::allocator<float> >*)arg2 ;
-(id)createFullyConnectedLayerFromData:(unsigned long long)arg1 outputSize:(unsigned long long)arg2 weightData:(id)arg3 biasData:(id)arg4 ;
-(id)createLSTM:(unsigned long long)arg1 outputSize:(unsigned long long)arg2 useBiLSTM:(BOOL)arg3 ;
-(id)createFullyConnectedLayer:(unsigned long long)arg1 outputSize:(unsigned long long)arg2 ;
-(id)createGraphObjectFromLayers:(vector<void *, std::__1::allocator<void *> >*)arg1 graphObject:(id)arg2 inputPlaceholders:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg3 modelType:(int)arg4 ;
-(void)printLstmWeights:(id)arg1 ;
-(void)getInputEmbeddingsAndTargetTensorsForSequenceData:(vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > >*)arg1 seqLabels:(vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > >*)arg2 batchSize:(int)arg3 maxLength:(int)arg4 numClasses:(int)arg5 embeddingRef:(void*)arg6 modelType:(int)arg7 inputTensorDataItems:(vector<MLCTensorData *, std::__1::allocator<MLCTensorData *> >*)arg8 targetTensorData:(id*)arg9 targetWeightTensorData:(id*)arg10 ;
-(id)getModelLayerWeights:(vector<void *, std::__1::allocator<void *> >*)arg1 modelType:(int)arg2 ;
-(void)createGraphObjectAndLayersFromInputPlaceholders:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg1 scalarWeights:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg2 labelSize:(unsigned long long)arg3 embeddingDimension:(long long)arg4 graphObject:(id)arg5 graphLayerList:(vector<void *, std::__1::allocator<void *> >*)arg6 modelType:(int)arg7 ;
-(id)createTrainingGraphFromGraphObject:(id)arg1 inputPlaceholders:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg2 scalarWeights:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg3 targetLabels:(id)arg4 targeLabelWeights:(id)arg5 device:(id)arg6 ;
-(id)createInferenceGraphFromGraphObject:(id)arg1 inputPlaceholders:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg2 scalarWeights:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg3 finalLayerTensor:(id)arg4 device:(id)arg5 ;
-(void)removeBatchingFromDataAndLabels:(vector<std::__1::vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > > >*)arg1 batchedLabels:(vector<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > > > >*)arg2 inputSentences:(vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > >*)arg3 inputLabels:(vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > >*)arg4 maxLength:(int)arg5 ;
-(void)getMaxIndicesFromOneHotVectors:(vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > >*)arg1 maxIndicesBatch:(vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >*)arg2 ;
-(void)labelIdsToString:(vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >*)arg1 labelArray:(vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >*)arg2 labelStrings:(vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > >*)arg3 ;
-(void)executeInferenceGraph:(id)arg1 inputsDictionary:(id)arg2 batchSize:(int)arg3 maxLength:(int)arg4 labelSize:(int)arg5 predictedLabels:(vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >*)arg6 ;
-(void)evaluateInferenceGraphWithInputTensorData:(vector<std::__1::vector<MLCTensorData *, std::__1::allocator<MLCTensorData *> >, std::__1::allocator<std::__1::vector<MLCTensorData *, std::__1::allocator<MLCTensorData *> > > >*)arg1 batchedInputSentences:(vector<std::__1::vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > > >*)arg2 batchedLabels:(vector<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > > > >*)arg3 inferenceGraph:(id)arg4 modelType:(int)arg5 inputPlaceholders:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg6 inferenceParams:(map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >*)arg7 scalarParams:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg8 labelArray:(vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >*)arg9 dataTypeString:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg10 trainingLogger:(/*^block*/id)arg11 predictedLabels:(vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >*)arg12 ;
-(float)evaluateMontrealModelOnData:(vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > >*)arg1 evalLabels:(vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >*)arg2 evalEmbeddingsCache:(vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >*)arg3 elmoEmbeddingRef:(void*)arg4 montrealModel:(MontrealModel*)arg5 labelArray:(vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >*)arg6 trainingLogger:(/*^block*/id)arg7 dataTypeString:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg8 predictedLabels:(vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >*)arg9 ;
-(float)showF1ResultsMatrix:(vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >*)arg1 labelCounts:(map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, int> > >*)arg2 perLabelResults:(map<int, std::__1::map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, int> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, int> > > > > >*)arg3 trainingLogger:(/*^block*/id)arg4 dataTypeString:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg5 ;
-(void)doInferenceWithInferenceGraph:(id)arg1 scalarParams:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg2 labelArray:(vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >*)arg3 inferenceParams:(map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >*)arg4 elmoEmbeddingRef:(void*)arg5 modelType:(int)arg6 inputPlaceholders:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg7 testSentences:(vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > >*)arg8 predictedLabels:(vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >*)arg9 ;
-(id)findMaxIndexWithData:(id)arg1 batchSize:(unsigned long long)arg2 sequenceLength:(unsigned long long)arg3 numClasses:(unsigned long long)arg4 ;
-(id)createNSDataWithFloatValue:(float)arg1 count:(unsigned long long)arg2 ;
-(BOOL)loadModelLayersFromWeights:(id)arg1 labelSize:(unsigned long long)arg2 embeddingDimension:(long long)arg3 modelLayers:(vector<void *, std::__1::allocator<void *> >*)arg4 modelType:(int)arg5 ;
-(float)evaluateInferenceGraphOnData:(vector<std::__1::vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > > >*)arg1 batchedLabels:(vector<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int> >, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int> > > > > > > >*)arg2 inferenceGraph:(id)arg3 elmoEmbeddingRef:(void*)arg4 modelType:(int)arg5 inputPlaceholders:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg6 inferenceParams:(map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >*)arg7 scalarParams:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg8 labelArray:(vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >*)arg9 dataTypeString:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg10 trainingLogger:(/*^block*/id)arg11 ;
-(void)createInferenceGraphWithLayers:(vector<void *, std::__1::allocator<void *> >*)arg1 labelArray:(vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >*)arg2 inferenceParams:(map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >*)arg3 modelType:(int)arg4 inputSentences:(vector<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > >*)arg5 inputPlaceholders:(vector<MLCTensor *, std::__1::allocator<MLCTensor *> >*)arg6 inferenceGraph:(id*)arg7 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:41:32 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/BookLibrary.framework/BookLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <BookLibrary/BookLibrary-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSMutableDictionary, NSLock, NSDictionary, NSURL, NSString, NSNumber, NSData, NSArray, NSDate;

@interface BLDownloadMetadata : NSObject <NSCopying> {

	NSMutableDictionary* _dictionary;
	long long _keyStyle;
	NSLock* _lock;

}

@property (readonly) NSDictionary * primaryAssetDictionary; 
@property (assign) long long keyStyle; 
@property (getter=isAutomaticDownload) BOOL automaticDownload; 
@property (retain) NSURL * cancelDownloadURL; 
@property (retain) NSString * copyright; 
@property (getter=isDeviceBasedVPP) BOOL deviceBasedVPP; 
@property (retain) NSDictionary * dictionary; 
@property (retain) NSString * downloadKey; 
@property (readonly) NSNumber * downloaderAccountIdentifier; 
@property (retain) NSData * epubRightsData; 
@property (retain) NSString * fileExtension; 
@property (copy) NSURL * hlsPlaylistURL; 
@property (getter=hasHDR,readonly) BOOL HDR; 
@property (retain) NSURL * launchExtrasUrl; 
@property (readonly) NSArray * MD5HashStrings; 
@property (readonly) NSNumber * numberOfBytesToHash; 
@property (copy) NSString * pageProgressionDirection; 
@property (assign) unsigned long long preOrderIdentifier; 
@property (retain) NSURL * primaryAssetURL; 
@property (copy) NSString * preferredAssetFlavor; 
@property (copy) NSString * redownloadActionParameters; 
@property (getter=isRedownloadDownload) BOOL redownloadDownload; 
@property (retain) NSString * releaseDateString; 
@property (copy) NSNumber * rentalID; 
@property (copy) NSNumber * requestPersistentID; 
@property (copy) id requiredDeviceCapabilities; 
@property (assign) BOOL shouldDownloadAutomatically; 
@property (retain) NSString * sortArtistName; 
@property (retain) NSString * sortCollectionName; 
@property (retain) NSString * sortTitle; 
@property (retain) NSArray * sinfs; 
@property (assign) unsigned long long artistIdentifier; 
@property (copy) NSString * artistName; 
@property (retain) NSURL * fullSizeImageURL; 
@property (retain) NSString * genre; 
@property (assign) unsigned long long genreIdentifier; 
@property (assign) unsigned long long itemIdentifier; 
@property (retain) NSString * kind; 
@property (copy) NSString * longDescription; 
@property (retain) NSDate * releaseDate; 
@property (retain) NSNumber * releaseYear; 
@property (copy) NSString * shortDescription; 
@property (retain) NSString * subtitle; 
@property (retain) NSString * title; 
@property (retain) NSString * transactionIdentifier; 
@property (retain) NSURL * thumbnailImageURL; 
-(void)setSeasonNumber:(id)arg1 ;
-(void)setSeriesName:(id)arg1 ;
-(void)setCollectionIdentifier:(unsigned long long)arg1 ;
-(id)seasonNumber;
-(id)seriesName;
-(NSDate *)releaseDate;
-(unsigned long long)itemIdentifier;
-(unsigned long long)collectionIdentifier;
-(void)setReleaseDate:(NSDate *)arg1 ;
-(id)collectionIndexInCollectionGroup;
-(void)setCollectionIndexInCollectionGroup:(id)arg1 ;
-(void)setCollectionName:(id)arg1 ;
-(id)episodeIdentifier;
-(void)setEpisodeIdentifier:(id)arg1 ;
-(id)episodeSortIdentifier;
-(void)setEpisodeSortIdentifier:(id)arg1 ;
-(void)setGenreIdentifier:(unsigned long long)arg1 ;
-(id)indexInCollection;
-(void)setIndexInCollection:(id)arg1 ;
-(void)setNetworkName:(id)arg1 ;
-(id)numberOfCollectionsInCollectionGroup;
-(void)setNumberOfCollectionsInCollectionGroup:(id)arg1 ;
-(id)numberOfItemsInCollection;
-(void)setItemIdentifier:(unsigned long long)arg1 ;
-(NSString *)subtitle;
-(void)setNumberOfItemsInCollection:(id)arg1 ;
-(id)podcastEpisodeGUID;
-(void)setPodcastEpisodeGUID:(id)arg1 ;
-(void)setShortDescription:(NSString *)arg1 ;
-(void)setVideoDetailsDictionary:(id)arg1 ;
-(void)setValue:(id)arg1 forMetadataKey:(id)arg2 ;
-(void)setRental:(BOOL)arg1 ;
-(BOOL)isHighDefinition;
-(void)setHighDefinition:(BOOL)arg1 ;
-(void)setDurationInMilliseconds:(id)arg1 ;
-(void)setFullSizeImageURL:(NSURL *)arg1 ;
-(void)setThumbnailImageURL:(NSURL *)arg1 ;
-(void)setThumbnailNewsstandBindingEdge:(id)arg1 ;
-(void)setThumbnailNewsstandBindingType:(id)arg1 ;
-(void)setReleaseYear:(NSNumber *)arg1 ;
-(void)setPodcastType:(id)arg1 ;
-(void)setPodcastFeedURL:(id)arg1 ;
-(void)setDownloadKey:(NSString *)arg1 ;
-(void)setPrimaryAssetURL:(NSURL *)arg1 ;
-(id)valueForFirstAvailableKey:(id)arg1 ;
-(id)valueForMetadataKey:(id)arg1 ;
-(id)_stringValueForValue:(id)arg1 ;
-(NSURL *)hlsPlaylistURL;
-(id)_urlValueForValue:(id)arg1 ;
-(id)_dateValueForValue:(id)arg1 ;
-(NSNumber *)releaseYear;
-(id)_releaseDateValue;
-(void)_setValueCopy:(id)arg1 forMetadataKey:(id)arg2 ;
-(id)_newImageCollectionWithURLString:(id)arg1 ;
-(id)_thumbnailArtworkImage;
-(id)downloadPermalink;
-(BOOL)isSample;
-(id)durationInMilliseconds;
-(id)longSeasonDescription;
-(NSString *)pageProgressionDirection;
-(id)publicationVersion;
-(NSURL *)cancelDownloadURL;
-(id)betaExternalVersionIdentifier;
-(NSURL *)thumbnailImageURL;
-(NSString *)redownloadActionParameters;
-(id)viewStoreItemURL;
-(BOOL)isSharedResource;
-(BOOL)isMusicShow;
-(unsigned long long)composerIdentifier;
-(id)_valueForFirstAvailableTopLevelKey:(id)arg1 ;
-(id)_newDateFormatter;
-(void)_setValue:(id)arg1 forTopLevelKey:(id)arg2 ;
-(void)setBetaExternalVersionIdentifier:(id)arg1 ;
-(void)setDownloadPermalink:(id)arg1 ;
-(void)setCancelDownloadURL:(NSURL *)arg1 ;
-(void)setLongSeasonDescription:(id)arg1 ;
-(void)setPageProgressionDirection:(NSString *)arg1 ;
-(void)setPublicationVersion:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setRedownloadActionParameters:(NSString *)arg1 ;
-(void)setViewStoreItemURL:(id)arg1 ;
-(void)setComposerIdentifier:(unsigned long long)arg1 ;
-(void)setAutomaticDownload:(BOOL)arg1 ;
-(void)setDeviceBasedVPP:(BOOL)arg1 ;
-(void)setSharedResource:(BOOL)arg1 ;
-(NSArray *)sinfs;
-(void)setPreferredAssetFlavor:(NSString *)arg1 ;
-(id)thumbnailImageCollection;
-(NSURL *)launchExtrasUrl;
-(NSDictionary *)primaryAssetDictionary;
-(void)setHlsPlaylistURL:(NSURL *)arg1 ;
-(void)setLaunchExtrasUrl:(NSURL *)arg1 ;
-(void)setRentalID:(NSNumber *)arg1 ;
-(void)setSortArtistName:(NSString *)arg1 ;
-(void)setSortCollectionName:(NSString *)arg1 ;
-(void)setSortTitle:(NSString *)arg1 ;
-(NSString *)sortArtistName;
-(NSString *)sortCollectionName;
-(id)videoDetailsDictionary;
-(NSData *)epubRightsData;
-(BOOL)isAutomaticDownload;
-(BOOL)isRedownloadDownload;
-(NSArray *)MD5HashStrings;
-(NSNumber *)numberOfBytesToHash;
-(NSString *)preferredAssetFlavor;
-(NSString *)releaseDateString;
-(NSNumber *)requestPersistentID;
-(void)setEpubRightsData:(NSData *)arg1 ;
-(void)setKeyStyle:(long long)arg1 ;
-(void)setMD5HashStrings:(id)arg1 numberOfBytesToHash:(id)arg2 ;
-(void)setRedownloadDownload:(BOOL)arg1 ;
-(void)setReleaseDateString:(NSString *)arg1 ;
-(void)setRequestPersistentID:(NSNumber *)arg1 ;
-(void)setRequiredDeviceCapabilities:(id)arg1 ;
-(void)setShouldDownloadAutomatically:(BOOL)arg1 ;
-(BOOL)shouldDownloadAutomatically;
-(void)setSubtitle:(NSString *)arg1 ;
-(BOOL)isRental;
-(void)setDictionary:(NSDictionary *)arg1 ;
-(id)movementNumber;
-(unsigned long long)genreIdentifier;
-(void)setBundleIdentifier:(id)arg1 ;
-(void)setGenre:(NSString *)arg1 ;
-(void)setSinfs:(NSArray *)arg1 ;
-(id)bundleIdentifier;
-(id)workName;
-(NSString *)kind;
-(BOOL)hasHDR;
-(void)setComposerName:(id)arg1 ;
-(void)setFileExtension:(NSString *)arg1 ;
-(id)movementCount;
-(void)setTransactionIdentifier:(NSString *)arg1 ;
-(NSString *)fileExtension;
-(NSString *)title;
-(NSString *)shortDescription;
-(NSString *)transactionIdentifier;
-(BOOL)isExplicitContent;
-(NSString *)genre;
-(void)setPurchaseDate:(id)arg1 ;
-(id)downloadPolicy;
-(void)setDownloadPolicy:(id)arg1 ;
-(id)init;
-(id)purchaseDate;
-(NSString *)sortTitle;
-(BOOL)isDeviceBasedVPP;
-(id)showComposer;
-(BOOL)isCompilation;
-(id)movementName;
-(void)setKind:(NSString *)arg1 ;
-(id)composerName;
-(id)networkName;
-(NSString *)copyright;
-(long long)keyStyle;
-(NSNumber *)rentalID;
-(void)setSample:(BOOL)arg1 ;
-(void)setArtistName:(NSString *)arg1 ;
-(id)requiredDeviceCapabilities;
-(NSString *)artistName;
-(NSString *)downloadKey;
-(id)cloudIdentifier;
-(void)setCopyright:(NSString *)arg1 ;
-(void)setMusicShow:(BOOL)arg1 ;
-(id)variantIdentifier;
-(void)setVariantIdentifier:(id)arg1 ;
-(void)setCloudIdentifier:(id)arg1 ;
-(id)_assetDictionary;
-(NSNumber *)downloaderAccountIdentifier;
-(id)collectionName;
-(void)setExplicitContent:(BOOL)arg1 ;
-(void)setLongDescription:(NSString *)arg1 ;
-(id)initWithDictionary:(id)arg1 ;
-(void)setCompilation:(BOOL)arg1 ;
-(void)setTitle:(NSString *)arg1 ;
-(NSDictionary *)dictionary;
-(NSURL *)primaryAssetURL;
-(NSURL *)fullSizeImageURL;
-(id)podcastFeedURL;
-(void)setContentRating:(id)arg1 ;
-(id)contentRating;
-(NSString *)longDescription;
-(unsigned long long)preOrderIdentifier;
-(void)setPreOrderIdentifier:(unsigned long long)arg1 ;
-(unsigned long long)artistIdentifier;
-(void)setArtistIdentifier:(unsigned long long)arg1 ;
-(id)collectionArtistName;
-(void)setCollectionArtistName:(id)arg1 ;
-(id)podcastType;
@end


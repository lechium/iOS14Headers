/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:52:56 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/VCDatabaseProvider.h>

@protocol OS_dispatch_queue;
@class NSURL, NSPersistentStoreDescription, WFCoreDataChangeNotification, NSHashTable, NSObject, NSManagedObjectContext, NSString;

@interface WFDatabase : NSObject <VCDatabaseProvider> {

	BOOL _destroysOnDeallocation;
	NSURL* _fileURL;
	long long _transactionCount;
	NSPersistentStoreDescription* _persistentStoreDescription;
	WFCoreDataChangeNotification* _pendingChangeNotification;
	NSHashTable* _resultsToNotify;
	NSHashTable* _observers;
	NSObject*<OS_dispatch_queue> _callbackQueue;
	NSManagedObjectContext* _suggestionsContext;
	NSManagedObjectContext* _context;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) BOOL destroysOnDeallocation;                                            //@synthesize destroysOnDeallocation=_destroysOnDeallocation - In the implementation block
@property (assign,nonatomic) long long transactionCount;                                             //@synthesize transactionCount=_transactionCount - In the implementation block
@property (nonatomic,retain) NSPersistentStoreDescription * persistentStoreDescription;              //@synthesize persistentStoreDescription=_persistentStoreDescription - In the implementation block
@property (nonatomic,retain) WFCoreDataChangeNotification * pendingChangeNotification;               //@synthesize pendingChangeNotification=_pendingChangeNotification - In the implementation block
@property (nonatomic,retain) NSHashTable * resultsToNotify;                                          //@synthesize resultsToNotify=_resultsToNotify - In the implementation block
@property (nonatomic,retain) NSHashTable * observers;                                                //@synthesize observers=_observers - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> callbackQueue;                           //@synthesize callbackQueue=_callbackQueue - In the implementation block
@property (nonatomic,retain) NSManagedObjectContext * suggestionsContext;                            //@synthesize suggestionsContext=_suggestionsContext - In the implementation block
@property (nonatomic,retain) NSManagedObjectContext * context;                                       //@synthesize context=_context - In the implementation block
@property (nonatomic,readonly) NSURL * fileURL;                                                      //@synthesize fileURL=_fileURL - In the implementation block
+(id)createDatabaseForTesting;
+(id)defaultDatabase;
+(void)setDefaultDatabase:(id)arg1 ;
-(id)databaseWithError:(id*)arg1 ;
-(NSObject*<OS_dispatch_queue>)callbackQueue;
-(long long)transactionCount;
-(NSHashTable *)observers;
-(NSURL *)fileURL;
-(void)setSyncToken:(id)arg1 ;
-(void)setObservers:(NSHashTable *)arg1 ;
-(void)dealloc;
-(id)syncToken;
-(void)performTransactionWithBlock:(/*^block*/id)arg1 error:(id*)arg2 ;
-(void)contextDidSave:(id)arg1 ;
-(void)setContext:(NSManagedObjectContext *)arg1 ;
-(unsigned long long)countForResult:(id)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(NSManagedObjectContext *)context;
-(void)setTransactionCount:(long long)arg1 ;
-(id)recordWithDescriptor:(id)arg1 properties:(id)arg2 error:(id*)arg3 ;
-(id)logRunOfWorkflow:(id)arg1 withSource:(id)arg2 triggerID:(id)arg3 ;
-(id)createWorkflowWithOptions:(id)arg1 error:(id*)arg2 ;
-(BOOL)saveRecord:(id)arg1 withDescriptor:(id)arg2 error:(id*)arg3 ;
-(id)recordWithDescriptor:(id)arg1 error:(id*)arg2 ;
-(id)shortcutSuggestionsForAllAppsWithLimit:(unsigned long long)arg1 shortcutAvailability:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)shortcutSuggestionsForAppWithBundleIdentifier:(id)arg1 shortcutAvailability:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)createFolderWithName:(id)arg1 icon:(id)arg2 error:(id*)arg3 ;
-(id)sortedVisibleWorkflowsInCollection:(id)arg1 ;
-(id)sortedVisibleFolders;
-(id)referenceForWorkflowID:(id)arg1 ;
-(id)sortedWorkflowsWithQuery:(id)arg1 ;
-(void)deleteShortcutSuggestionsFromApps:(id)arg1 ;
-(BOOL)setShortcutSuggestions:(id)arg1 forAppWithBundleIdentifier:(id)arg2 error:(id*)arg3 ;
-(id)visibleReferencesForWorkflowName:(id)arg1 ;
-(BOOL)deleteReference:(id)arg1 error:(id*)arg2 ;
-(id)uniqueVisibleReferenceForWorkflowName:(id)arg1 ;
-(id)sortedVisibleWorkflowsWithAssociatedAppBundleIdentifier:(id)arg1 ;
-(id)sortedVisibleWorkflowsByName;
-(id)configuredTriggerForTriggerID:(id)arg1 ;
-(id)allConfiguredTriggers;
-(BOOL)hasConflictingReferenceForReference:(id)arg1 ;
-(id)conflictingReferenceForReference:(id)arg1 ;
-(id)collectionRecordForCollectionIdentifier:(id)arg1 createIfNecessary:(BOOL)arg2 ;
-(void)addObjectObserver:(id)arg1 ;
-(void)setConflictingReference:(id)arg1 forReference:(id)arg2 ;
-(BOOL)deleteReference:(id)arg1 tombstone:(BOOL)arg2 deleteConflictIfPresent:(BOOL)arg3 error:(id*)arg4 ;
-(id)collectionWithIdentifier:(id)arg1 ;
-(id)allCollections;
-(id)createWorkflowWithOptions:(id)arg1 nameCollisionBehavior:(unsigned long long)arg2 error:(id*)arg3 ;
-(BOOL)createWorkflowWithIdentifier:(id)arg1 record:(id)arg2 error:(id*)arg3 ;
-(id)renameReference:(id)arg1 to:(id)arg2 error:(id*)arg3 ;
-(id)suggestedWorkflowNameForName:(id)arg1 ;
-(id)workflowsWithTombstonedConflicts;
-(id)deletedFolders;
-(id)deletedWorkflows;
-(unsigned long long)countOfAllVisibleWorkflows;
-(unsigned long long)countOfWorkflowsInAFolder;
-(void)setOutcome:(long long)arg1 forRunEvent:(id)arg2 ;
-(id)sortedTriggerEventsWithConfirmationOnly:(BOOL)arg1 ;
-(void)setConfirmedForTriggerEventWithIdentifier:(id)arg1 error:(id*)arg2 ;
-(id)createTriggerEventWithTriggerID:(id)arg1 eventInfo:(id)arg2 confirmed:(BOOL)arg3 error:(id*)arg4 ;
-(id)sortedRunEventsForTriggerID:(id)arg1 ;
-(id)sortedVisibleWorkflowsWithType:(id)arg1 ;
-(id)initWithStoreDescription:(id)arg1 runMigrationsIfNecessary:(BOOL)arg2 error:(id*)arg3 ;
-(id)latestRunEvent;
-(void)clearTombstonesAndSyncState;
-(id)currentPerWorkflowStateDataForAccessResourceWithIdentifier:(id)arg1 forReference:(id)arg2 ;
-(void)setPerWorkflowStateData:(id)arg1 forAccessResourceWithIdentifier:(id)arg2 forReference:(id)arg3 ;
-(id)accessResourcesForReference:(id)arg1 ;
-(void)deleteAllAccessResourceStateDataForReference:(id)arg1 ;
-(id)accessResourceStatesForReference:(id)arg1 ;
-(void)setTrustedToRunScripts:(BOOL)arg1 forReference:(id)arg2 onDomain:(id)arg3 ;
-(BOOL)isReference:(id)arg1 allowedToRunOnDomain:(id)arg2 ;
-(id)performSuggestionsOperationWithBlock:(/*^block*/id)arg1 error:(id*)arg2 ;
-(id)allShortcutSuggestions;
-(BOOL)saveContextOrRollback:(id)arg1 error:(id*)arg2 ;
-(id)_syncTokenWithError:(id*)arg1 ;
-(id)conflictForWorkflowReference:(id)arg1 ;
-(BOOL)mergeAutomationsAndShortcuts;
-(void)removeObjectObserver:(id)arg1 ;
-(id)performOperationWithBlock:(/*^block*/id)arg1 error:(id*)arg2 ;
-(id)performSaveOperationWithBlock:(/*^block*/id)arg1 error:(id*)arg2 ;
-(id)objectForDescriptor:(id)arg1 properties:(id)arg2 ;
-(id)objectForDescriptor:(id)arg1 properties:(id)arg2 createIfNecessary:(BOOL)arg3 ;
-(void)accessStorageForDescriptor:(id)arg1 forWriting:(BOOL)arg2 readingRecordProperties:(id)arg3 usingBlock:(/*^block*/id)arg4 withError:(id*)arg5 ;
-(id)objectOfClass:(Class)arg1 withIdentifier:(id)arg2 forKey:(id)arg3 createIfNecessary:(BOOL)arg4 properties:(id)arg5 ;
-(void)remoteContextDidSave:(id)arg1 ;
-(void)notifyResultsAboutChange:(id)arg1 ;
-(id)descriptorsForResult:(id)arg1 error:(id*)arg2 ;
-(BOOL)startObservingChangesForResult:(id)arg1 ;
-(id)missingErrorForDescriptor:(id)arg1 ;
-(Class)recordClassForObjectType:(unsigned long long)arg1 ;
-(BOOL)reloadRecord:(id)arg1 withDescriptor:(id)arg2 error:(id*)arg3 ;
-(id)tombstonedShortcutsPredicate;
-(id)visiblePredicate;
-(void)addActionCountsToShortcutsIfNecessary;
-(void)addSyncHashesToShortcutsIfNecessary;
-(void)removeRunEventsWithoutAssociatedShortcuts;
-(BOOL)destroysOnDeallocation;
-(void)setDestroysOnDeallocation:(BOOL)arg1 ;
-(NSPersistentStoreDescription *)persistentStoreDescription;
-(void)setPersistentStoreDescription:(NSPersistentStoreDescription *)arg1 ;
-(WFCoreDataChangeNotification *)pendingChangeNotification;
-(void)setPendingChangeNotification:(WFCoreDataChangeNotification *)arg1 ;
-(NSHashTable *)resultsToNotify;
-(void)setResultsToNotify:(NSHashTable *)arg1 ;
-(NSManagedObjectContext *)suggestionsContext;
-(void)setSuggestionsContext:(NSManagedObjectContext *)arg1 ;
-(id)workflowResultWithFetchOperation:(id)arg1 ;
-(id)validateWorkflowName:(id)arg1 forCreation:(BOOL)arg2 overwriting:(BOOL)arg3 error:(id*)arg4 ;
-(BOOL)hasVisibleWorkflowsWithName:(id)arg1 ;
-(id)duplicateNameErrorWithName:(id)arg1 ;
-(id)_createWorkflowWithOptions:(id)arg1 error:(id*)arg2 ;
-(id)duplicateReference:(id)arg1 newName:(id)arg2 error:(id*)arg3 ;
-(void)deleteDonationsForShortcutWithIdentifier:(id)arg1 ;
-(id)allShortcuts;
-(id)createWorkflowWithError:(id*)arg1 ;
-(id)duplicateReference:(id)arg1 error:(id*)arg2 ;
-(id)workflowFetchRequestWithCollectionID:(id)arg1 includeTombstones:(BOOL)arg2 limit:(unsigned long long)arg3 ;
-(id)workflowResultWithFetchRequest:(id)arg1 ;
-(id)configuredTriggersForWorkflowID:(id)arg1 ;
-(id)triggerEventForIdentifier:(id)arg1 error:(id*)arg2 ;
-(id)triggerResultWithFetchRequest:(id)arg1 ;
-(id)createTriggerWithRecord:(id)arg1 workflow:(id)arg2 error:(id*)arg3 ;
-(id)collectionsForWorkflowReference:(id)arg1 ;
-(BOOL)moveReferences:(id)arg1 toIndex:(long long)arg2 ofCollection:(id)arg3 visible:(BOOL)arg4 error:(id*)arg5 ;
-(BOOL)moveReferences:(id)arg1 toIndexes:(id)arg2 ofCollection:(id)arg3 visible:(BOOL)arg4 error:(id*)arg5 ;
-(BOOL)moveCollections:(id)arg1 toIndexes:(id)arg2 ofCollectionWithIdentifier:(id)arg3 error:(id*)arg4 ;
-(id)visibleCollectionForFolderName:(id)arg1 ;
-(id)orphanedFoldersPredicate;
-(id)orphanedWorkflowsPredicate;
-(id)updateFolder:(id)arg1 newName:(id)arg2 newIcon:(id)arg3 error:(id*)arg4 ;
-(id)folderForWorkflowReference:(id)arg1 ;
-(id)collectionForWorkflowType:(id)arg1 ;
-(BOOL)moveReferences:(id)arg1 toIndex:(long long)arg2 ofCollection:(id)arg3 error:(id*)arg4 ;
-(BOOL)moveReferences:(id)arg1 toIndexes:(id)arg2 ofCollection:(id)arg3 error:(id*)arg4 ;
-(BOOL)prependReferences:(id)arg1 toCollection:(id)arg2 error:(id*)arg3 ;
-(BOOL)prependReferences:(id)arg1 toCollectionWithType:(id)arg2 error:(id*)arg3 ;
-(BOOL)removeReferences:(id)arg1 fromCollectionWithIdentifier:(id)arg2 error:(id*)arg3 ;
-(BOOL)moveCollections:(id)arg1 toIndex:(unsigned long long)arg2 error:(id*)arg3 ;
-(BOOL)moveCollections:(id)arg1 toIndexes:(id)arg2 error:(id*)arg3 ;
-(id)orphanedFolders;
-(id)orphanedShortcuts;
-(id)collectionResultWithFetchRequest:(id)arg1 ;
-(id)suggestedFolderNameForName:(id)arg1 ;
-(id)validateFolderName:(id)arg1 forCollection:(id)arg2 error:(id*)arg3 ;
-(id)logRunOfWorkflow:(id)arg1 atDate:(id)arg2 withIdentifier:(id)arg3 source:(id)arg4 triggerID:(id)arg5 ;
-(id)sortedRunEventsWithSource:(id)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:41:15 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/Espresso.framework/Espresso
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Espresso/Espresso-Structs.h>
#import <libobjc.A.dylib/ETTaskContext.h>

@class ETVariablesDefinition, NSArray, ETModelDefinition, ETOptimizerDefinition, ETTaskState;

@interface ETTaskDefinition : NSObject <ETTaskContext> {

	unordered_map<std::__1::basic_string<char>, unsigned long, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >* inference_layer_index;
	ETVariablesDefinition* varsDef;
	unsigned long long runtimePlatform;
	int precision;
	unsigned long long batchSize;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > training_control_name;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > training_control_end_name;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > gradient_control_name;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > gradient_control_end_name;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > optimizer_control_name;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > optimizer_control_end_name;
	NSArray* infInputNames;
	NSArray* infOutputNames;
	NSArray* trainInputNames;
	NSArray* trainOutputNames;
	unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >* infInputBlobShapes;
	unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >* trainInputBlobShapes;
	unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >* infOutputBlobShapes;
	unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >* trainOutputBlobShapes;
	ETModelDefinition* _inferenceModel;
	ETOptimizerDefinition* _optimizer;
	unsigned long long _platform;
	ETTaskState* _taskState;
	shared_ptr<Espresso::net>* _inferenceGraphNetPtr;
	shared_ptr<Espresso::net>* _trainingGraphNetPtr;

}

@property (assign) shared_ptr<Espresso::net>* inferenceGraphNetPtr;              //@synthesize inferenceGraphNetPtr=_inferenceGraphNetPtr - In the implementation block
@property (assign) shared_ptr<Espresso::net>* trainingGraphNetPtr;               //@synthesize trainingGraphNetPtr=_trainingGraphNetPtr - In the implementation block
@property (nonatomic,retain) ETModelDefinition * inferenceModel;                 //@synthesize inferenceModel=_inferenceModel - In the implementation block
@property (nonatomic,retain) ETOptimizerDefinition * optimizer;                  //@synthesize optimizer=_optimizer - In the implementation block
@property (assign,nonatomic) unsigned long long platform;                        //@synthesize platform=_platform - In the implementation block
@property (nonatomic,retain) ETTaskState * taskState;                            //@synthesize taskState=_taskState - In the implementation block
-(void)setTaskState:(ETTaskState *)arg1 ;
-(ETTaskState *)taskState;
-(void)setPlatform:(unsigned long long)arg1 ;
-(shared_ptr<Espresso::abstract_context>*)context_for_runtime_platform:(id*)arg1 ;
-(shared_ptr<Espresso::net>*)trainingGraphNetPtr;
-(void)setTrainingGraphNetPtr:(shared_ptr<Espresso::net>*)arg1 ;
-(shared_ptr<Espresso::net>*)inferenceGraphNetPtr;
-(void)setInferenceGraphNetPtr:(shared_ptr<Espresso::net>*)arg1 ;
-(void)shareWeights;
-(void)setupShapes:(unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >*)arg1 forBlobs:(id)arg2 withError:(id*)arg3 ;
-(void)setInferenceModel:(ETModelDefinition *)arg1 ;
-(void)setOptimizer:(ETOptimizerDefinition *)arg1 ;
-(void)setupInputOutputShapes:(id*)arg1 ;
-(void)reloadOnRuntimePlatform:(id*)arg1 ;
-(void)checkShapes:(const unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >*)arg1 withSample:(const unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >*)arg2 withError:(id*)arg3 ;
-(BOOL)privateDoTrainingOnData:(id)arg1 forNumberOfEpochs:(unsigned long long)arg2 withCallback:(id)arg3 error:(id*)arg4 ;
-(BOOL)setInferenceNetworkWeights:(shared_ptr<Espresso::net>*)arg1 error:(id*)arg2 ;
-(ETModelDefinition *)inferenceModel;
-(id)initWithTrainingModelDefinition:(id)arg1 forPlatform:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)namesVectorToFoundationArray:(vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >*)arg1 ;
-(BOOL)saveTrainingNetwork:(id)arg1 checkpoint:(id)arg2 error:(id*)arg3 ;
-(BOOL)setWeightsOfInferenceNetworkLoadedFrom:(id)arg1 AndSaveTo:(id)arg2 error:(id*)arg3 ;
-(unsigned long long)dataTypeForParameterOfType:(unsigned long long)arg1 fromLayerNamed:(id)arg2 ;
-(unsigned long long)platformForLayerNamed:(id)arg1 error:(id*)arg2 ;
-(ETOptimizerDefinition *)optimizer;
-(id)initWithModelDefinition:(id)arg1 lossDefinition:(id)arg2 variablesDefinition:(id)arg3 optimizerDefinition:(id)arg4 forPlatform:(unsigned long long)arg5 error:(id*)arg6 ;
-(id)getParameterOfType:(unsigned long long)arg1 forLayerNamed:(id)arg2 error:(id*)arg3 ;
-(BOOL)saveNetwork:(id)arg1 inplace:(BOOL)arg2 error:(id*)arg3 ;
-(id)getTensorNamed:(id)arg1 ;
-(BOOL)setTensorNamed:(id)arg1 withValue:(id)arg2 error:(id*)arg3 ;
-(BOOL)doTrainingOnData:(id)arg1 forNumberOfEpochs:(unsigned long long)arg2 withCallback:(id)arg3 error:(id*)arg4 ;
-(id)doInferenceOnData:(id)arg1 error:(id*)arg2 ;
-(BOOL)setParameterOfType:(unsigned long long)arg1 forLayerNamed:(id)arg2 withValue:(id)arg3 error:(id*)arg4 ;
-(unsigned long long)platform;
-(id)description;
@end


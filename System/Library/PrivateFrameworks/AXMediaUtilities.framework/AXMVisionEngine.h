/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:42:00 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/AXMediaUtilities.framework/AXMediaUtilities
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AXMediaUtilities/AXMediaUtilities-Structs.h>
#import <AXMediaUtilities/AXMVisionEngineNodeConnectionDelegate.h>
#import <AXMediaUtilities/AXMTaskDispatcherDelegate.h>
#import <AXMediaUtilities/AXMServiceDelegate.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <AXMediaUtilities/AXMDescribing.h>

@protocol OS_dispatch_queue;
@class NSObject, NSMutableArray, AXMImageRegistrationNode, _AXMVisionEngineAnalysisTask, NSString, AXMVisionEngineCache, AXMService, AXMTaskDispatcher, AXMSequenceRequestManager, NSArray;

@interface AXMVisionEngine : NSObject <AXMVisionEngineNodeConnectionDelegate, AXMTaskDispatcherDelegate, AXMServiceDelegate, NSCopying, NSSecureCoding, AXMDescribing> {

	NSObject*<OS_dispatch_queue> _queue;
	NSMutableArray* _queue_sourceNodes;
	NSMutableArray* _queue_evaluationNodes;
	AXMImageRegistrationNode* _queue_imageRegistrationNode;
	NSMutableArray* _queue_resultHandlers;
	BOOL _queue_shouldNotifyServiceOfEngineConfigChange;
	_AXMVisionEngineAnalysisTask* _queue_currentTask;
	BOOL _prioritySchedulingEnabled;
	BOOL _prioritySchedulingAllowMultipleNodeExecution;
	BOOL _imageRegistrationFilteringEnabled;
	BOOL _diagnosticsEnabled;
	BOOL _disableResultLogging;
	NSString* _identifier;
	long long _maximumQueueSize;
	unsigned long long _thresholdPriority;
	long long _minimumImageRegistrationSignalLevel;
	AXMVisionEngineCache* _cache;
	AXMService* _axMediaUtilsService;
	AXMTaskDispatcher* _taskDispatcher;
	AXMSequenceRequestManager* _sequenceRequestManager;

}

@property (copy) NSString * identifier;                                                         //@synthesize identifier=_identifier - In the implementation block
@property (nonatomic,retain) AXMService * axMediaUtilsService;                                  //@synthesize axMediaUtilsService=_axMediaUtilsService - In the implementation block
@property (nonatomic,retain) AXMVisionEngineCache * cache;                                      //@synthesize cache=_cache - In the implementation block
@property (nonatomic,retain) AXMTaskDispatcher * taskDispatcher;                                //@synthesize taskDispatcher=_taskDispatcher - In the implementation block
@property (nonatomic,retain) AXMSequenceRequestManager * sequenceRequestManager;                //@synthesize sequenceRequestManager=_sequenceRequestManager - In the implementation block
@property (nonatomic,readonly) NSArray * sourceNodes; 
@property (nonatomic,readonly) NSArray * evaluationNodes; 
@property (assign) long long maximumQueueSize;                                                  //@synthesize maximumQueueSize=_maximumQueueSize - In the implementation block
@property (assign) BOOL prioritySchedulingEnabled;                                              //@synthesize prioritySchedulingEnabled=_prioritySchedulingEnabled - In the implementation block
@property (assign) BOOL prioritySchedulingAllowMultipleNodeExecution;                           //@synthesize prioritySchedulingAllowMultipleNodeExecution=_prioritySchedulingAllowMultipleNodeExecution - In the implementation block
@property (assign) unsigned long long thresholdPriority;                                        //@synthesize thresholdPriority=_thresholdPriority - In the implementation block
@property (assign,nonatomic) BOOL imageRegistrationFilteringEnabled;                            //@synthesize imageRegistrationFilteringEnabled=_imageRegistrationFilteringEnabled - In the implementation block
@property (assign,nonatomic) long long minimumImageRegistrationSignalLevel;                     //@synthesize minimumImageRegistrationSignalLevel=_minimumImageRegistrationSignalLevel - In the implementation block
@property (nonatomic,readonly) BOOL isCachingEnabled; 
@property (nonatomic,readonly) long long cacheSize; 
@property (assign,getter=areDiagnosticsEnabled,nonatomic) BOOL diagnosticsEnabled;              //@synthesize diagnosticsEnabled=_diagnosticsEnabled - In the implementation block
@property (assign,nonatomic) BOOL disableResultLogging;                                         //@synthesize disableResultLogging=_disableResultLogging - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)supportsSecureCoding;
-(id)initWithIdentifier:(id)arg1 ;
-(long long)cacheSize;
-(NSString *)identifier;
-(void)setCache:(AXMVisionEngineCache *)arg1 ;
-(AXMVisionEngineCache *)cache;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)dispatcher:(id)arg1 handleTask:(id)arg2 ;
-(BOOL)canAddSourceNodeClass:(Class)arg1 ;
-(void)insertSourceNode:(id)arg1 atIndex:(long long)arg2 ;
-(void)removeAllSourceNodes;
-(BOOL)canAddEvaluationNodeClass:(Class)arg1 ;
-(void)insertEvaluationNode:(id)arg1 atIndex:(long long)arg2 ;
-(void)removeEvaluationNode:(id)arg1 ;
-(void)removeAllEvaluationNodes;
-(void)addSourceNodes:(id)arg1 evaluationNodes:(id)arg2 ;
-(id)sourceNodeWithIdentifier:(id)arg1 ;
-(id)evaluationNodeWithIdentifier:(id)arg1 ;
-(void)prewarmEngine;
-(void)setDiagnosticsEnabled:(BOOL)arg1 ;
-(id)makeUniqueIdentifierForNode:(Class)arg1 ;
-(BOOL)nodeIdentifierExists:(id)arg1 ;
-(void)addResultHandler:(/*^block*/id)arg1 ;
-(void)removeResultHandler:(/*^block*/id)arg1 ;
-(void)removeAllResultHandlers;
-(void)enableResultCachingWithCacheSize:(long long)arg1 ;
-(void)disableResultCaching;
-(void)updateEngineConfiguration:(/*^block*/id)arg1 ;
-(void)purgeResources:(/*^block*/id)arg1 ;
-(void)setImageRegistrationFilteringEnabled:(BOOL)arg1 ;
-(void)setMinimumImageRegistrationSignalLevel:(long long)arg1 ;
-(void)setDisableResultLogging:(BOOL)arg1 ;
-(void)setIdentifier:(NSString *)arg1 ;
-(void)axMediaUtilitiesService:(id)arg1 eventOccurred:(long long)arg2 ;
-(BOOL)areDiagnosticsEnabled;
-(BOOL)isEqual:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)_commonInit;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setAxMediaUtilsService:(AXMService *)arg1 ;
-(AXMService *)axMediaUtilsService;
-(void)setTaskDispatcher:(AXMTaskDispatcher *)arg1 ;
-(void)setSequenceRequestManager:(AXMSequenceRequestManager *)arg1 ;
-(NSArray *)sourceNodes;
-(BOOL)isEqualToEngine:(id)arg1 ;
-(NSArray *)evaluationNodes;
-(void)setMaximumQueueSize:(long long)arg1 ;
-(void)setPrioritySchedulingEnabled:(BOOL)arg1 ;
-(void)setPrioritySchedulingAllowMultipleNodeExecution:(BOOL)arg1 ;
-(void)setThresholdPriority:(unsigned long long)arg1 ;
-(void)addSourceNode:(id)arg1 ;
-(void)addEvaluationNode:(id)arg1 ;
-(long long)maximumQueueSize;
-(BOOL)prioritySchedulingEnabled;
-(BOOL)prioritySchedulingAllowMultipleNodeExecution;
-(unsigned long long)thresholdPriority;
-(BOOL)isCachingEnabled;
-(void)_queue_handleEvaluatedContext:(id)arg1 result:(id)arg2 error:(id)arg3 ;
-(BOOL)_queue_shouldEvaluateNode:(id)arg1 withOptions:(id)arg2 ;
-(BOOL)_queue_activeEvaluationNodesExclusivelyUseVisionFramework:(id)arg1 ;
-(BOOL)imageRegistrationFilteringEnabled;
-(unsigned long long)hash;
-(id)_queue_activeEvaluationNodesForOptions:(id)arg1 applyPriorityScheduling:(BOOL)arg2 prioritySchedulingAllowMultipleNodeExecution:(BOOL)arg3 ;
-(long long)minimumImageRegistrationSignalLevel;
-(BOOL)disableResultLogging;
-(void)_queue_logEvaluatedResult:(id)arg1 ;
-(id)resultHandlers;
-(void)_invokeResultHandlers:(id)arg1 withError:(id)arg2 ;
-(void)_invokeResultHandlers:(id)arg1 withResult:(id)arg2 ;
-(BOOL)canAddSourceNode:(id)arg1 ;
-(BOOL)canAddEvaluationNode:(id)arg1 ;
-(id)_queue_sourceNodeWithIdentifier:(id)arg1 ;
-(BOOL)_queue_nodeIdentifierExists:(id)arg1 ;
-(id)_queue_evaluationNodeWithIdentifier:(id)arg1 ;
-(id)_queue_makeUniqueIdentifierForNode:(Class)arg1 ;
-(void)_queue_addResultHandler:(/*^block*/id)arg1 ;
-(void)_queue_removeResultHandler:(/*^block*/id)arg1 ;
-(void)_queue_removeAllResultHandlers;
-(id)axmDescription;
-(void)axmAppendRecursiveDescription:(id)arg1 withIndentation:(long long)arg2 ;
-(AXMTaskDispatcher *)taskDispatcher;
-(AXMSequenceRequestManager *)sequenceRequestManager;
-(BOOL)_queue_shouldContinueWithoutResultHandlers:(id)arg1 ;
-(void)_queue_remotelyEvaluateWithSource:(id)arg1 context:(id)arg2 ;
-(void)_queue_evaluateWithSource:(id)arg1 context:(id)arg2 ;
-(void)_invokeFullQueueResultHandlersForContext:(id)arg1 ;
-(void)triggerWithSource:(id)arg1 context:(id)arg2 ;
-(BOOL)engineWillAcceptTiggerWithSource:(id)arg1 ;
-(BOOL)diagnosticsEnabled:(id)arg1 ;
-(void)captureSessionNodeDidBeginProcessingFrames:(id)arg1 ;
-(void)captureSessionNodeDidEndProcessingFrames:(id)arg1 ;
-(void)captureSessionNodeWillProcessFrame:(id)arg1 ;
-(void)captureSessionNodeDidDropFrame:(id)arg1 ;
-(void)removeSourceNode:(id)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:40:11 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ChatKit/ChatKit-Structs.h>
#import <UIKitCore/UIScrollView.h>
#import <UIKit/UITextViewDelegate.h>
#import <libobjc.A.dylib/CKMessageEntryRichTextViewDelegate.h>
#import <libobjc.A.dylib/CKMessageEntryViewStyleProtocol.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@protocol CKPluginEntryViewController;
@class CKComposition, CKMessageEntryTextView, CKMessageEntryRichTextView, UIViewController, CKConversation, IMPluginPayload, UIView, UIButton, NSString, NSDictionary;

@interface CKMessageEntryContentView : UIScrollView <UITextViewDelegate, CKMessageEntryRichTextViewDelegate, CKMessageEntryViewStyleProtocol, UIGestureRecognizerDelegate> {

	BOOL _shouldShowSubject;
	BOOL _needsTextLayout;
	BOOL _needsEnsureSelectionVisible;
	BOOL _needsEnsureTextViewVisible;
	BOOL _ignoreEndEditing;
	BOOL _isCompositionExpirable;
	BOOL _pendingShelfPayloadWillAnimateIn;
	CKComposition* _composition;
	long long _style;
	CKMessageEntryTextView* _subjectView;
	CKMessageEntryRichTextView* _textView;
	double _placeHolderWidth;
	double _maxContentWidthWhenExpanded;
	double _maxPreviewContentWidthWhenExpanded;
	double _containerViewLineWidth;
	double _sendButtonTextInsetWidth;
	UIViewController*<CKPluginEntryViewController> _pluginEntryViewController;
	CKConversation* _conversation;
	CKMessageEntryTextView* _activeView;
	IMPluginPayload* _shelfPluginPayload;
	UIView* _textAndSubjectDividerLine;
	UIView* _pluginDividerLine;
	UIButton* _clearPluginButton;
	NSString* _requestedPlaceholderText;
	NSString* _overridePlaceholderText;
	NSDictionary* _bizIntent;

}

@property (assign,nonatomic,__weak) CKMessageEntryTextView * activeView;                                            //@synthesize activeView=_activeView - In the implementation block
@property (assign,nonatomic) BOOL shouldShowSubject;                                                                //@synthesize shouldShowSubject=_shouldShowSubject - In the implementation block
@property (nonatomic,retain) UIViewController*<CKPluginEntryViewController> pluginEntryViewController;              //@synthesize pluginEntryViewController=_pluginEntryViewController - In the implementation block
@property (nonatomic,retain) IMPluginPayload * shelfPluginPayload;                                                  //@synthesize shelfPluginPayload=_shelfPluginPayload - In the implementation block
@property (nonatomic,retain) CKMessageEntryTextView * subjectView;                                                  //@synthesize subjectView=_subjectView - In the implementation block
@property (nonatomic,retain) CKMessageEntryRichTextView * textView;                                                 //@synthesize textView=_textView - In the implementation block
@property (nonatomic,retain) UIView * textAndSubjectDividerLine;                                                    //@synthesize textAndSubjectDividerLine=_textAndSubjectDividerLine - In the implementation block
@property (nonatomic,retain) UIView * pluginDividerLine;                                                            //@synthesize pluginDividerLine=_pluginDividerLine - In the implementation block
@property (assign,nonatomic) BOOL needsTextLayout;                                                                  //@synthesize needsTextLayout=_needsTextLayout - In the implementation block
@property (assign,nonatomic) BOOL needsEnsureSelectionVisible;                                                      //@synthesize needsEnsureSelectionVisible=_needsEnsureSelectionVisible - In the implementation block
@property (assign,nonatomic) BOOL needsEnsureTextViewVisible;                                                       //@synthesize needsEnsureTextViewVisible=_needsEnsureTextViewVisible - In the implementation block
@property (assign,nonatomic) BOOL ignoreEndEditing;                                                                 //@synthesize ignoreEndEditing=_ignoreEndEditing - In the implementation block
@property (assign,nonatomic) BOOL isCompositionExpirable;                                                           //@synthesize isCompositionExpirable=_isCompositionExpirable - In the implementation block
@property (nonatomic,retain) UIButton * clearPluginButton;                                                          //@synthesize clearPluginButton=_clearPluginButton - In the implementation block
@property (nonatomic,retain) NSString * requestedPlaceholderText;                                                   //@synthesize requestedPlaceholderText=_requestedPlaceholderText - In the implementation block
@property (nonatomic,retain) NSString * overridePlaceholderText;                                                    //@synthesize overridePlaceholderText=_overridePlaceholderText - In the implementation block
@property (assign,nonatomic) BOOL pendingShelfPayloadWillAnimateIn;                                                 //@synthesize pendingShelfPayloadWillAnimateIn=_pendingShelfPayloadWillAnimateIn - In the implementation block
@property (nonatomic,copy) NSDictionary * bizIntent;                                                                //@synthesize bizIntent=_bizIntent - In the implementation block
@property (nonatomic,readonly) BOOL shouldShowPlugin; 
@property (nonatomic,retain) CKComposition * composition;                                                           //@synthesize composition=_composition - In the implementation block
@property (nonatomic,copy) NSString * placeholderText; 
@property (nonatomic,readonly) UIView * pluginView; 
@property (getter=isActive,nonatomic,readonly) BOOL active; 
@property (getter=isSingleLine,nonatomic,readonly) BOOL singleLine; 
@property (getter=isShowingDictationPlaceholder,nonatomic,readonly) BOOL showingDictationPlaceholder; 
@property (nonatomic,readonly) UIEdgeInsets contentTextAlignmentInsets; 
@property (assign,nonatomic) char balloonColor; 
@property (assign,nonatomic) double placeHolderWidth;                                                               //@synthesize placeHolderWidth=_placeHolderWidth - In the implementation block
@property (assign,nonatomic) double maxContentWidthWhenExpanded;                                                    //@synthesize maxContentWidthWhenExpanded=_maxContentWidthWhenExpanded - In the implementation block
@property (assign,nonatomic) double maxPreviewContentWidthWhenExpanded;                                             //@synthesize maxPreviewContentWidthWhenExpanded=_maxPreviewContentWidthWhenExpanded - In the implementation block
@property (assign,nonatomic) double containerViewLineWidth;                                                         //@synthesize containerViewLineWidth=_containerViewLineWidth - In the implementation block
@property (assign,nonatomic) double sendButtonTextInsetWidth;                                                       //@synthesize sendButtonTextInsetWidth=_sendButtonTextInsetWidth - In the implementation block
@property (assign,nonatomic,__weak) CKConversation * conversation;                                                  //@synthesize conversation=_conversation - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) long long style;                                                                       //@synthesize style=_style - In the implementation block
+(id)_createTextView;
+(id)_createSubjectView;
+(void)prewarmTextView;
-(char)balloonColor;
-(void)messageEntryRichTextViewDidTapHandwritingKey:(id)arg1 ;
-(double)maxWidthForPreviewImagesInMessageEntryRichTextView:(id)arg1 ;
-(BOOL)messageEntryRichTextView:(id)arg1 shouldRecognizeGesture:(id)arg2 ;
-(void)messageEntryRichTextViewWasTapped:(id)arg1 isLongPress:(BOOL)arg2 ;
-(NSDictionary *)bizIntent;
-(void)messageEntryRichTextView:(id)arg1 didTapMediaObject:(id)arg2 ;
-(void)messageEntryRichTextViewDidTapMention:(id)arg1 characterIndex:(double)arg2 ;
-(void)setTextView:(CKMessageEntryRichTextView *)arg1 ;
-(void)acceptAutocorrection;
-(UIViewController*<CKPluginEntryViewController>)pluginEntryViewController;
-(void)setBounds:(CGRect)arg1 ;
-(void)setFrame:(CGRect)arg1 ;
-(NSString *)placeholderText;
-(void)dealloc;
-(BOOL)shouldShowPlugin;
-(double)_calcuateIdealMaxPluginHeight:(BOOL)arg1 ;
-(UIButton *)clearPluginButton;
-(UIView *)pluginDividerLine;
-(BOOL)shouldShowClearButton;
-(void)_layoutDividerLine:(id)arg1 leftInset:(double)arg2 rightInset:(double)arg3 currentYOffset:(double*)arg4 ;
-(BOOL)needsTextLayout;
-(double)_maxWidthForTextView;
-(void)_layoutTextView:(id)arg1 currentYOffset:(double*)arg2 originX:(double)arg3 maxWidth:(double)arg4 ;
-(UIView *)textAndSubjectDividerLine;
-(double)sendButtonTextInsetWidth;
-(void)ensureSelectionVisibleIfNeeded;
-(void)setNeedsTextLayout:(BOOL)arg1 ;
-(void)ensureTextViewVisibleIfNeeded;
-(double)containerViewLineWidth;
-(void)setSubjectView:(CKMessageEntryTextView *)arg1 ;
-(void)setTextAndSubjectDividerLine:(UIView *)arg1 ;
-(void)setClearPluginButton:(UIButton *)arg1 ;
-(void)clearPluginButtonTapped:(id)arg1 ;
-(void)setPluginDividerLine:(UIView *)arg1 ;
-(void)pluginPayloadWantsResize:(id)arg1 ;
-(void)plugingPayloadDidLoad:(id)arg1 ;
-(BOOL)isCompositionExpirable;
-(void)invalidateComposition;
-(void)configureShelfForPluginPayload:(id)arg1 ;
-(BOOL)_shouldDeferUpdateUI;
-(void)setIsCompositionExpirable:(BOOL)arg1 ;
-(void)setShelfPluginPayload:(IMPluginPayload *)arg1 ;
-(void)setPluginEntryViewController:(UIViewController*<CKPluginEntryViewController>)arg1 ;
-(void)setBizIntent:(NSDictionary *)arg1 ;
-(BOOL)pendingShelfPayloadWillAnimateIn;
-(void)setPendingShelfPayloadWillAnimateIn:(BOOL)arg1 ;
-(NSString *)requestedPlaceholderText;
-(void)setRequestedPlaceholderText:(NSString *)arg1 ;
-(void)setActiveView:(CKMessageEntryTextView *)arg1 ;
-(void)setIgnoreEndEditing:(BOOL)arg1 ;
-(BOOL)ignoreEndEditing;
-(void)setNeedsEnsureSelectionVisible:(BOOL)arg1 ;
-(double)maxPreviewContentWidthWhenExpanded;
-(double)maxContentWidthWhenExpanded;
-(void)setNeedsEnsureTextViewVisible:(BOOL)arg1 ;
-(BOOL)needsEnsureSelectionVisible;
-(BOOL)needsEnsureTextViewVisible;
-(void)setOverridePlaceholderText:(NSString *)arg1 ;
-(NSString *)overridePlaceholderText;
-(UIEdgeInsets)contentTextAlignmentInsets;
-(BOOL)messageEntryRichTextView:(id)arg1 shouldPasteMediaObjects:(id)arg2 ;
-(void)messageEntryRichTextView:(id)arg1 pastedURL:(id)arg2 ;
-(void)prepareForShelfPayloadAnimation;
-(BOOL)shouldLayoutPluginEdgeToEdge;
-(long long)style;
-(BOOL)makeActive;
-(void)layoutSubviews;
-(void)setConversation:(CKConversation *)arg1 ;
-(BOOL)isActive;
-(void)didFinishAnimatedBoundsChange;
-(CKComposition *)composition;
-(BOOL)shouldShowSubject;
-(void)_updateUI;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(CKConversation *)conversation;
-(void)textViewDidBeginEditing:(id)arg1 ;
-(void)textViewDidChange:(id)arg1 ;
-(BOOL)textViewShouldBeginEditing:(id)arg1 ;
-(void)textViewDidEndEditing:(id)arg1 ;
-(void)textViewDidChangeSelection:(id)arg1 ;
-(void)setSendButtonTextInsetWidth:(double)arg1 ;
-(CKMessageEntryTextView *)subjectView;
-(void)setMaxPreviewContentWidthWhenExpanded:(double)arg1 ;
-(void)setMaxContentWidthWhenExpanded:(double)arg1 ;
-(BOOL)isSingleLine;
-(void)setPlaceHolderWidth:(double)arg1 ;
-(BOOL)textView:(id)arg1 shouldChangeTextInRange:(NSRange)arg2 replacementText:(id)arg3 ;
-(CKMessageEntryTextView *)activeView;
-(void)setShouldShowSubject:(BOOL)arg1 ;
-(id)initWithFrame:(CGRect)arg1 shouldShowSubject:(BOOL)arg2 ;
-(void)setContainerViewLineWidth:(double)arg1 ;
-(UIView *)pluginView;
-(IMPluginPayload *)shelfPluginPayload;
-(void)willAnimateBoundsChange;
-(void)collapseTextFieldsIfInPencilMode;
-(void)setBalloonColor:(char)arg1 ;
-(BOOL)isShowingDictationPlaceholder;
-(CKMessageEntryRichTextView *)textView;
-(void)setPlaceholderText:(NSString *)arg1 ;
-(void)setComposition:(CKComposition *)arg1 ;
-(void)setStyle:(long long)arg1 ;
-(double)placeHolderWidth;
@end


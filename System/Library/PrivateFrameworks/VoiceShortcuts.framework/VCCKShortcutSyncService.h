/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:52:28 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/VoiceShortcuts.framework/VoiceShortcuts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/CKSyncEngineDataSource.h>
#import <libobjc.A.dylib/WFDatabaseObjectObserver.h>

@class WFDatabase, CKSyncEngine, VCCKApplicationStateObserver, NSMutableDictionary, CKRecordZoneID, NSString;

@interface VCCKShortcutSyncService : NSObject <CKSyncEngineDataSource, WFDatabaseObjectObserver> {

	WFDatabase* _database;
	CKSyncEngine* _syncEngine;
	VCCKApplicationStateObserver* _applicationObserver;
	NSMutableDictionary* _workflowFilesForIdentifiers;

}

@property (nonatomic,readonly) WFDatabase * database;                                           //@synthesize database=_database - In the implementation block
@property (nonatomic,readonly) CKSyncEngine * syncEngine;                                       //@synthesize syncEngine=_syncEngine - In the implementation block
@property (nonatomic,readonly) CKRecordZoneID * shortcutsZoneID; 
@property (nonatomic,readonly) VCCKApplicationStateObserver * applicationObserver;              //@synthesize applicationObserver=_applicationObserver - In the implementation block
@property (nonatomic,readonly) NSMutableDictionary * workflowFilesForIdentifiers;               //@synthesize workflowFilesForIdentifiers=_workflowFilesForIdentifiers - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(WFDatabase *)database;
-(void)stopObservingUserDefaults;
-(CKSyncEngine *)syncEngine;
-(void)addRecordIDsToSave:(id)arg1 recordIDsToDelete:(id)arg2 ;
-(void)dealloc;
-(void)start;
-(void)startObservingUserDefaults;
-(void)databaseDidChange:(id)arg1 modified:(id)arg2 inserted:(id)arg3 removed:(id)arg4 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)syncEngine:(id)arg1 didUpdateMetadata:(id)arg2 ;
-(void)syncEngine:(id)arg1 didSaveRecord:(id)arg2 ;
-(void)syncEngine:(id)arg1 failedToSaveRecord:(id)arg2 error:(id)arg3 ;
-(void)syncEngine:(id)arg1 didSaveRecordZone:(id)arg2 ;
-(void)syncEngine:(id)arg1 didDeleteRecordWithID:(id)arg2 ;
-(void)syncEngine:(id)arg1 failedToDeleteRecordWithID:(id)arg2 error:(id)arg3 ;
-(void)syncEngine:(id)arg1 didDeleteRecordZoneWithID:(id)arg2 ;
-(void)syncEngine:(id)arg1 failedToSaveRecordZone:(id)arg2 error:(id)arg3 ;
-(void)syncEngine:(id)arg1 failedToDeleteRecordZoneWithID:(id)arg2 error:(id)arg3 ;
-(id)syncEngine:(id)arg1 recordToSaveForRecordID:(id)arg2 ;
-(void)syncEngine:(id)arg1 didFetchRecord:(id)arg2 ;
-(void)syncEngine:(id)arg1 recordWithIDWasDeleted:(id)arg2 recordType:(id)arg3 ;
-(void)syncEngine:(id)arg1 zoneWithIDChanged:(id)arg2 ;
-(void)syncEngine:(id)arg1 zoneWithIDWasDeleted:(id)arg2 ;
-(void)syncEngine:(id)arg1 zoneWithIDWasPurged:(id)arg2 ;
-(VCCKApplicationStateObserver *)applicationObserver;
-(id)initWithContainer:(id)arg1 database:(id)arg2 applicationObserver:(id)arg3 ;
-(void)fetchAndModifyChangesInShortcutsZone;
-(void)fetchChangesInShortcutsZone;
-(void)fetchChangesInShortcutsZoneWithCompletion:(/*^block*/id)arg1 ;
-(void)modifyPendingChangesInShortcutsZoneWithCompletion:(/*^block*/id)arg1 ;
-(void)fetchAndModifyChangesInShortcutsZoneWithCompletion:(/*^block*/id)arg1 ;
-(CKRecordZoneID *)shortcutsZoneID;
-(void)createShortcutsZone;
-(id)workflowRecordForReference:(id)arg1 properties:(id)arg2 ;
-(void)sendChangedWorkflows;
-(void)sendChangedFolders;
-(void)sendWorkflowOrderingsIfNeeded;
-(void)sendSyncFlagsIfNeeded;
-(id)rootCollectionRecord;
-(id)workflowOrderingRecordForRecordID:(id)arg1 ;
-(id)syncFlagsRecord;
-(id)workflowRecordForRecordID:(id)arg1 ;
-(id)folderRecordForRecordID:(id)arg1 ;
-(void)handleSavedWorkflowOrderingRecord:(id)arg1 ;
-(void)handleSavedWorkflowRecord:(id)arg1 ;
-(void)handleSavedFolderRecord:(id)arg1 ;
-(void)handleSavedSyncFlagsRecord:(id)arg1 ;
-(void)handleDeletedRecordWithID:(id)arg1 ;
-(BOOL)mergeLocalOrderingChangesWithRemoteOrderingChangesFromOrderingRecord:(id)arg1 ;
-(void)applyLegacyOrderedWorkflowIDsToRootCollection:(id)arg1 ;
-(id)mergedOrderingFromLocalOrdering:(id)arg1 previousOrdering:(id)arg2 remoteOrdering:(id)arg3 ;
-(id)calculateSubsetForRemoteOrdering:(id)arg1 withLocalOrdering:(id)arg2 ;
-(void)handleFetchedCollectionOrderingRecord:(id)arg1 ;
-(void)handleFetchedLegacyOrderingRecord:(id)arg1 ;
-(void)handleNameConflictsForFetchedWorkflowRecord:(id)arg1 identifier:(id)arg2 shouldMarkFetchedRecordAsTombstone:(BOOL*)arg3 ;
-(void)handleFetchedWorkflowRecord:(id)arg1 ;
-(void)handleFetchedFolderRecord:(id)arg1 ;
-(void)handleFetchedSyncFlagsRecord:(id)arg1 ;
-(void)handleFetchedDeletionOfRecordWithID:(id)arg1 ;
-(void)updateSyncTokenInDatabaseWithBlock:(/*^block*/id)arg1 ;
-(void)handleSendWorkflowOrderingConflictWithClientRecord:(id)arg1 serverRecord:(id)arg2 ancestorRecord:(id)arg3 ;
-(void)handleSendSyncFlagsConflictWithClientRecord:(id)arg1 serverRecord:(id)arg2 ancestorRecord:(id)arg3 ;
-(void)handleSendWorkflowConflictWithClientRecord:(id)arg1 serverRecord:(id)arg2 ancestorRecord:(id)arg3 ;
-(void)handleSendFolderConflictWithClientRecord:(id)arg1 serverRecord:(id)arg2 ancestorRecord:(id)arg3 ;
-(void)handleServerRecordChangedError:(id)arg1 ;
-(void)handleUnknownItemErrorForRecord:(id)arg1 ;
-(void)syncEngine:(id)arg1 didReceiveDatabaseNotification:(id)arg2 ;
-(NSMutableDictionary *)workflowFilesForIdentifiers;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 27, 2020 at 11:44:52 AM Mountain Standard Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/CoreCDPInternal.framework/CoreCDPInternal
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue, CDPStateUIProviderInternal, CDPDCircleDelegate, CDPDCircleProxy;
@class CDPDCircleStateObserver, NSObject, NSArray;

@interface CDPDCircleController : NSObject {

	CDPDCircleStateObserver* _circleJoinObserver;
	NSObject*<OS_dispatch_queue> _requestSynchronizationQueue;
	NSObject*<OS_dispatch_queue> _retryQueue;
	unsigned long long _cliqueStatusRetryCount;
	NSArray* _retryIntervals;
	id<CDPStateUIProviderInternal> _uiProvider;
	NSObject*<CDPDCircleDelegate> _delegate;
	id<CDPDCircleProxy> _circleProxy;

}

@property (nonatomic,retain) id<CDPStateUIProviderInternal> uiProvider;                  //@synthesize uiProvider=_uiProvider - In the implementation block
@property (assign,nonatomic,__weak) NSObject*<CDPDCircleDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) id<CDPDCircleProxy> circleProxy;                            //@synthesize circleProxy=_circleProxy - In the implementation block
-(id)peerID;
-(unsigned long long)circleStatus;
-(id<CDPStateUIProviderInternal>)uiProvider;
-(void)dealloc;
-(id<CDPDCircleProxy>)circleProxy;
-(BOOL)synchronizeCircleViews;
-(void)joinCircleWithCompletion:(/*^block*/id)arg1 ;
-(void)setDelegate:(NSObject*<CDPDCircleDelegate>)arg1 ;
-(NSObject*<CDPDCircleDelegate>)delegate;
-(void)setCircleProxy:(id<CDPDCircleProxy>)arg1 ;
-(void)setUiProvider:(id<CDPStateUIProviderInternal>)arg1 ;
-(id)initWithUiProvider:(id)arg1 delegate:(id)arg2 circleProxy:(id)arg3 ;
-(void)useCircleInfoToUpdateNameForDevices:(id)arg1 ;
-(void)applyToJoinCircleWithJoinHandler:(/*^block*/id)arg1 ;
-(void)cancelApplicationToJoinCircle;
-(void)prepareCircleStateForRecovery;
-(void)joinCircleIgnoringBackups:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)_joinCircleIgnoringBackups:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)_requestToJoinAndWaitForSuccessWithHandler:(/*^block*/id)arg1 ;
-(void)promptForCredentials:(/*^block*/id)arg1 ;
-(BOOL)canRetryCliqueStatus;
-(long long)nextRetryInterval;
-(void)_silentReauthWithCompletion:(/*^block*/id)arg1 ;
-(id)_peerDeviceNamesByPeerID;
-(void)_requestToJoinWithObserver:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_requestCircleJoinWithObserver:(id)arg1 requestBlock:(/*^block*/id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_requestToJoinWithRequestBlock:(/*^block*/id)arg1 completion:(/*^block*/id)arg2 ;
-(void)resetCircleIncludingCloudKitData:(BOOL)arg1 cloudKitResetReasonDescription:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)_requestToJoinAfterRestoreAndWaitForSuccessWithHandler:(/*^block*/id)arg1 ;
@end


/*
                       * This header is generated by classdump-dyld 1.0
                       * on Monday, September 28, 2020 at 5:58:35 PM Mountain Standard Time
                       * Operating System: Version 14.0 (Build 18A373)
                       * Image Source: /System/Library/PrivateFrameworks/Memories.framework/Memories
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
                       */

#import <Memories/FlexCloudManager.h>

@protocol OS_dispatch_queue;
@class NSString, NSObject, NSMutableOrderedSet, NSMutableSet, NSMapTable;

@interface FlexMobileAssetManagerV2 : FlexCloudManager {

	NSString* _clientID;
	NSString* _mobileAssetTypeIdentifier;
	NSObject* _downloadThrottleLock;
	NSObject* _mobileAssetCacheLock;
	NSMutableOrderedSet* _pendingDownloadSet;
	NSMutableSet* _processingDownloadSet;
	NSMapTable* _dowloadOptionsMapping;
	NSMutableOrderedSet* _pendingPurgeSet;
	NSMutableSet* _processingPurgeSet;
	int _assetInstalledNotificationToken;
	int _catalogUpdatedNotificationToken;
	NSObject*<OS_dispatch_queue> _notificationQueue;
	BOOL _includeArtworkInQueries;
	BOOL _XMLPresent;
	NSObject*<OS_dispatch_queue> _purgeQueue;
	NSObject*<OS_dispatch_queue> _triggerDownloadAndPurgeQueue;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> purgeQueue;                                //@synthesize purgeQueue=_purgeQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> triggerDownloadAndPurgeQueue;              //@synthesize triggerDownloadAndPurgeQueue=_triggerDownloadAndPurgeQueue - In the implementation block
@property (assign,nonatomic) BOOL includeArtworkInQueries;                                           //@synthesize includeArtworkInQueries=_includeArtworkInQueries - In the implementation block
@property (assign,nonatomic) BOOL XMLPresent;                                                        //@synthesize XMLPresent=_XMLPresent - In the implementation block
+(id)assetWithNewestContentVersionInAssets:(id)arg1 preferInstalled:(BOOL)arg2 ;
+(id)_assetURLForMobileAsset:(id)arg1 ;
+(id)compatibilityFilterPredicate;
-(void)_purgeAsset:(id)arg1 ;
-(id)mobileAssetsForAssetPropertyType:(id)arg1 songUID:(id)arg2 ;
-(BOOL)_mobileAssetIsPurging:(id)arg1 ;
-(BOOL)_mobileAssetIsDownloading:(id)arg1 ;
-(void)_registerAndHandleSystemMobileAssetNotifications;
-(void)fetchAllSongsWithCompletion:(/*^block*/id)arg1 ;
-(void)_requeryForMobileAssetTypes:(unsigned long long)arg1 forUUIDs:(id)arg2 ;
-(void)setXMLPresent:(BOOL)arg1 ;
-(id)_mobileAssetQueryResultStringValue:(long long)arg1 ;
-(id)_metadataMappingForUUIDSet:(id)arg1 ;
-(void)_updateMetadataOnExistingSong:(id)arg1 usingAsset:(id)arg2 metadataAsset:(id)arg3 ;
-(void)_requeryForMobileAssetTypes:(unsigned long long)arg1 ;
-(id)mobileAssetsForAssetPropertyType:(id)arg1 ;
-(id)_newestContentSetFromAssets:(id)arg1 metadataMapping:(id)arg2 ;
-(id)filterByClientIDForAssets:(id)arg1 forMetadataMapping:(id)arg2 ;
-(void)_processResults:(id)arg1 metadataMapping:(id)arg2 ;
-(id)_mobileAssetDownloadOptionsForClientOptions:(id)arg1 ;
-(BOOL)XMLPresent;
-(id)_mobileAssetDownloadResultStringValue:(long long)arg1 ;
-(long long)_responseForDownloadResult:(long long)arg1 ;
-(void)_updateExistingSong:(id)arg1 usingAsset:(id)arg2 metadataAsset:(id)arg3 forceUpdate:(BOOL)arg4 ;
-(id)_assetIDForMobileAsset:(id)arg1 ;
-(id)_existingSongForUID:(id)arg1 ;
-(void)_updateExistingSong:(id)arg1 usingAsset:(id)arg2 metadataAsset:(id)arg3 ;
-(void)_loadBundledArtworkForSongID:(id)arg1 ;
-(void)_runNextAsyncAssetDownloadAndPurge;
-(void)_runAsyncAssetDownloadForMobileAsset:(id)arg1 ;
-(void)_dispatchNextAsyncAssetDownloadAndPurge;
-(id)_mobileAssetCancelDownloadResultStringValue:(long long)arg1 ;
-(void)cancelDownloadOfAsset:(id)arg1 ;
-(void)_loadBundledSongForSongID:(id)arg1 ;
-(id)_mobileAssetPurgeResultStringValue:(long long)arg1 ;
-(id)initWithLibrary:(id)arg1 options:(id)arg2 ;
-(id)loadCachedSongs;
-(void)loadAssetWithID:(id)arg1 forSongID:(id)arg2 ;
-(void)requestDownloadOfAsset:(id)arg1 withOptions:(id)arg2 ;
-(void)cancelDownloadOfAllAssets;
-(void)requestPurgeOfAsset:(id)arg1 ;
-(unsigned long long)assetStatus:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)purgeQueue;
-(void)setPurgeQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)triggerDownloadAndPurgeQueue;
-(void)setTriggerDownloadAndPurgeQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(BOOL)includeArtworkInQueries;
-(void)setIncludeArtworkInQueries:(BOOL)arg1 ;
@end

